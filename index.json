[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/App.js",
    "content": "\r\nimport {Route, Routes,Router } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport useCookie, { getCookie, setCookie } from 'react-use-cookie';\r\nimport OpusPage from './view/OpusPage';\r\nimport SqueletteHead from './component/general/SqueletteHead';\r\nimport SqueletteFoot from './component/general/SqueletteFoot';\r\nimport HomePage from './view/HomePage';\r\nimport SignInPage from './view/SignInPage';\r\nimport CompteAmateurPage from './view/CompteAmateurPage';\r\nimport FavArtists from './component/CompteAmateurPage/FavArtists';\r\nimport ArtistDetailpage from './view/ArtistDetailPage';\r\nimport Matching from './component/CompteAmateurPage/Matching';\r\nimport MatchingPage from './view/MatchingPage';\r\nimport ListeAmateurPage from './view/ListeAmateurPage';\r\nimport MatchingColor from './view/MatchingColor';\r\nimport MatchingImage from './view/MatchingImage';\r\nimport SignIn from './view/SignIn';\r\nimport LogIn from './view/LogIn';\r\nimport Atelier from './view/Atelier';\r\nimport Biography from './component/Atelier/Biography';\r\nimport ChatMenu from './component/Chat/ChatMenu';\r\nimport ChatModal from './component/Chat/ChatModal';\r\nimport GoToTop from \"./services/ScrollToTop\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport{ URLDayl} from \"./services/constantes\"\r\nimport axios from \"axios\"\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useParams } from 'react-router';\r\nimport UserInfo from './view/UserInfo';\r\nimport StartPage from './view/StartPage';\r\n\r\n/**\r\n * This component is the root of the project, it contains all the routes to the different pages\r\n\r\n */\r\n\r\nfunction App() {\r\n\r\n\r\n  const [paintId, setPaintId] = useState();\r\n  const [user, setUser] = useState(null);\r\n  const [isLogged, setIsLogged] = useState(false);\r\n   const [isActive, setIsActive] = useState(1);\r\n\r\n   //go to top of page on load\r\n useEffect(() => {\r\n    window.scrollTo(0,0);\r\n}, [paintId]);\r\n\r\nconsole.log(localStorage.getItem(\"id\"))\r\n//temporary get user on page refresh\r\nuseEffect(() => { \r\n\r\nif(localStorage.getItem(\"id\")){\r\n  \r\n  axios.get(URLDayl + `users/${localStorage.getItem(\"id\")}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n    ).then((response) => {\r\n      setUser(response.data)\r\n    console.log(response.data);\r\n      setIsLogged(true)\r\n    });}\r\n \r\n}, []);\r\n\r\n// if(!user){\r\n//   return(<div style={{bottom: \"50%\",left: \"50%\", position: \"absolute\"}}><ReactLoading color={\"#E9573F\"} type={\"spin\"} height={\"40px\"} width={\"40px\"}  /></div>)\r\n// }\r\n\r\n  return (  \r\n    <div>\r\n        <ToastContainer autoClose={false} draggableDirection=\"y\" style={{zIndex : \"99999999\", fontSize: \"14px\"}}/>\r\n\r\n    <div className=\"App\" >\r\n      \r\n\r\n      <SqueletteHead isActive={isActive} setIsActive={setIsActive} user={user} setUser = {setUser} isLogged={isLogged}/>\r\n     \r\n      <Routes>\r\n\r\n        <Route path=\"/\" element={<HomePage paintId={paintId} user={user} isLogged={isLogged} setUser={setUser} />} />\r\n        <Route path=\"/StartingPage\" element={<StartPage paintId={paintId} user={user} isLogged={isLogged} setUser={setUser} />} />\r\n        {/* <Route path=\"view/SignInPage.js\" element={isLogged ? <CompteAmateurPage user={user} setUser={setUser} /> : <SignInPage user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser}/>} /> */}\r\n        <Route path=\"view/CompteAmateurPage.js\" element={<CompteAmateurPage isActive={isActive} setIsActive={setIsActive} user={user} setUser={setUser} setIsLogged={setIsLogged} isLogged={isLogged}/>} />\r\n        <Route path=\"view/LogIn.js\" element={/* isLogged ? <CompteAmateurPage user={user} setUser={setUser} setIsLogged={setIsLogged} isLogged={isLogged} /> :  */<LogIn isActive={isActive} setIsActive={setIsActive} user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser} />} />\r\n        <Route path=\"view/SignIn.js\" element={/* isLogged ? <CompteAmateurPage user={user} setUser={setUser} setIsLogged={setIsLogged} isLogged={isLogged} /> : */ <SignIn isActive={isActive} setIsActive={setIsActive} user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser} />} />\r\n        <Route path=\"component/CompteAmateurPage/FavArtists.js\" element={<FavArtists />} />\r\n        <Route path=\"view/OpusPage.js/:id\" element={<OpusPage paintId={paintId} setPaintId={setPaintId} user={user} setUser={setUser} isLogged={isLogged} />} />\r\n        <Route path=\"view/MatchingPage.js/:id\" element={<MatchingPage user={user} paintId={paintId} setPaintId={setPaintId} setUser={setUser} isLogged={isLogged} />} />\r\n        <Route path=\"view/ArtistDetailPage.js/:id\" element={<ArtistDetailpage paintId={paintId} setPaintId={setPaintId} user={user} setUser={setUser} isLogged={isLogged} />} />\r\n        <Route path=\"view/ListeAmateurPage.js/:id\" element={<ListeAmateurPage paintId={paintId} user={user} isLogged={isLogged} />} />\r\n        <Route path=\"view/MatchingImage.js\" element={<MatchingImage user={user} paintId={paintId} setPaintId={setPaintId} setUser={setUser} isLogged={isLogged}/>} />\r\n        <Route path=\"view/MatchingColor.js\" element={<MatchingColor user={user} paintId={paintId} setPaintId={setPaintId} setUser={setUser} isLogged={isLogged} />} />\r\n        <Route path=\"view/Atelier.js\" element={<Atelier user={user} setUser={setUser} setIsLogged={setIsLogged} isLogged={isLogged} />} />\r\n        <Route path=\"view/UserInfo.js\" element={<UserInfo user={user} setUser={setUser} setIsLogged={setIsLogged} isLogged={isLogged} />} />\r\n      </Routes>\r\n      {/* <ChatMenu /> */}\r\n      {/* <ChatModal/> */}\r\n      <SqueletteFoot />\r\n<GoToTop/>\r\n\r\n    \r\n    </div >\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/App.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "App",
    "memberof": "src/App.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/App.js~App",
    "access": "public",
    "export": true,
    "importPath": "client/src/App.js",
    "importStyle": "App",
    "description": "This component is the root of the project, it contains all the routes to the different pages ",
    "lineNumber": 39,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/App.test.js",
    "content": "import { render, screen } from '@testing-library/react';\r\nimport App from './App';\r\n\r\ntest('renders learn react link', () => {\r\n  render(<App />);\r\n  const linkElement = screen.getByText(/learn react/i);\r\n  expect(linkElement).toBeInTheDocument();\r\n});\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/App.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "file",
    "name": "src/component/ArtistDetailPage/Artist.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { Link } from \"react-router-dom\";\r\n// import verif from \"../../webapp/img/icons/badge_verified-account_1.svg\"\r\nimport { toast } from \"react-toastify\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport ListPaintArtist from \"./ListPaintArtist\";\r\nimport SimilarArtist from \"./SimilarArtist\";\r\nimport Biography from \"./Biography\";\r\n\r\n\r\n/**\r\n * Display information about the artist and child components in tabs\r\n<<<<<<< HEAD\r\n * @emits - artist/byIdtf/{idtf} : get painter informations \r\n * @emits - artistLiked/add(remove)FavoriteArtist/ : follow/unfollow artist\r\n * @emits - users/{id} : refresh user info\r\n=======\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {boolean} isLogged - test if the user is logged\r\n * @param {number} paintId - selected artist Id\r\n>>>>>>> 55f35f17bc67aa49f640641f3e5752647ea26c86\r\n */\r\n export default function Artist({ user, setUser, paintId, isLogged }) {\r\n\r\n\tconst [artist, setArtist] = useState([]);\r\n\tconst [bg, setBg] = useState(\"\");\r\n\tconst [refreshKey, setRefreshKey] = useState(0);\r\n\tconst [boolLike, setBoolLike] = useState(false);\r\n\tconst [isActive, setIsActive] = useState(1);\r\n\r\n\r\n\t//get info painter//\r\n\tuseEffect(() => {\r\n\t\taxios.get(URLDayl + `artist/byIdtf/${paintId}`, {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n\t\t\t.then((response) => {\r\n\t\t\t\tsetArtist(response.data);\r\n\r\n\r\n\t\t\t});\r\n\r\n\r\n\t}, [paintId]);\r\n\r\n\r\n\r\n\t//get random image for background//\r\n\tuseEffect(() => {\r\n\t\tconst randInt = Math.floor(Math.random() * (artist.numberOfPAinting - 1) + 1);\r\n\r\n\r\n\t\tif (randInt !== NaN) {\r\n\t\t\tsetBg(\"image_\" + randInt + \".jpg\");\r\n\r\n\t\t}\r\n\r\n\t}, [artist]);\r\n\r\n\t//Changement onglet\r\n\tconst toggleClass = (val) => {\r\n\t\tsetIsActive(val);\r\n\r\n\r\n\t};\r\n\r\n\t//Test Follow//\r\n\tuseEffect(() => {\r\n\r\n\t\tif (user && artist) {\r\n\t\t\tfor (let i = 0; i < user.artistLiked.length; i++) {\r\n\r\n\t\t\t\tif (user.artistLiked[i] === artist.id) {\r\n\t\t\t\t\tsetBoolLike(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}, [artist]);\r\n\r\n\t//Follow/Unfollow l'artiste//\r\n\tfunction follow() {\r\n\t\tif (user && artist) {\r\n\r\n\r\n\t\t\tif (boolLike === false)\r\n\t\t\t\tsetBoolLike(true)\r\n\t\t\telse\r\n\t\t\t\tsetBoolLike(false)\r\n\r\n\r\n\r\n\r\n\t\t\tif (user) {\r\n\t\t\t\tif (boolLike === false)\r\n\t\t\t\t\taxios.get(URLDayl + `artistLiked/addFavoriteArtist/${user.id}/${artist.id}`, {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\tsetBoolLike(true)\r\n\r\n\r\n\t\t\t\t\t\t});\r\n\t\t\t\telse\r\n\t\t\t\t\taxios.get(URLDayl + `artistLiked/deleteFavoriteArtist/${user.id}/${artist.id}`, {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\tsetBoolLike(false)\r\n\r\n\t\t\t\t\t\t\tconsole.log(response.data)\r\n\t\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttoast.warning(\"Connectez-vous pour suivre cet artiste!\", {\r\n\t\t\t\tposition: \"top-right\",\r\n\t\t\t\tautoClose: 3000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tprogress: undefined,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t//refresh user\r\n\t\tif (user)\r\n\t\t\taxios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n\t\t\t)\r\n\t\t\t\t.then((response2) => {\r\n\r\n\t\t\t\t\tsetUser(response2.data)\r\n\t\t\t\t});\r\n\r\n\t\tsetRefreshKey(oldKey => oldKey + 1);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"Artist\">\r\n\r\n\t\t\t{/* <!-- ******************************************************\r\n\t\t\tSECTION PRÉSENTATION DE L'ARTISTE - début\r\n\t\t\t****************************************************** --> */}\r\n\t\t\t<section className=\"center-col\">\r\n\r\n\t\t\t\t<div className=\"cont-f-w artistBg\" style={{ backgroundImage: `url(${URLDayl}images/content/${artist && artist.functionalId}/${bg})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\" }}></div>\r\n\r\n\t\t\t\t<div className=\"cont-n-w center-col artistBox\">\r\n\r\n\t\t\t\t\t<ol className=\"topBcCenter mb-b\" style={{ padding: \"0 0 20px 0\" }}>\r\n\t\t\t\t\t\t<li><Link to=\"../../\">Accueil</Link></li>\r\n\t\t\t\t\t\t<li className=\"#\"><a>Artistes</a></li>\r\n\t\t\t\t\t\t<li className=\"#\">{artist.firstName}</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t\t{/* <!-- Suivre cet artiste - début --> */}\r\n\t\t\t\t\t<ul className=\"inlineList mb-c\">\r\n\t\t\t\t\t\t{boolLike === false && <li><button className=\"followArtist\" onClick={follow} type=\"button\" value=\"#\">&#x2b;&nbsp;&nbsp; Suivre</button></li>}\r\n\t\t\t\t\t\t{boolLike === true && <li><button className=\"followedArtist\" onClick={follow} type=\"button\" value=\"#\">&#x2713;&nbsp;&nbsp; Suivi</button></li>}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t{/* <!-- Suivre cet artiste - fin -->\r\n\t\t\t\t\t<!-- Nom de l'artiste - début --> */}\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t<span>{artist && artist.name}</span>\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t{/* <!-- Nom de l'artiste - fin -->\r\n\t\t\t\t\t<!-- Données rapides de l'artiste - début --> */}\r\n\t\t\t\t\t<div className=\"artistQuickFacts\">\r\n\t\t\t\t\t\t<span>{artist && artist.yearBirth} - {artist && artist.yearDeath}</span>\r\n\t\t\t\t\t\t<span>&nbsp;|&nbsp;</span>\r\n\t\t\t\t\t\t<span>{artist && artist.country}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <!-- Données rapides de l'artiste - fin -->\r\n\t\t\t\t\t<!-- Bio de l'artiste - début --> */}\r\n\t\t\t\t\t<p>{artist && artist.description}</p>\r\n\t\t\t\t\t{/* <!-- Bio de l'artiste - fin -->\r\n\t\t\t\t\t\r\n\t\t\t\t\t<!-- Suivre cet artiste - début --> */}\r\n\r\n\r\n\t\t\t\t\t<ul className=\"inlineList mt-b mb-a\">\r\n\t\t\t\t\t\t<li><a onClick={(e) => setIsActive(1)} className={isActive === 1 ?\"tabLink active\" : \"tabLink\"}>Oeuvres</a></li>\r\n\t\t\t\t\t\t<li><a onClick={(e) => setIsActive(2)} className={isActive === 2 ?\"tabLink active\" : \"tabLink\"}>Biographie</a></li>\r\n\t\t\t\t\t\t<li><a onClick={(e) => setIsActive(3)} className={isActive === 3 ?\"tabLink active\" : \"tabLink\"}>Avis d'experts</a></li>\r\n\t\t\t\t\t\t<li><a onClick={(e) => setIsActive(4)} className={isActive === 4 ?\"tabLink active\" : \"tabLink\"}>Analyse chromatiques</a></li>\r\n\t\t\t\t\t\t<li><a onClick={(e) => setIsActive(5)} className={isActive === 5 ?\"tabLink active\" : \"tabLink\"}>Actualités</a></li>\r\n\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t{/* <!-- Suivre cet artiste - fin --> */}\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t{isActive === 1 && <div>\r\n\t\t\t\t<ListPaintArtist paintId={paintId} user={user} setUser={setUser} isLogged={isLogged} />\r\n\t\t\t\t<SimilarArtist paintId={paintId} />\r\n\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{isActive === 2 && <div>\r\n\t\t\t\t<Biography bg={bg} artist={artist}/>\r\n\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{isActive === 3 && <div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{isActive === 4 && <div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t{/* <!-- SECTION PRÉSENTATION DE L'ARTISTE - fin --> */}\r\n\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/ArtistDetailPage/Artist.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "Artist",
    "memberof": "src/component/ArtistDetailPage/Artist.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/ArtistDetailPage/Artist.js~Artist",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/ArtistDetailPage/Artist.js",
    "importStyle": "Artist",
    "description": "Display information about the artist and child components in tabs\n<<<<<<< HEAD",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "selected artist Id\n>>>>>>> 55f35f17bc67aa49f640641f3e5752647ea26c86"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "artist/byIdtf/{idtf} : get painter informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "artistLiked/add(remove)FavoriteArtist/ : follow/unfollow artist"
      },
      {
        "types": [
          "*"
        ],
        "description": "users/{id} : refresh user info\n======="
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/component/ArtistDetailPage/Biography.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport lecar from \"../../webapp/temp/lecar_1.jpg\"\r\n\r\n\r\n/**\r\n * Artist Biography in ArtistPage\r\n * @param {string} bg - random image from this artist\r\n * @param {object} artist - artist informations from api\r\n */\r\n\r\nexport default function Biography({bg, artist}) {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Biography\" >\r\n\r\n\r\n            {/* <!-- Biographie debut\r\n******************************************************* --> */}\r\n            <section className=\"center-col mt-c mb-d\">\r\n\r\n                <div className=\"RandomQuickFactBox cont-l-w mb-d\">\r\n\r\n                    <div>\r\n                      \r\n                       \r\n                    </div>\r\n\r\n                    <div className=\"col artistPortrait\" style={{ backgroundImage: `url(${URLDayl}images/content/${artist && artist.functionalId}/${bg})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\" }}>\r\n                        {/* <p>{artist.name}, craie sur papier par Ottavio Leoni, vers 1621, Florence, bibliothèque Marucelliana</p> */}\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                     \r\n                        <p>Michelangelo Merisi da Caravaggio, francisé Caravage ou le Caravage, est un peintre italien, né le 29 septembre 1571 à Milan et mort le 18 juillet 1610 à Porto Ercole.<br /><br />Son œuvre puissante et novatrice révolutionne la peinture du xviie siècle par son caractère naturaliste, son réalisme parfois brutal et l'emploi appuyé de la technique du clair-obscur allant jusqu'au ténébrisme. Il connaît la célébrité de son vivant et influence nombre de grands peintres après lui, comme en témoigne l'apparition du caravagisme.<br /><br />Après une longue période d'oubli critique, il faut attendre le début du xxe siècle pour que le génie de Caravage soit pleinement reconnu, indépendamment de sa réputation sulfureuse.</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </section>\r\n            {/* <!-- Biographie - fin --> */}\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/ArtistDetailPage/Biography.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "Biography",
    "memberof": "src/component/ArtistDetailPage/Biography.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/ArtistDetailPage/Biography.js~Biography",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/ArtistDetailPage/Biography.js",
    "importStyle": "Biography",
    "description": "Artist Biography in ArtistPage",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bg",
        "description": "random image from this artist"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "artist",
        "description": "artist informations from api"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "src/component/ArtistDetailPage/ListPaintArtist.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport artist from \"../../webapp/img/icons/ico_artists_2.svg\"\r\nimport filter from \"../../webapp/img/icons/ico_filters_3.svg\"\r\nimport { Link } from \"react-router-dom\";\r\nimport ListModal from \"../general/ListModal\";\r\nimport Fav from \"../general/Fav\";\r\n\r\n/**\r\n * Paint list of this artist\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {number} paintId - artist ID\r\n * @param {boolean} isLogged - test if the user is logged\r\n * @emits - paintingEntity/byArtist/{paintId} : get paint list of this artist\r\n * @emits - users/{id} : refresh user info\r\n\r\n */\r\n\r\nexport default function ListPaintArtist({ user, setUser, paintId, isLogged }) {\r\n\r\n\t// const [listPaintArtist, setListPaintArtist] = useState([]);\r\n\t// const [refreshKey, setRefreshKey] = useState(0);\r\n\t// const [orderDate, setOrderDate] = useState(0);\r\n\t// const [tempList, setTempList] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n\t// //get list paint artist//\r\n\t// useEffect(() => {\r\n\r\n\r\n\t// \taxios.get(URLDayl + `paintingEntity/byArtist/${paintId}/0`).then((response) => {\r\n\t// \t\tsetListPaintArtist(response.data);\r\n\r\n\t// \t\tconst boolArray = response.data.map((el) => { return { ...el, bool: false, boolList: false } });\r\n\r\n\t// \t\tsetTempList(boolArray)\r\n\r\n\t// \t\tsetListPaintArtist(boolArray)\r\n\t// \t});\r\n\t// }, [paintId]);\r\n\r\n\r\n\r\n\t// //update user\r\n\t// useEffect(() => {\r\n\t// \tif (user)\r\n\t// \t\taxios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n\t// \t\t).then((response) => { setUser(response.data) });\r\n\r\n\r\n\t// }, [refreshKey]);\r\n\r\n\t// // Call Jquery script\r\n\t// useEffect(() => {\r\n\t// \tconst loadFile = async () => {\r\n\t// \t\tconst { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n\t// \t\tconst { grid } = await import(\"../../webapp/js/gridActions.min.js\");\r\n\r\n\t// \t\tmodal();\r\n\t// \t\tgrid();\r\n\t// \t};\r\n\t// \tloadFile();\r\n\t// }, []);\r\n\r\n\t// //fonction de tri par date\r\n\t// function handleOrderDate() {\r\n\t// \tlet bufferOrder;\r\n\t// \tlet bufferOrder2;\r\n\t// \tif (orderDate === 0) {\r\n\t// \t\t//tri ordre decroissant\r\n\t// \t\tsetListPaintArtist(listPaintArtist.sort((a, b) => b.year - a.year));\r\n\r\n\t// \t\tsetOrderDate(1);\r\n\t// \t}\r\n\t// \telse if (orderDate === 1) {\r\n\t// \t\t//on stock les oeuvres dont la date = 0 ou null\r\n\t// \t\tbufferOrder = listPaintArtist.filter(function (paint) { return paint.year === null || paint.year === 0; })\r\n\r\n\t// \t\t//tri ordre croissant sans les 0 et null\r\n\t// \t\tbufferOrder2 = listPaintArtist.filter(function (paint) { return paint.year > 0; }).sort((a, b) => a.year - b.year);\r\n\t// \t\tconsole.log(bufferOrder2)\r\n\r\n\t// \t\t//on rajoute les oauvres trié au tableau de 0\r\n\t// \t\tbufferOrder.unshift(...bufferOrder2)\r\n\r\n\t// \t\tsetListPaintArtist(bufferOrder)\r\n\t// \t\tsetOrderDate(1);\r\n\r\n\t// \t\tsetOrderDate(2);\r\n\t// \t}\r\n\t// \telse if (orderDate === 2) {\r\n\t// \t\tsetListPaintArtist(tempList);\r\n\t// \t\tsetOrderDate(0);\r\n\t// \t}\r\n\t// }\r\n\r\n\r\n\t// return (\r\n\t// \t<div className=\"ListPaintArtist\">\r\n\t// \t\t{/* <!-- ******************************************************\r\n\t// \t\tGRILLE AUTRES OEUVRES DE CET.TE ARTISTE - début\r\n\t// \t\t****************************************************** --> */}\r\n\t// \t\t<section className=\"center-col\">\r\n\r\n\t// \t\t\t<div className=\"cont-l-w rowSpaceBetween\" style={{ marginTop: \"20px\", alignItems: \"flex-start\" }}>\r\n\t// \t\t\t\t<div>\r\n\t// \t\t\t\t\t<h2>Oeuvres de {listPaintArtist.length > 0 && listPaintArtist[0].artisteName} : </h2></div>\r\n\t// \t\t\t\t{/* <!-- Bouton matching par année (+ ancien au + récent) - début --> */}\r\n\t// \t\t\t\t<button className={orderDate === 0 ? \"orderByDate\" : orderDate === 1 ? \"orderByDateDown\" : \"orderByDateUp\"} onClick={handleOrderDate}>{orderDate === 0 ?\"Tri par date\" : orderDate === 1 ? \"Tri croissant\" : \"Tri décroissant\"}</button>\r\n\t// \t\t\t\t{/* <!-- Bouton matching par année (+ ancien au + récent) - fin --> */}\r\n\t// \t\t\t\t{/* <!-- Choix du type de grille - début --> */}\r\n\t// \t\t\t\t<ul className=\"gridColsType\">\r\n\t// \t\t\t\t\t<li><button type=\"button\" className=\"go2Cols\">2</button></li>\r\n\t// \t\t\t\t\t<li><button type=\"button\" className=\"go4Cols\">4</button></li>\r\n\t// \t\t\t\t\t<li><button type=\"button\" className=\"go6Cols\">6</button></li>\r\n\t// \t\t\t\t\t<li>colonnes par ligne</li>\r\n\t// \t\t\t\t</ul>\r\n\t// \t\t\t\t{/* <!-- Choix du type de grille - début --> */}\r\n\r\n\t// \t\t\t\t<div>\r\n\t// \t\t\t\t\t<ul>\r\n\t// \t\t\t\t\t\t<li>\r\n\r\n\t// \t\t\t\t\t\t\t{/* <!-- Modal filtrer matching - début --> */}\r\n\t// \t\t\t\t\t\t\t{/* <div className=\"smart-modal\">\r\n\t// \t\t\t\t\t\t\t\t<a data-target=\"modalFiltrer\" className=\"smart-modal-open\"><img className=\"img-left\" src={filter} alt=\"Trier\" /><span>Filtrer</span></a>\r\n\r\n\t// \t\t\t\t\t\t\t\t<div id=\"modalFiltrer\" className=\"smart-modal-content scrollAuto\">\r\n\t// \t\t\t\t\t\t\t\t\t<h3>Filtres disponibles</h3>\r\n\t// \t\t\t\t\t\t\t\t\t<a className=\"smart-modal-close\"><img className=\"img-left\" src={close} alt=\"Trier\" /></a>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t// \t\t\t\t\t\t\t\t\t<div>\r\n\t// \t\t\t\t\t\t\t\t\t\t<form id=\"fineMatching\" className=\"fineMatching\" method=\"post\" action=\"#\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<select id=\"licence\" name=\"licence\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Licence</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Domaine public\">Domaine public</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"saab\">Oeuvres protégées</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t// \t\t\t\t\t\t\t\t\t\t</form>\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t// \t\t\t\t\t\t\t\t\t<div>\r\n\t// \t\t\t\t\t\t\t\t\t\t<form id=\"fineMatching\" className=\"fineMatching\" method=\"post\" action=\"#\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<select id=\"style\" name=\"style\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Style</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Pointillism\">Pointillism</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Renaissance\">Renaissance</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Symbolism\">Symbolism</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Assemblage\">Assemblage</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t// \t\t\t\t\t\t\t\t\t\t</form>\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t// \t\t\t\t\t\t\t\t\t<div>\r\n\t// \t\t\t\t\t\t\t\t\t\t<form id=\"fineMatching\" className=\"fineMatching mb-a\" method=\"post\" action=\"#\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<select id=\"genre\" name=\"genre\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Genre</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Transport and industry\">Transport and industry</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Fashion and costume\">Fashion and costume</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Natural world\">Natural world</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Science and knowledge\">Science and knowledge</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t// \t\t\t\t\t\t\t\t\t\t</form>\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t// \t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t</div> */}\r\n\t// \t\t\t\t\t\t\t{/* <!-- Modal filtrer matching - fin --> */}\r\n\r\n\t// \t\t\t\t\t\t</li>\r\n\r\n\t// \t\t\t\t\t</ul>\r\n\t// \t\t\t\t</div>\r\n\t// \t\t\t</div>\r\n\r\n\t// \t\t\t{/* <!-- Modal artistes matchés & filtrer le matching - début --> */}\r\n\t// \t\t\t<div className=\"cont-l-w\">\r\n\t// \t\t\t\t<div className=\"itemGallery mt-a\">\r\n\t// \t\t\t\t\t<div className=\"gridContent items\">\r\n\t// \t\t\t\t\t\t{listPaintArtist.length > 0 &&\r\n\t// \t\t\t\t\t\t\tlistPaintArtist.map((listPaint, index) => (\r\n\r\n\t// \t\t\t\t\t\t\t\t<div className=\"item\">\r\n\t// \t\t\t\t\t\t\t\t\t<div className=\"base\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${listPaint.artistId}/${listPaint.urlImage})` }}>\r\n\t// \t\t\t\t\t\t\t\t\t\t<button id=\"itemCommentState\" className=\"comment yes\" type=\"button\" value=\"notComment\"></button>\r\n\t// \t\t\t\t\t\t\t\t\t\t<Fav user={user} isLogged={isLogged} favPaint={listPaint} />\r\n\t// \t\t\t\t\t\t\t\t\t\t<ListModal user={user} isLogged={isLogged} listPaint={listPaint} />\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t\t\t<div className=\"hidden\">\r\n\t// \t\t\t\t\t\t\t\t\t\t<div className=\"revealShadow\"></div>\r\n\t// \t\t\t\t\t\t\t\t\t\t<h3 className=\"itemArtist\">{listPaint.artisteName}</h3>\r\n\t// \t\t\t\t\t\t\t\t\t\t<h4 className=\"itemName\">{listPaint.name}</h4>\r\n\t// \t\t\t\t\t\t\t\t\t\t<div className=\"itemYear\">{listPaint.year}</div>\r\n\t// \t\t\t\t\t\t\t\t\t\t<ul className=\"hListGridItem\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"smart-modal\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"GridviewItem\" to={`../../view/OpusPage.js/${listPaint.id}`} state={listPaint.id} >\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\tVoir\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"GridmakeMatch\" to={`../../view/MatchingPage.js/${listPaint.id}`} state={listPaint.id} >\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\tmatch\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t// \t\t\t\t\t\t\t\t\t\t</ul>\r\n\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t// \t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t))}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// \t\t\t\t\t</div>\r\n\t// \t\t\t\t</div>\r\n\t// \t\t\t\t{/* <!-- items row - fin --> */}\r\n\t// \t\t\t</div>\r\n\r\n\t// \t\t\t<div className=\"cont-l-w center-tex\">\r\n\t// \t\t\t\t<a className=\"viewMore\">Voir plus</a>\r\n\t// \t\t\t</div>\r\n\r\n\t// \t\t</section>\r\n\t// \t\t{/* <!-- GRILLE AUTRES OEUVRES DE CET.TE ARTISTE - fin --> */}\r\n\t// \t</div>\r\n\r\n\t// );\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/ArtistDetailPage/ListPaintArtist.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "ListPaintArtist",
    "memberof": "src/component/ArtistDetailPage/ListPaintArtist.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/ArtistDetailPage/ListPaintArtist.js~ListPaintArtist",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/ArtistDetailPage/ListPaintArtist.js",
    "importStyle": "ListPaintArtist",
    "description": "Paint list of this artist",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "artist ID"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/byArtist/{paintId} : get paint list of this artist"
      },
      {
        "types": [
          "*"
        ],
        "description": "users/{id} : refresh user info"
      }
    ],
    "return": null
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/component/ArtistDetailPage/SimilarArtist.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n/**\r\n * List of similar artists\r\n *  @param {number} paintId - artist ID\r\n * @emits - similarArtists/findByArtistId/${paintId}/?numberOfArtists=49 : get list of similar artists\r\n */\r\nexport default function SimilarArtist({paintId }) {\r\n\r\n    const [listSimilarArtist, setListSimilarArtist] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(URLDayl + `similarArtists/findByArtistId/${paintId}/?numberOfArtists=49`).then((response) => {\r\n            setListSimilarArtist(response.data);\r\n\r\n            console.log(response.data)\r\n\r\n        });\r\n    }, [paintId]);\r\n\r\n    return (\r\n        <div className=\"SimilarArtist\">\r\n\r\n            <section id=\"#\" className=\"center-col\">\r\n                <div className=\"cont-l-w center-tex\">\r\n                    <h2>Artistes similaires</h2>\r\n                    <p>Découvrez d'autres oeuvres</p>\r\n\r\n                    <div className=\"accountArtists mt-b\">\r\n\r\n\r\n                        {listSimilarArtist.length > 0 &&\r\n                            listSimilarArtist.map((listSimilar) => {\r\n                                if (listSimilar.artistDisplayDTO == null) {\r\n                                    return null\r\n                                }\r\n\r\n                                return (\r\n                                    <div className=\"item\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${listSimilar.artistDisplayDTO != null && listSimilar.artistDisplayDTO.functionalId}/${listSimilar.artistDisplayDTO != null && listSimilar.artistDisplayDTO.backgroundImage})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\" }}>\r\n                                        {/* <div className=\"base\" > */}\r\n                                        {/* <div className=\"img-wrapper\"> */}\r\n                                        <div className=\"name\">{listSimilar.artistDisplayDTO != null && listSimilar.artistDisplayDTO.name}</div>\r\n                                        <div className=\"items-count\">{listSimilar.artistDisplayDTO && listSimilar.artistDisplayDTO.numberOfPAinting} Oeuvres</div>\r\n                                        <Link className=\"discover\" to={`../../view/ArtistDetailPage.js/${listSimilar.artistDisplayDTO.functionalId}`} state={listSimilar.artistDisplayDTO.functionalId} ></Link>\r\n                                        {/* <img src={`https://art.novagen.tech/medias/artist/${listSimilar.artistDisplayDTO != null && listSimilar.artistDisplayDTO.functionalId}/_mini/${listSimilar.artistDisplayDTO != null && listSimilar.artistDisplayDTO.backgroundImage}`} alt=\"Nom de l'artiste\" /> */}\r\n                                        {/* </div> */}\r\n                                        {/* </div> */}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </section>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/ArtistDetailPage/SimilarArtist.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "SimilarArtist",
    "memberof": "src/component/ArtistDetailPage/SimilarArtist.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/ArtistDetailPage/SimilarArtist.js~SimilarArtist",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/ArtistDetailPage/SimilarArtist.js",
    "importStyle": "SimilarArtist",
    "description": "List of similar artists",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "artist ID"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "similarArtists/findByArtistId/${paintId}/?numberOfArtists=49 : get list of similar artists"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/component/Atelier/Accueil.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport \"../../webapp/css/atelier.css\"\r\n\r\n\r\n\r\n/**\r\n * Page to update your artist Account\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n */\r\nexport default function Accueil({ user, setUser, isLogged }) {\r\n\r\n\r\n\r\n\r\n\r\n    // // Call Jquery script\r\n    // useEffect(() => {\r\n    //     const loadFile = async () => {\r\n    //         const { stat } = await import(\"../../webapp/js/stats.min.js\");\r\n\r\n\r\n    //         stat();\r\n    //     };\r\n    //     loadFile();\r\n    // }, []);\r\n\r\n\r\n    // return (\r\n\r\n    //     <div className=\"Accueil\">\r\n    //         <main class=\"workShopMain\">\r\n\r\n    //             <h2 className=\"workShopWelcome\">Bonjour ,</h2>\r\n    //             <p>Bienvenue dans votre atelier Dayl.art. Dans cet espace vous pourrez … Grâce aux technologie de reconnaissance d’image les plus avancées vous pourrez rapprochez vos peintures …</p>\r\n\r\n    //             {/* <!-- SECTION PARTAGER UNE PENSEE - début --> */}\r\n    //             <section className=\"mt-c\">\r\n    //                 <h3 className=\"mt-a\">Une pensée à partager ?</h3>\r\n    //             </section>\r\n    //             {/* <!-- SECTION PARTAGER UNE PENSEE - fin --> */}\r\n\r\n    //             {/* <!-- SECTION STATISTIQUES RAPIDES ATELIER - début --> */}\r\n    //             <section className=\"mt-c\">\r\n    //                 <h3>Ce mois-ci, dans votre atelier :</h3>\r\n    //                 <div className=\"itemCounters\">\r\n    //                     <article>\r\n    //                         <div className=\"itemCounter\" data-target=\"12\"></div>\r\n    //                         <h4>Image ajoutées</h4>\r\n    //                     </article>\r\n    //                     <article>\r\n    //                         <div className=\"itemCounter\" data-target=\"3\"></div>\r\n    //                         <h4>Brouillons</h4>\r\n    //                     </article>\r\n    //                     <article>\r\n    //                         <div className=\"itemCounter\" data-target=\"6\"></div>\r\n    //                         <h4>Peintures</h4>\r\n    //                     </article>\r\n    //                     <article>\r\n    //                         <div className=\"itemCounter\" data-target=\"17\"></div>\r\n    //                         <h4>j’aimes</h4>\r\n    //                     </article>\r\n    //                 </div>\r\n    //             </section>\r\n    //             {/* <!-- SECTION STATISTIQUES RAPIDES ATELIER - fin --> */}\r\n\r\n    //             {/* <!-- SECTION DERNIERES IMAGES AJOUTEES - début --> */}\r\n    //             <section class=\"mt-c\">\r\n    //                 <h3>Dernières images ajoutées</h3>\r\n    //                 <p>Vous trouverez ci-dessous les dernières images que vous avez ajoutées. Vous pouvez commencer à renseigner ces nouvelles images, en ajouter ou en supprimer. Créez les descriptifs de vos peintures , publiez et partagez les en ligne.</p>\r\n    //                 {/* <!-- item grid type 2 - début --> */}\r\n    //                 <div class=\"itemGridType-2\">\r\n    //                     {/* <!-- item - début --> */}\r\n    //                     <div class=\"itemBox\" style={{ backgroundImage: \"url('temp/leonora_more_1.jpg')\", backgroundPosition: \"50% center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }}>\r\n    //                         <div class=\"dataModify\"><img src=\"img/icons/atelier_side_edit_1.svg\" alt=\"Modifier\" /></div>\r\n    //                         <input type=\"button\" class=\"unfollow\" value=\"\" /* onclick=\"openCloseNextDiv(this);\" */ />\r\n    //                         <div class=\"deleteConfirm\">\r\n    //                             <span class=\"deleteText\">Supprimer?</span>\r\n    //                             <button type=\"button\" class=\"yes closeTwoParentsNow\" value=\"\">Oui</button>\r\n    //                             <button type=\"button\" class=\"no closeParentNow\" value=\"\">Non</button>\r\n    //                         </div>\r\n    //                     </div>\r\n    //                     {/* <!-- item - fin --> */}\r\n    //                     {/* <!-- item - début --> */}\r\n    //                     <div class=\"itemBox\" style={{ backgroundImage: \"url('temp/leonora_more_1.jpg')\", backgroundPosition: \"50% center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }}>\r\n    //                         <div class=\"dataModify\"><img src=\"img/icons/atelier_side_edit_1.svg\" alt=\"Modifier\" /></div>\r\n    //                         <input type=\"button\" class=\"unfollow\" value=\"\" /* onclick=\"openCloseNextDiv(this);\" */ />\r\n    //                         <div class=\"deleteConfirm\">\r\n    //                             <span class=\"deleteText\">Supprimer?</span>\r\n    //                             <button type=\"button\" class=\"yes closeTwoParentsNow\" value=\"\">Oui</button>\r\n    //                             <button type=\"button\" class=\"no closeParentNow\" value=\"\">Non</button>\r\n    //                         </div>\r\n    //                     </div>\r\n    //                     {/* <!-- item - fin --> */}\r\n    //                     {/* <!-- item - début --> */}\r\n    //                     <div class=\"itemBox\" style={{ backgroundImage: \"url('temp/leonora_more_1.jpg')\", backgroundPosition: \"50% center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }}>\r\n    //                         <div class=\"dataModify\"><img src=\"img/icons/atelier_side_edit_1.svg\" alt=\"Modifier\" /></div>\r\n    //                         <input type=\"button\" class=\"unfollow\" value=\"\" /* onclick=\"openCloseNextDiv(this);\" */ />\r\n    //                         <div class=\"deleteConfirm\">\r\n    //                             <span class=\"deleteText\">Supprimer?</span>\r\n    //                             <button type=\"button\" class=\"yes closeTwoParentsNow\" value=\"\">Oui</button>\r\n    //                             <button type=\"button\" class=\"no closeParentNow\" value=\"\">Non</button>\r\n    //                         </div>\r\n    //                     </div>\r\n    //                     {/* <!-- item - fin --> */}\r\n    //                 </div>\r\n    //             </section>\r\n    //             {/* <!-- SECTION DERNIERES IMAGES AJOUTEES - fin --> */}\r\n\r\n    //             {/* <!-- SECTION AJOUTER DES IMAGES - début --> */}\r\n    //             <section class=\"mt-c\">\r\n    //                 <h3>Ajouter de nouvelles images</h3>\r\n    //                 <p>Vous trouverez ci-dessous les dernières images que vous avez ajoutées. Vous pouvez commencer à renseigner ces nouvelles images, en ajouter ou en supprimer. Créez les descriptifs de vos peintures , publiez et partagez les en ligne.</p>\r\n    //             </section>\r\n    //             {/* <!-- SECTION AJOUTER DES IMAGES - fin --> */}\r\n\r\n    //             {/* <!-- SECTION DERNIERES OEUVRES AJOUTE - début --> */}\r\n    //             <section class=\"mt-c\">\r\n    //                 <h3>Mes dernières peintures en ligne</h3>\r\n    //                 <p class=\"pb-a\">Vous trouverez ci-dessous les dernières images que vous avez ajoutées. Vous pouvez commencer à renseigner ces nouvelles images, en ajouter ou en supprimer. Créez les descriptifs de vos peintures , publiez et partagez les en ligne.</p>\r\n\r\n    //                 {/* <!-- item grid type 1 - début --> */}\r\n    //                 <div class=\"itemGridType-1\">\r\n    //                     {/* <!-- item - début --> */}\r\n    //                     <div class=\"itemBox\">\r\n    //                         <div class=\"dataLikes\"><img src=\"img/icons/atelier_main_likes_1.svg\" alt=\"Cliques j'aime\" />12</div>\r\n    //                         <div class=\"dataLists\"><img src=\"img/icons/atelier_main_listes_1.svg\" alt=\"Ajouts dans des listes\" />3</div>\r\n    //                         <div class=\"ItemEdit\"><a href=\"#\"><img src=\"img/icons/ico_pen_1.svg\" alt=\"Modifier\" /></a></div>\r\n    //                         <div class=\"ItemImg\" style={{ backgroundImage: \"url('temp/leonora_more_1.jpg')\", backgroundPosition: \"50% center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }}></div>\r\n    //                         <p class=\"ItemName\">Titre de la peinture</p>\r\n    //                         <p class=\"ItemDesc\">Description courte</p>\r\n    //                         <p class=\"ItemSize\">L x H x P Cm</p>\r\n    //                     </div>\r\n    //                     {/* <!-- item - fin --> */}\r\n    //                     {/* <!-- item - début --> */}\r\n    //                     <div class=\"itemBox\">\r\n    //                         <div class=\"dataLikes\"><img src=\"img/icons/atelier_main_likes_1.svg\" alt=\"Cliques j'aime\" />12</div>\r\n    //                         <div class=\"dataLists\"><img src=\"img/icons/atelier_main_listes_1.svg\" alt=\"Ajouts dans des listes\" />3</div>\r\n    //                         <div class=\"ItemEdit\"><a href=\"#\"><img src=\"img/icons/ico_pen_1.svg\" alt=\"Modifier\" /></a></div>\r\n    //                         <div class=\"ItemImg\" style={{ backgroundImage: \"url('temp/leonora_more_1.jpg')\", backgroundPosition: \"50% center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }}></div>\r\n    //                         <p class=\"ItemName\">Titre de la peinture</p>\r\n    //                         <p class=\"ItemDesc\">Description courte</p>\r\n    //                         <p class=\"ItemSize\">L x H x P Cm</p>\r\n    //                     </div>\r\n    //                     {/* <!-- item - fin --> */}\r\n    //                     {/* <!-- item - début --> */}\r\n    //                     <div class=\"itemBox\">\r\n    //                         <div class=\"dataLikes\"><img src=\"img/icons/atelier_main_likes_1.svg\" alt=\"Cliques j'aime\" />12</div>\r\n    //                         <div class=\"dataLists\"><img src=\"img/icons/atelier_main_listes_1.svg\" alt=\"Ajouts dans des listes\" />3</div>\r\n    //                         <div class=\"ItemEdit\"><a href=\"#\"><img src=\"img/icons/ico_pen_1.svg\" alt=\"Modifier\" /></a></div>\r\n    //                         <div class=\"ItemImg\" style={{ backgroundImage: \"url('temp/leonora_more_1.jpg')\", backgroundPosition: \"50% center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }}></div>\r\n    //                         <p class=\"ItemName\">Titre de la peinture</p>\r\n    //                         <p class=\"ItemDesc\">Description courte</p>\r\n    //                         <p class=\"ItemSize\">L x H x P Cm</p>\r\n    //                     </div>\r\n    //                     {/* <!-- item - fin --> */}\r\n    //                 </div>\r\n    //                 {/* <!-- item grid type 1 - fin --> */}\r\n\r\n    //                 <div class=\"center-tex pb-c pt-b\">\r\n    //                     <a class=\"btn-1\" href=\"#\">Toutes mes peintures</a>\r\n    //                 </div>\r\n    //             </section>\r\n    //             {/* <!-- SECTION DERNIERES OEUVRES AJOUTE - fin --> */}\r\n    //         </main>\r\n    //     </div>\r\n    // );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/Atelier/Accueil.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "Accueil",
    "memberof": "src/component/Atelier/Accueil.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/Atelier/Accueil.js~Accueil",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/Atelier/Accueil.js",
    "importStyle": "Accueil",
    "description": "Page to update your artist Account",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/component/Atelier/Biography.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport MenuAtelier from \"./MenuAtelier\";\r\n\r\n\r\n/**\r\n * Page to update your Biography\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n */\r\nexport default function Biography({ user, setUser, isLogged }) {\r\n\r\n\r\n    return (\r\n\r\n        <div class=\"Biography\">\r\n            <MenuAtelier user={user} aaaaaaaaaa isLogged={isLogged} setUser={setUser} />\r\n\r\n            <main class=\"workShopMain\">\r\n\r\n                <h2>Ma biographie</h2>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis accumsan vehicula odio, tempus convallis eros euismod sed. Donec ultricies quam vulputate commodo suscipit.</p>\r\n\r\n                {/* <!-- SECTION A PROPOS DE MOI - début --> */}\r\n                <section class=\"mt-c\">\r\n                    <form class=\"formCompact\" method=\"post\" action=\"\">\r\n                        <h3 class=\"mt-a\">A propos de moi</h3>\r\n                        <div class=\"inputInline\">\r\n                            <input type=\"text\" size=\"55\" placeholder=\"Nom\" required />\r\n                            <input type=\"text\" size=\"55\" placeholder=\"Prénom\" required />\r\n                        </div>\r\n                        <input type=\"text\" size=\"55\" placeholder=\"Nom d'artiste\" required />\r\n                        <div class=\"inputInline\">\r\n                            <input type=\"text\" size=\"55\" placeholder=\"Ville d'origine\" required />\r\n                            <input type=\"text\" size=\"55\" placeholder=\"Pays d'origine\" required />\r\n                        </div>\r\n                        <div class=\"inputInline\">\r\n                            <input type=\"radio\" name=\"radio\" value=\"radio\" />\r\n                            <label for=\"radio\">Femme</label>\r\n                            <input type=\"radio\" name=\"radio\" value=\"radio\" />\r\n                            <label for=\"radio\">Homme</label>\r\n                        </div>\r\n                        <h3 class=\"mt-c\">Présentation de mon parcours</h3>\r\n                        <textarea name=\"message\" rows=\"5\" cols=\"33\" placeholder=\"Votre message\"></textarea>\r\n                        <h3 class=\"mt-c\">Descriptif de mon travail</h3>\r\n                        <textarea name=\"message\" rows=\"5\" cols=\"33\" placeholder=\"Votre message\"></textarea>\r\n                        <h3 class=\"mt-c\">Ajouter des mots clés ( séparés par des virgules)</h3>\r\n                        <input type=\"text\" size=\"55\" placeholder=\"Ex : paysage, lune, …\" required />\r\n                        <div class=\"tagList toLeft\">\r\n                            <a href=\"#\">Mot-clé</a>\r\n                            <a href=\"#\">Mot-clé</a>\r\n                            <a href=\"#\">Mot-clé</a>\r\n                            <a href=\"#\">Mot-clé</a>\r\n                            <a href=\"#\">Mot-clé</a>\r\n                            <a href=\"#\">Mot-clé</a>\r\n                            <a href=\"#\">Mot-clé</a>\r\n                            <a href=\"#\">Mot-clé</a>\r\n                        </div>\r\n                        <h3 class=\"mt-c\">Ma bannière pro</h3>\r\n                        <div class=\"proBanner\" style={{ backgroundImage: \"url('temp/leonora_more_1.jpg')\", backgroundPosition: \"50% center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }}>\r\n                            {/* <!-- ///////////////////////////////////\r\n\t\t\t\t\tModal configuration de l'arrière-plan - début\r\n\t\t\t\t\t//////////////////////////////////// --> */}\r\n                            <a class=\"openModalNow topAccountBg\" data-target=\"topAccountBg\" rel=\"nofollow\">\r\n                                <img src=\"img/icons/ico_pen_1.svg\" alt=\"Modifier l'arrière-plan\" />\r\n                            </a>\r\n\r\n                            <div id=\"topAccountBg\" class=\"smart-modal-content scrollAuto\" style={{ width: \"340px\" }}>\r\n                                <h3>Modifier l'arrière-plan</h3>\r\n                                <a class=\"smart-modal-close\"><img class=\"img-left\" src=\"img/icons/ico_close_2.svg\" alt=\"Fermer\" /></a>\r\n\r\n                                <p class=\"fileRestriction mt-b mb-a\">Image au format .jpg ou .png<br />2Mo maximum</p>\r\n\r\n                                <div class=\"fileUploadInput\" data-text=\"Sélectionnez un fichier\">\r\n                                    <input name=\"fileUploadField\" type=\"file\" class=\"fileUploadField\" value=\"\" />\r\n                                </div>\r\n\r\n                            </div>\r\n                            {/* <!-- ///////////////////////////////////\r\n\t\t\t\t\tModal configuration de l'arrière-plan - fin\r\n\t\t\t\t\t//////////////////////////////////// --> */}\r\n                        </div>\r\n                        <h3 class=\"mt-c\">Mes réseaux sociaux pro</h3>\r\n                        <div class=\"inputInline\">\r\n                            <input type=\"text\" size=\"55\" placeholder=\"Site internet\" required />\r\n                            <input type=\"text\" size=\"55\" placeholder=\"Page Facebook\" required />\r\n                        </div>\r\n                        <div class=\"inputInline\">\r\n                            <input type=\"text\" size=\"55\" placeholder=\"Page Instagram\" required />\r\n                            <input type=\"text\" size=\"55\" placeholder=\"Page Pinterest\" required />\r\n                        </div>\r\n                        <div class=\"inputInline\">\r\n                            <input type=\"text\" size=\"55\" placeholder=\"Page Twitter\" required />\r\n                            <input type=\"text\" size=\"55\" placeholder=\"Page LinkedIn\" required />\r\n                        </div>\r\n                        <div class=\"inputInline\">\r\n                            <div>\r\n                                <input type=\"reset\" class=\"saveDraftBtn mt-a\" value=\"Sauvegarder comme brouillon\" />\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"submit\" class=\"submitFormBtn mt-a\" value=\"Enregistrer\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n\r\n                </section>\r\n                {/* <!-- SECTION A PROPOS DE MOI - fin --> */}\r\n            </main>\r\n        </div>\r\n    );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/Atelier/Biography.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "Biography",
    "memberof": "src/component/Atelier/Biography.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/Atelier/Biography.js~Biography",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/Atelier/Biography.js",
    "importStyle": "Biography",
    "description": "Page to update your Biography",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/component/Atelier/MenuAtelier.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport home from \"../../webapp/img/icons/atelier_side_home_1.svg\"\r\nimport edit from \"../../webapp/img/icons/atelier_side_edit_1.svg\"\r\nimport add from \"../../webapp/img/icons/atelier_side_images-ajoutees_1.svg\"\r\nimport galerie from \"../../webapp/img/icons/atelier_side_galerie_1.svg\"\r\nimport reco from \"../../webapp/img/icons/atelier_side_reco_1.svg\"\r\nimport expo from \"../../webapp/img/icons/atelier_side_expo_1.svg\"\r\nimport a from \"../../webapp/img/icons/atelier_side_tableau_1.svg\"\r\nimport Accueil from \"./Accueil\";\r\nimport Biography from \"./Biography\";\r\n\r\n/**\r\n * Workshop side menu\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged \r\n *  @param {boolean} setIsLogged - isLogged setter\r\n */\r\n\r\nexport default function MenuAtelier({ user, setUser, isLogged, setIsLogged }) {\r\n\r\n    //init Variables global\r\n    const [isActive, setActive] = useState(1);\r\n\r\n\r\n    //Active class a\r\n    const toggleClass = (val) => {\r\n        setActive(val);\r\n    };\r\n\r\n    return (\r\n        <div className=\"MenuAtelier\">\r\n            <Tabs>\r\n                <div className=\"workShopSideNav\">\r\n                    {/* <!-- BLOC NAVIGATION FIXE GAUCHE - début --> */}\r\n\r\n                    <TabList>\r\n                        <div className=\"workShopArtistTop\">\r\n                            <h1>Arthur de Frayssinet</h1>\r\n                            <Link className=\"bt-action voir\" to=\"../view/Biography.js\">\r\n                                Ma biographie<span><img src={edit} alt=\"Modifier ma biographie\" /></span>\r\n                            </Link>\r\n\r\n                        </div>\r\n\r\n                        <nav className=\"workShopNav mt-b\">\r\n                            <ul>\r\n                                <Tab className=\"mb-b react-tabs__tab\">\r\n                                    <a className={isActive === 2 ? 'active' : null} onClick={() => toggleClass(2)} ><img src={home} alt=\"Retour à l'accueil\" /><span className=\"title\">Accueil de l'atelier</span></a>\r\n                                </Tab>\r\n                                <Tab className=\"react-tabs__tab\">\r\n                                    <a ><img src={add} alt=\"Images ajoutées\" /><span className=\"title\">Images ajoutées</span></a>\r\n                                </Tab>\r\n                                <Tab className=\"react-tabs__tab\">\r\n                                    <a ><img src={edit} alt=\"Brouillons à terminer\" /><span className=\"title\">Brouillons à terminer</span><span className=\"pill\">4</span></a>\r\n                                </Tab>\r\n                                <Tab className=\"mb-b react-tabs__tab\">\r\n                                    <a ><img src={galerie} alt=\"Galerie de peintures\" /><span className=\"title\">Galerie de peintures</span></a>\r\n                                </Tab>\r\n                                <Tab className=\"mb-b react-tabs__tab\">\r\n                                    <a ><img src={reco} alt=\"Recommandations\" /><span className=\"title\">Recommandations</span></a>\r\n                                </Tab >\r\n                                <Tab className=\"mb-b react-tabs__tab\">\r\n                                    <a ><img src={expo} alt=\"Expositions\" /><span className=\"title\">Expositions</span></a>\r\n                                    <ul>\r\n                                        <Tab className=\"react-tabs__tab\">\r\n                                            <a>Ajouter une exposition</a>\r\n                                        </Tab>\r\n                                        <Tab className=\"react-tabs__tab\">\r\n                                            <a >Toutes mes expositions</a>\r\n                                        </Tab>\r\n                                    </ul>\r\n                                </Tab>\r\n                                <Tab className=\"react-tabs__tab\">\r\n                                    <a ><img src={a} alt=\"Tableau de bord\" /><span className=\"title\">Tableau de bord</span></a>\r\n                                </Tab>\r\n                            </ul>\r\n                        </nav>\r\n                        {/* <!-- BLOC NAVIGATION FIXE GAUCHE - fin --> */}\r\n\r\n                    </TabList>\r\n\r\n                </div>\r\n                <TabPanel>\r\n                    <Accueil user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser} />\r\n                </TabPanel>\r\n            </Tabs>\r\n        </div>\r\n\r\n    );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/Atelier/MenuAtelier.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "MenuAtelier",
    "memberof": "src/component/Atelier/MenuAtelier.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/Atelier/MenuAtelier.js~MenuAtelier",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/Atelier/MenuAtelier.js",
    "importStyle": "MenuAtelier",
    "description": "Workshop side menu",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsLogged",
        "description": "isLogged setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "src/component/Chat/ChatMenu.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport Collapsible from 'react-collapsible';\r\nimport { set } from \"react-hook-form\";\r\nimport photo from \"../../webapp/temp/olivier_profil_1.jpeg\"\r\nimport photo2 from \"../../webapp/temp/arthur_1.jpg\"\r\n\r\n\r\n/**\r\n * Chat menu with list of conversation\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n *  @param {boolean} boolChat - test if the chat menu is open\r\n *  @param {boolean} setBoolChat - boolChat setter\r\n */\r\n\r\nexport default function ChatMenu({ user, setUser, isLogged, boolChat, setBoolChat }) {\r\n\r\n\tconst [boolDisplay, setBoolDisplay] = useState(false);\r\n\tconst [listMsgBox, setListMsgBox] = useState([]);\r\n\tconst [listSender, setListSender] = useState([]);\r\n\r\n\r\n\tfunction handleVisible() {\r\n\t\tif (boolDisplay === false) {\r\n\t\t\tsetBoolDisplay(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetBoolDisplay(false);\r\n\t\t}\r\n\t\tconsole.log(boolDisplay)\r\n\r\n\t}\r\n\r\n\tfunction addMessageBox() {\r\n\r\n\t\tlet tempList = listMsgBox;\r\n\r\n\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"ChatMenu\">\r\n\t\t\t{/* <!-- BOX MESSAGERIE FIXED BOTTOM - début --> */}\r\n\t\t\t<div className={boolDisplay === true ? \"msgBottomBox open\" : \"msgBottomBox closed\"}>\r\n\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<a href=\"\">\r\n\t\t\t\t\t\t<img src={photo} alt=\"Messagerie\" />\r\n\t\t\t\t\t\t<span>Messagerie</span>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<button className=\"options\"></button>\r\n\t\t\t\t\t<button className=\"newMsg\"></button>\r\n\t\t\t\t\t<button className={boolDisplay === true ? \"isOpen\" : \"isClosed\"} onClick={handleVisible}></button>\r\n\t\t\t\t\t<button className=\"close\" onClick={e => setBoolChat(false)}></button>\r\n\t\t\t\t</header>\r\n\r\n\t\t\t\t<section>\r\n\r\n\t\t\t\t\t<article >\r\n\t\t\t\t\t\t<a href=\"\" className=\"pic\"><img src={photo2} alt=\"Messagerie\" /></a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"sender\">Arthur de Frayssinet</a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"date\">9 Juin 2022</a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"extract\">Lorem Ipsum is simply dummy text of the printing and ...</a>\r\n\t\t\t\t\t</article>\r\n\r\n\t\t\t\t\t<article>\r\n\t\t\t\t\t\t<a href=\"\" className=\"pic\"><img src={photo2} alt=\"Messagerie\" /></a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"sender\">Arthur de Frayssinet</a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"date\">9 Juin 2022</a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"extract\">Lorem Ipsum is simply dummy text of the printing and ...</a>\r\n\t\t\t\t\t</article>\r\n\r\n\t\t\t\t\t<article>\r\n\t\t\t\t\t\t<a href=\"\" className=\"pic\"><img src={photo2} alt=\"Messagerie\" /></a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"sender\">Arthur de Frayssinet</a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"date\">9 Juin 2022</a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"extract\">Lorem Ipsum is simply dummy text of the printing and ...</a>\r\n\t\t\t\t\t</article>\r\n\r\n\t\t\t\t\t<article>\r\n\t\t\t\t\t\t<a href=\"\" className=\"pic\"><img src={photo2} alt=\"Messagerie\" /></a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"sender\">Arthur de Frayssinet</a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"date\">9 Juin 2022</a>\r\n\t\t\t\t\t\t<a href=\"\" className=\"extract\">Lorem Ipsum is simply dummy text of the printing and ...</a>\r\n\t\t\t\t\t</article>\r\n\r\n\t\t\t\t</section>\r\n\r\n\t\t\t</div>\r\n\t\t\t{/* <!-- BOX MESSAGERIE FIXED BOTTOM - fin --> */}\r\n\t\t\t{/* <div className=\"messageBox\" style={{height:boolDisplay === false &&  \"50px\"}}>\r\n                <div className=\"titleMessageBox\">\r\n                    <ul className=\"inlineList mb-a\">\r\n                   <li> <a className=\"titleA\" style={{marginRight: \"70px\"}}> Messagerie</a></li>\r\n                   <li> <button className=\"moreButton\"></button></li>\r\n                   <li> <button className=\"newMessageButton\"></button></li>\r\n                   <li> <button className={boolDisplay=== true ? \"collapseButtonOpen\" : \"collapseButtonClose\"} onClick={handleVisible} ></button></li>\r\n                   \r\n                    </ul>\r\n                </div>\r\n\r\n                <div className={boolDisplay=== true ? \"contentMessageBoxOpen\" : \"contentMessageBoxClose\"}>\r\n                   \r\n                </div>\r\n            </div> */}\r\n\r\n\t\t</div>\r\n\t);\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/Chat/ChatMenu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "ChatMenu",
    "memberof": "src/component/Chat/ChatMenu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/Chat/ChatMenu.js~ChatMenu",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/Chat/ChatMenu.js",
    "importStyle": "ChatMenu",
    "description": "Chat menu with list of conversation",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "boolChat",
        "description": "test if the chat menu is open"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setBoolChat",
        "description": "boolChat setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "src/component/Chat/ChatModal.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { set } from \"react-hook-form\";\r\nimport photo from \"../../webapp/temp/arthur_1.jpg\"\r\nimport photo2 from \"../../webapp/temp/olivier_profil_1.jpeg\"\r\nimport data from '@emoji-mart/data'\r\nimport EmojiPicker from \"../general/EmojiPicker\";\r\nimport GifPicker from \"../general/GifPicker\";\r\nimport \"@mickyballadelli/react-tenor17/dist/styles.css\"\r\n\r\n/**\r\n * Chat modal : used for chatting with someone\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n */\r\n\r\nexport default function ChatModal({ user, setUser, isLogged }) {\r\n    const ref = useRef()\r\n    const [boolDisplay, setBoolDisplay] = useState(false);\r\n    const [boolEmoji, setBoolEmoji] = useState(false);\r\n    const [txtArea, setTxtArea] = useState([]);\r\n\r\n\r\n\r\n    function handleVisible() {\r\n        if (boolDisplay === false) {\r\n            setBoolDisplay(true);\r\n        }\r\n        else {\r\n            setBoolDisplay(false);\r\n        }\r\n        console.log(boolDisplay)\r\n\r\n    }\r\n\r\n    function handleVisibleEmoji() {\r\n        if (boolEmoji === false) {\r\n            setBoolEmoji(true);\r\n        }\r\n        else {\r\n            setBoolEmoji(false);\r\n        }\r\n        console.log(boolEmoji)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"ChatModal\">\r\n\r\n            <div className=\"chatBox\">\r\n                <header>\r\n                    <a href=\"\">\r\n                        <img src={photo} alt=\"Messagerie\" />\r\n                        <p>Arthur De Frayssinet</p>\r\n                    </a>\r\n                    <button className=\"plus\"></button>\r\n                    <button className=\"settings\"></button>\r\n                    <button className=\"close\" ></button>\r\n                </header>\r\n\r\n\r\n                <section>\r\n\r\n                    <time>13 Juin 2022</time>\r\n\r\n                    <div className=\"msgLeft\">\r\n                        <img className=\"pic\" src={photo} alt=\"Messagerie\" />\r\n                        <p>Lorem Ipsum is simply dummy text of the printing ??</p>\r\n                    </div>\r\n\r\n                    <div className=\"msgRight\">\r\n                        <p>Is simply dummy text of the printing !</p>\r\n                    </div>\r\n\r\n                    <div className=\"msgLeft\">\r\n                        <img className=\"pic\" src={photo} alt=\"Messagerie\" />\r\n                        <p>Simply dummy text of the printing ??</p>\r\n                    </div>\r\n\r\n                    <div className=\"msgLeft\">\r\n                        <p>Lorem Ipsum is simply</p>\r\n                    </div>\r\n\r\n                    <div className=\"msgRight\">\r\n                        <p>Text of the printing !</p>\r\n                    </div>\r\n\r\n                </section>\r\n\r\n                <footer>\r\n                    <textarea onChange={(e) => setTxtArea(e.target.value)} value={txtArea} />\r\n                    <button className=\"send\"></button>\r\n                    <button className=\"image\"></button>\r\n                    <button className=\"gif\"></button>\r\n                    {/* <GifPicker style={{bottom: \"300px\"}}/> */}\r\n                    <button className=\"emojis\" onClick={handleVisibleEmoji}></button>\r\n                </footer>\r\n                {boolEmoji === true && <EmojiPicker txtArea={txtArea} setTxtArea={setTxtArea} />}\r\n\r\n            </div>\r\n        </div >\r\n    );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/Chat/ChatModal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "ChatModal",
    "memberof": "src/component/Chat/ChatModal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/Chat/ChatModal.js~ChatModal",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/Chat/ChatModal.js",
    "importStyle": "ChatModal",
    "description": "Chat modal : used for chatting with someone",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/Activity.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { toast } from \"react-toastify\"\r\nimport lockB from \"../../webapp/img/icons/content_locked_1-2.svg\"\r\nimport unlockB from \"../../webapp/img/icons/content_unlocked_1-2.svg\"\r\n\r\n/**\r\n * This Component contain your network feed\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @emits - api/publication/save : save user publication\r\n */\r\n\r\nexport default function Activity({ user, SetUser }) {\r\n\r\n\tconst [refreshKey, setRefreshKey] = useState(0);\r\n\tconst [publication, setPublication] = useState([]);\r\n\tconst [boolVis, setBollVis] = useState(false);\r\n\r\n\r\n\r\n\t//post une publication//\r\n\tfunction submitPost(e) {\r\n\r\n\t\te.preventDefault();\r\n\r\n\t\taxios.post(URLDayl + \"api/publication/save\",\r\n\t\t\t{ content: publication, userId: user.id, publicationStatus: \"PUBLIC\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n\t\t)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tsetRefreshKey(oldKey => oldKey + 1);\r\n\t\t\t\t//popup alert\r\n\t\t\t\ttoast.success(\"Publication Postée!\", {\r\n\t\t\t\t\tposition: \"top-right\",\r\n\t\t\t\t\tautoClose: 3000,\r\n\t\t\t\t\thideProgressBar: false,\r\n\t\t\t\t\tcloseOnClick: true,\r\n\t\t\t\t\tpauseOnHover: true,\r\n\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\tprogress: undefined,\r\n\t\t\t\t});\r\n\r\n\t\t\t});\r\n\r\n\t}\r\n\tfunction addMedia(e) {\r\n\t\te.preventDefault();\r\n\r\n\t}\r\n\r\n\t///////////////Change visibility////////////\r\n\tconst handleCheck = () => {\r\n\r\n\r\n\t\tif (boolVis === false)\r\n\t\t\tsetBollVis(true);\r\n\t\telse {\r\n\t\t\tsetBollVis(false)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"Activity\" >\r\n\t\t\t{/* <!-- ******************************************************\r\n\t\t\t\t***********************************************************\r\n\r\n\t\t\t\tBLOC CONTENU PRINCIPAL - début\r\n\r\n\t\t\t\t***********************************************************\r\n\t\t\t\t******************************************************* --> */}\r\n\r\n\t\t\t<div className=\"socialItems\">\r\n\r\n\t\t\t\t{/* <!-- publier - début --> */}\r\n\t\t\t\t<div className=\"addPost\">\r\n\t\t\t\t\t<form  >\r\n\t\t\t\t\t\t<textarea onChange={(e) => setPublication(e.target.value)} value={publication} placeholder=\"Que souhaitez-vous partager aujourd’hui ?\"></textarea>\r\n\t\t\t\t\t\t<img src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`} />\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"postButtonContainer2\">\r\n\t\t\t\t\t\t<input type=\"text\" size=\"55\" placeholder=\"Ex : expressionnisme, surréalisme …\" style={{width: \"100%\"}}/>\r\n                                    <div className=\"hashList toLeft\">\r\n                                        <a href=\"#\">#hashtag</a>\r\n                                        <a href=\"#\">#hashtag</a>\r\n                                        <a href=\"#\">#hashtag</a>\r\n                                        <a href=\"#\">#hashtag</a>\r\n                                        <a href=\"#\">#hashtag</a>\r\n                                        <a href=\"#\">#hashtag</a>\r\n                                        <a href=\"#\">#hashtag</a>\r\n                                        <a href=\"#\">#hashtag</a>\r\n                                    </div>\r\n\t\t\t\t\t\t\t<div className=\"toggleBox vis\" style={{ height: \"32px\" }}>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"lilToggle mt-b mb-b\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" onChange={(e) => handleCheck()} name=\"toggleDesc\" defaultChecked={boolVis} />\r\n\t\t\t\t\t\t\t\t\t<img src={lockB} style={{ width: \"20px\", height: \"20px\", top: \"6px\", left: \"45px\", position: \"absolute\", borderRadius: \"0\" }} />\r\n\t\t\t\t\t\t\t\t\t<img src={unlockB} style={{ width: \"20px\", height: \"20px\", top: \"6px\", left: \"7px\", position: \"absolute\", borderRadius: \"0\" }} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{boolVis === true ? <span tool-tp>Tout le monde </span>\r\n\t\t\t\t\t\t\t\t\t: <span>Mon réseau</span>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <div style={{ width: \"170px\"}} className=\"selectPublish\">\r\n\t\t\t\t\t\t\t\t<select className=\"searchFilter\" >\r\n\t\t\t\t\t\t\t\t\t<option value=\"\" selected>Tp</option>state\r\n\t\t\t\t\t\t\t\t\t<option value=\"Domaine public\">Domaine public</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"protected\">Oeuvres protégées</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t<button className=\"publish\" onClick={submitPost} style={{ height: \"37px\" }}>Publier</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"postButtonContainer\">\r\n\t\t\t\t\t\t\t<button className=\"addMedia\" /* style={{ top: \"120px\", height: \"32px\" }} */ onClick={(e) => addMedia(e)}>Ajouter des photos / une vidéo</button>\r\n\t\t\t\t\t\t\t{/* <button className=\"addHashtag\" onClick={(e) => addMedia(e)}>Ajouter un hashtag</button> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t\t<input type=\"button\" className=\"openModalNow deletePubli\"/*  onClick={() => handleBoolDeleteTrue(index)} */ />\r\n\t\t\t\t\t<input type=\"button\" className=\" openModalNow editPubli\" /* onClick={() => handleBoolEditTrue(index)} */ />\r\n\t\t\t\t\t<input type=\"button\" className=\" openModalNow savePubli\" /* onClick={() => handleBoolShareTrue(index)} */ />\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <!-- publier - fin --> */}\r\n\r\n\t\t\t\t{/* <!-- publication - début --> */}\r\n\t\t\t\t\t\t<article>\r\n\t\t\t\t\t\t\t<p class=\"postLikedBy\"><b>ILONA HINDENBERG</b> aime ceci</p>\r\n\t\t\t\t\t\t\t<div class=\"postData\">\r\n\t\t\t\t\t\t\t\t<h2>Olivier Lefievre</h2>\r\n\t\t\t\t\t\t\t\t<time datetime=\"2022-07-07T20:00:00\" class=\"authorPostTime\">posté le 07 juillet 2022 à 19:00</time>\r\n\t\t\t\t\t\t\t\t<p class=\"postText\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore.</p>\r\n\t\t\t\t\t\t\t\t<img src=\"temp/olivier_profil_1.jpeg\" alt=\"Olivier Lefievre\"/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"postStats\">\r\n\t\t\t\t\t\t\t\t<span class=\"countLikes\">12</span>\r\n\t\t\t\t\t\t\t\t<span class=\"countComments\">3 commentaires</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"postActions mb-b\">\r\n\t\t\t\t\t\t\t\t<button class=\"likeIt\">J'aime</button>\r\n\t\t\t\t\t\t\t\t<button class=\"commentIt\">Commenter</button>\r\n\t\t\t\t\t\t\t\t<button class=\"shareIt\">Partager</button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t{/* <!-- COMMENTER / COMMENTAIRES SUR CETTE PUBLICATION - début --> */}\r\n\t\t\t\t\t\t\t<div class=\"postComments\">\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"addPostComment\">\r\n\t\t\t\t\t\t\t\t\t<textarea name=\"message\" placeholder=\"ajouter un commentaire sur cette publication\"></textarea>\r\n\t\t\t\t\t\t\t\t\t<button class=\"publish\">Publier</button>\r\n\t\t\t\t\t\t\t\t\t<button class=\"addMedia\">Ajouter une photo</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"comment\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"temp/soc_6.jpg\" alt=\"Ilona Hindenberg\"/>\r\n\t\t\t\t\t\t\t\t\t\t<h3>Ilona Hindenberg</h3>\r\n\t\t\t\t\t\t\t\t\t\t<time datetime=\"2022-07-07T20:00:00\" class=\"commentPostTime\">07 juillet 2022 - 20:00</time>\r\n\t\t\t\t\t\t\t\t\t\t<p>Oh my gooood !!! this is so absolutely gorgeous and crazy at the same time, i love it !!! can't wait for more art from this artist XOXO.</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"childComment\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"temp/soc_3.jpg\" alt=\"Latosha Johnson\"/>\r\n\t\t\t\t\t\t\t\t\t\t<h3>Latosha Johnson</h3>\r\n\t\t\t\t\t\t\t\t\t\t<time datetime=\"2022-07-07T20:07:00\" class=\"commentPostTime\">07 juillet 2022 - 20:07</time>\r\n\t\t\t\t\t\t\t\t\t\t<p>Yeaaaaah ! girl, i must admit that you're right. Hope i can see it in real one time in Paris ! see ya !</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"comment\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"temp/soc_1.jpg\" alt=\"Arthuro Bracchio\"/>\r\n\t\t\t\t\t\t\t\t\t\t<h3>Arthuro Bracchio</h3>\r\n\t\t\t\t\t\t\t\t\t\t<time datetime=\"2022-07-07T21:45:00\" class=\"commentPostTime\">07 juillet 2022 - 21:45</time>\r\n\t\t\t\t\t\t\t\t\t\t<p>mmmm ... not my cup of tea. But i have to admit that this artist will certainly have a lot of success in the future. Best wishes.</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <!-- COMMENTER / COMMENTAIRES SUR CETTE PUBLICATION - fin --> */}\r\n\r\n\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t\t{/* <!-- publication - fin --> */}\r\n\t\t\t\t{/* <!-- publication avec media - début --> */}\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<p className=\"postLikedBy\"><b>Olivier LEFIEVRE</b> aime ceci</p>\r\n\t\t\t\t\t<div className=\"postData\">\r\n\t\t\t\t\t\t<h2>Olivier Lefièvre</h2>\r\n\t\t\t\t\t\t<p className=\"postTime\">il y a 6h</p>\r\n\t\t\t\t\t\t<p className=\"postText\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore.</p>\r\n\t\t\t\t\t\t<img src=\"temp/olivier_profil_1.jpeg\" alt=\"Olivier Lefièvre\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"postMedia\">\r\n\t\t\t\t\t\t<img className=\"image\" src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"postStats\">\r\n\t\t\t\t\t\t<span className=\"countLikes\">12</span>\r\n\t\t\t\t\t\t<span className=\"countComments\">3 commentaires</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"postActions\">\r\n\t\t\t\t\t\t<button className=\"likeIt\">J'aime</button>\r\n\t\t\t\t\t\t<button className=\"commentIt\">Commenter</button>\r\n\t\t\t\t\t\t<button className=\"shareIt\">Partager</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</article>\r\n\t\t\t\t{/* <!-- publication avec media - fin --> */}\r\n\r\n\r\n\t\t\t\t{/* <!-- publication partagée - début --> */}\r\n\t\t\t\t<article>\r\n\t\t\t\t\t<p className=\"postLikedBy\"><b>Olivier LEFIEVRE</b> aime ceci</p>\r\n\t\t\t\t\t<div className=\"postData\">\r\n\t\t\t\t\t\t<h2>Olivier Lefièvre</h2>\r\n\t\t\t\t\t\t<p className=\"postTime\">il y a 6h</p>\r\n\t\t\t\t\t\t<p className=\"postText\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore.</p>\r\n\t\t\t\t\t\t<img src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<article className=\"mt-a\">\r\n\t\t\t\t\t\t<div className=\"postData\">\r\n\t\t\t\t\t\t\t<h2>Olivier Lefièvre</h2>\r\n\t\t\t\t\t\t\t<p className=\"postTime\">il y a 6h</p>\r\n\t\t\t\t\t\t\t<p className=\"postText\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore.</p>\r\n\t\t\t\t\t\t\t<img src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"postMedia\">\r\n\t\t\t\t\t\t\t<img className=\"image\" src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t\t<div className=\"postStats\">\r\n\t\t\t\t\t\t<span className=\"countLikes\">12</span>\r\n\t\t\t\t\t\t<span className=\"countComments\">3 commentaires</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"postActions\">\r\n\t\t\t\t\t\t<button className=\"likeIt\">J'aime</button>\r\n\t\t\t\t\t\t<button className=\"commentIt\">Commenter</button>\r\n\t\t\t\t\t\t<button className=\"shareIt\">Partager</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</article>\r\n\t\t\t\t{/* <!-- publication partagée - fin --> */}\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"cont-l-w center-tex\">\r\n\t\t\t\t<a className=\"viewMore\" >Voir plus</a>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* <!-- ******************************************************\r\n\t\t\t\t***********************************************************\r\n\r\n\t\t\t\tBLOC CONTENU PRINCIPAL - fin\r\n\r\n\t\t\t\t***********************************************************\r\n\t\t\t\t******************************************************* --> */}\r\n\r\n\t\t</div>\r\n\t)\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/CompteAmateurPage/Activity.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "Activity",
    "memberof": "src/component/CompteAmateurPage/Activity.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/Activity.js~Activity",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/Activity.js",
    "importStyle": "Activity",
    "description": "This Component contain your network feed",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "api/publication/save : save user publication"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/Comments.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport lockB from \"../../webapp/img/icons/content_locked_1-2.svg\"\r\nimport unlockB from \"../../webapp/img/icons/content_unlocked_1-2.svg\"\r\nimport lockR from \"../../webapp/img/icons/content_locked_1-3.svg\"\r\nimport unlockR from \"../../webapp/img/icons/content_unlocked_1-3.svg\"\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport localeFr from \"dayjs/locale/fr\";\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * This component contain your painting comment list\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @emits - api/painting_comment/byUserId: get list of user comments\r\n * @emits - api/painting_comment/byId?commentId=${comId} : delete selected comment\r\n * @emits - api/painting_comment/update : edit selected comment\r\n */\r\n\r\nexport default function Comments({ user, setUser }) {\r\n\r\n    // const [refreshKey, setRefreshKey] = useState(0);\r\n    // const [comment, setComment] = useState([]);\r\n    // const [checked, setChecked] = useState(false);\r\n    // const [date, setDate] = useState([]);\r\n    // const [boolVis, setBoolVis] = useState([false]);\r\n\r\n\r\n    // // Call Jquery script\r\n    // useEffect(() => {\r\n    //     const loadFile = async () => {\r\n    //         const { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n\r\n\r\n    //         modal();\r\n    //     };\r\n    //     loadFile();\r\n    // }, []);\r\n\r\n    // //Get Comment List//\r\n    // useEffect(() => {\r\n    //     axios\r\n    //         .get(URLDayl + \"api/painting_comment/byUserId\", { params: { userId: user.id } }\r\n    //         )\r\n    //         .then((response) => {\r\n    //             setComment(response.data);\r\n\r\n    //             const boolArray = response.data.map((el) => {\r\n    //                 if (el.visibility === \"PUBLIC\")\r\n    //                     return { ...el, boolDelete: false, boolShare: false, boolEdit: false, boolV: true }\r\n    //                 else\r\n    //                     return { ...el, boolDelete: false, boolShare: false, boolEdit: false, boolV: false }\r\n\r\n    //             });\r\n\r\n    //             //tri date\r\n    //             boolArray.sort(function (a, b) {\r\n    //                 if (a.creation > b.creation) {\r\n    //                     return -1;\r\n    //                 }\r\n    //                 else if (a.creation == b.creation) {\r\n    //                     return 0;\r\n    //                 }\r\n    //                 else {\r\n    //                     return 1;\r\n    //                 }\r\n    //             })\r\n    //             let tempCrea = [];\r\n    //             //conversion en français \r\n    //             boolArray.map((el, index) => {\r\n    //                 el.date = dayjs(el.creation).locale(localeFr).format(\"DD MMMM YYYY\");\r\n    //                 el.creation = dayjs(el.creation).locale(localeFr).format(\"MMMM YYYY\");\r\n    //                 console.log(el.date)\r\n    //                 tempCrea.push(el.creation);\r\n    //             });\r\n    //             //retire les doublons de date\r\n    //             tempCrea = tempCrea.filter(function (item, pos) { return tempCrea.indexOf(item) === pos })\r\n\r\n    //             setDate(tempCrea);\r\n    //             setComment(boolArray)\r\n    //         });\r\n\r\n    // }, [refreshKey]);\r\n    // console.log(comment);\r\n\r\n\r\n    // //////////afficher modale suppression//////////\r\n    // const handleBoolDeleteTrue = (index) => {\r\n\r\n    //     const tempBool = [...comment]\r\n\r\n    //     tempBool[index].boolDelete = true;\r\n    //     setComment(tempBool);\r\n    // }\r\n\r\n    // //////////cacher modale suppression//////////\r\n    // const handleBoolDeleteFalse = (index) => {\r\n\r\n    //     const tempBool = [...comment]\r\n\r\n    //     tempBool[index].boolDelete = false;\r\n    //     setComment(tempBool);\r\n\r\n    // }\r\n    // //suprimer un commentaire\r\n    // const deleteCom = (comId) => {\r\n\r\n    //     axios.delete(URLDayl + `api/painting_comment/byId?commentId=${comId}`,\r\n    //         { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n    //     )\r\n    //         .then((response) => {\r\n\r\n    //             setRefreshKey(oldKey => oldKey + 1);\r\n\r\n    //         });\r\n\r\n\r\n    //     setRefreshKey(oldKey => oldKey + 1);\r\n    // }\r\n\r\n\r\n    // ////////////afficher modale edit////////////\r\n    // const handleBoolEditTrue = (index) => {\r\n\r\n    //     const tempBool = [...comment]\r\n\r\n    //     tempBool[index].boolEdit = true;\r\n    //     setComment(tempBool);\r\n    // }\r\n\r\n    // ////////////cacher modale edit////////////\r\n    // const handleBoolEditFalse = (index) => {\r\n\r\n    //     const tempBool = [...comment]\r\n\r\n    //     tempBool[index].boolEdit = false;\r\n    //     setComment(tempBool);\r\n\r\n    // }\r\n\r\n    // //Edit un commentaire\r\n    // const editCom = (comId, index) => {\r\n\r\n    //     //changement de la visibilitée\r\n    //     const tempCheck = [...comment]\r\n    //     if (comment[index].boolV === true)\r\n    //         tempCheck[index].visibility = \"PUBLIC\"\r\n    //     else\r\n    //         tempCheck[index].visibility = \"PRIVATE\"\r\n\r\n\r\n    //     setComment(tempCheck)\r\n\r\n    //     //update dans l'api\r\n    //     axios.post(URLDayl + \"api/painting_comment/update\",\r\n    //         { id: comId, content: comment[index].content, visibility: comment[index].visibility }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n    //     )\r\n    //         .then((response) => {\r\n    //             setRefreshKey(oldKey => oldKey + 1);\r\n\r\n    //         });\r\n    // }\r\n\r\n    // const editChange = (value, index) => {\r\n\r\n    //     const tempComment = [...comment];\r\n\r\n    //     tempComment[index].content = value;\r\n    //     setComment(tempComment);\r\n\r\n    // }\r\n    // ///////////////Change visibility////////////\r\n    // const handleCheck = (index) => {\r\n    //     console.log(\"test check\")\r\n    //     const tempComment = [...comment]\r\n\r\n    //     if (tempComment[index].boolV === false)\r\n    //         tempComment[index].boolV = true;\r\n    //     else {\r\n    //         tempComment[index].boolV = false;\r\n    //     }\r\n    //     setComment(tempComment)\r\n    // }\r\n\r\n\r\n    // //////////afficher modale partage//////////\r\n    // const handleBoolShareTrue = (index) => {\r\n\r\n    //     const tempBool = [...comment]\r\n\r\n    //     tempBool[index].boolShare = true;\r\n    //     setComment(tempBool);\r\n    // }\r\n\r\n    // ////////////cacher modale partage////////////\r\n    // const handleBoolShareFalse = (index) => {\r\n\r\n    //     const tempBool = [...comment]\r\n\r\n    //     tempBool[index].boolShare = false;\r\n    //     setComment(tempBool);\r\n\r\n    // }\r\n    // const shareCom = (comId) => {\r\n    // }\r\n\r\n    // const handleBoolVis = () => {\r\n\r\n    //     if (boolVis === true) {\r\n    //         setBoolVis(false)\r\n    //     }\r\n    //     else {\r\n    //         setBoolVis(true)\r\n    //     }\r\n    // }\r\n\r\n\r\n    // return (\r\n    //     <div className=\"Comments\">\r\n\r\n    //         <div className=\"accountComments\">\r\n    //             {date.length > 0 && date.map((el, index) => {\r\n\r\n    //                 return (<div><h1>{el}</h1> {comment.length > 0 &&\r\n    //                     comment.map((com, index) => {\r\n    //                         if (com.creation === el)\r\n    //                             return (\r\n    //                                 <div>\r\n\r\n\r\n    //                                     <div className=\"item\">\r\n\r\n    //                                         <div className=\"commentImg\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${com.artistId}/${com.imageName})` }}></div>\r\n\r\n    //                                         <h2><Link to={`../../view/OpusPage.js/${com.paintingId}`} state={com.paintingId} >{com.paintingTitle}, 1967</Link></h2>\r\n\r\n    //                                         <h3><Link to={`../../view/ArtistDetailPage.js/${com.artistId}`} state={com.artistId}>{com.painterName}</Link></h3>\r\n    //                                         <h4><img className=\"commentIsLocked\" src={com.visibility === \"PUBLIC\" ? unlockR : lockR} />Commentaire du {com.date}:</h4>\r\n\r\n    //                                         <p>{com.content}</p>\r\n\r\n    //                                         <input type=\"button\" className=\"openModalNow deleteComment\" onClick={() => handleBoolDeleteTrue(index)} />\r\n    //                                         <input type=\"button\" className=\" openModalNow editComment\" onClick={() => handleBoolEditTrue(index)} />\r\n    //                                         <input type=\"button\" className=\" openModalNow shareComment\" onClick={() => handleBoolShareTrue(index)} />\r\n\r\n    //                                     </div>\r\n\r\n    //                                     {com.boolDelete === true &&\r\n    //                                         <div>\r\n    //                                             <div className=\"smart-modal-overlay\" style={{ display: \"block\" }}></div>\r\n    //                                             <div id=\"comment0123_delete\" className=\"smart-modal-content-l scrollAuto\" style={{ transform: \"translate(-50%,-50%)\", display: \"inline-flex\", flexWrap: \"wrap\", minHeight: \"0\" }}>\r\n    //                                                 <h3>Supprimer mon commentaire</h3>\r\n    //                                                 <a className=\"smart-modal-close\"><img className=\"img-left\" src={close} alt=\"Trier\" onClick={() => handleBoolDeleteFalse(index)} /></a>\r\n    //                                                 <div className=\"commentModal center-col overL-1\">\r\n\r\n    //                                                     <p className=\"mb-b\">Êtes-vous sûr de vouloir supprimer ce commentaire ?</p>\r\n\r\n    //                                                     <ul className=\"inlineList mb-a\">\r\n    //                                                         <li><input type=\"button\" className=\"formGreyBtn\" value=\"Annuler\" onClick={() => handleBoolDeleteFalse(index)} /></li>\r\n    //                                                         <li><input type=\"button\" className=\"formRedBtn\" value=\"Supprimer\" onClick={() => deleteCom(com.id)} /></li>\r\n    //                                                     </ul>\r\n    //                                                 </div>\r\n    //                                             </div>\r\n    //                                         </div>}\r\n\r\n\r\n\r\n    //                                     {com.boolEdit === true &&\r\n\r\n    //                                         <div>\r\n    //                                             <div className=\"smart-modal-overlay\" style={{ display: \"block\"}}></div>\r\n    //                                             <div id=\"comment0123_edit\" className=\"smart-modal-content-l scrollAuto\" style={{ transform: \"translate(-50%,-50%)\", display: \"inline-flex\", flexWrap: \"wrap\", minHeight: \"0\"}}>\r\n    //                                                 <h3>Éditer mon commentaire</h3>\r\n    //                                                 <a className=\"smart-modal-close\"><img className=\"img-left\" src={close} alt=\"Trier\" onClick={() => handleBoolEditFalse(index)} /></a>\r\n    //                                                 <div className=\"commentModal overL-1\">\r\n    //                                                     <div className=\"commentImg\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${com.artistId}/${com.imageName})` }}></div>\r\n    //                                                     <p className=\"title\">{com.paintingTitle}, 1967</p>\r\n    //                                                     <p><Link className=\"artist\" to={`../../view/ArtistDetailPage.js/${com.artistId}`} state={com.artistId && com.artistId}>{com.painterName}</Link></p>\r\n    //                                                     <p className=\"commentDate\">commentaire du 15 mai 2022:</p>\r\n    //                                                     <textarea onChange={(e) => editChange(e.target.value, index)} value={com.content} id=\"story\" name=\"story\" rows=\"5\" cols=\"33\" style={{height: \"110px\"}}></textarea>\r\n    //                                                     {/* <div className=\"toggleBox\">\r\n    //                                                         <div className=\"lilToggle mt-b mb-b\">\r\n    //                                                             <input type=\"checkbox\" onChange={(e) => handleCheck(index)} name=\"toggleDesc\" defaultChecked={com.boolV} />\r\n    //                                                             <img src={lockB} style={{ width: \"20px\", height: \"20px\", bottom: \"6px\", right: \"8px\", position: \"absolute\" }} />\r\n    //                                                             <img src={unlockB} style={{ width: \"20px\", height: \"20px\", bottom: \"6px\", left: \"7px\", position: \"absolute\" }} />\r\n    //                                                         </div>\r\n    //                                                         {com && com.boolV === true ? <span>Mode public</span>\r\n    //                                                             : <span>Mode privée</span>}\r\n    //                                                     </div> */}\r\n    //                                                    \t<input type=\"text\" size=\"55\" placeholder=\"Ex : expressionnisme, surréalisme …\" style={{width: \"100%\", marginTop: \"20px\"}}/>\r\n    //                                 <div className=\"hashList toLeft\">\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                 </div>\r\n    //                                                     <ul className=\"inlineList mb-a\" style={{marginTop: \"30px\"}}>\r\n    //                                                         <li><input type=\"button\" className=\"formGreyBtn\" value=\"Annuler\" onClick={() => handleBoolEditFalse(index)} /></li>\r\n    //                                                         <li><input type=\"button\" className=\"formRedBtn\" value=\"Enregistrer\" onClick={() => editCom(com.id, index)} /></li>\r\n    //                                                     </ul>\r\n    //                                                 </div>\r\n    //                                             </div>\r\n    //                                         </div>}\r\n\r\n\r\n\r\n\r\n    //                                     {com.boolShare === true &&\r\n    //                                         <div>\r\n    //                                             <div className=\"smart-modal-overlay\" style={{ display: \"block\" }}></div>\r\n    //                                             <div id=\"comment0123_share\" className=\"smart-modal-content-l scrollAuto\" style={{ transform: \"translate(-50%,-50%)\", display: \"inline-flex\", flexWrap: \"wrap\", minHeight: \"0\"}}>\r\n    //                                                 <h3>Partager mon commentaire</h3>\r\n    //                                                 <a className=\"smart-modal-close\"><img className=\"img-left\" src={close} alt=\"Trier\" onClick={() => handleBoolShareFalse(index)} /></a>\r\n    //                                                 <div className=\"shareModal overL-1\">\r\n\r\n    //                                                     <p className=\"commentDate\">commentaire du 15 mai 2022:</p>\r\n    //                                                     <p className=\"comment\">{com.content}</p>\r\n\r\n    //                                                     <div className=\"itemFrame\">\r\n    //                                                         <div className=\"commentImg\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${com.artistId}/${com.imageName})` }}></div>\r\n    //                                                         <p className=\"title\">{com.paintingTitle}, 1967</p>\r\n    //                                                         <p><Link className=\"artist\" to={`../../view/ArtistDetailPage.js/${com.artistId}`} state={com.artistId && com.artistId}>{com.painterName}</Link></p>\r\n    //                                                         <ul className=\"inlineList mb-a\">\r\n    //                                                             <Link className=\"modalGreyBtn\" to={`../../view/OpusPage.js/${com.paintingId}`} state={com.paintingId && com.paintingId}>\r\n\r\n    //                                                                 voir\r\n    //                                                             </Link>\r\n    //                                                             {/* <Link className=\"modalMatchBtn\" to={`../../view/MatchingPage.js/${com.paintingId}`} style={{ color: \"white\" }} state={com.paintingId && com.paintingId}>\r\n    //                                                                 match\r\n    //                                                             </Link> */}\r\n\r\n    //                                                         </ul>\r\n    //                                                     </div>\r\n    //                                                     <div className=\"toggleBox\">\r\n    //                                                         <div className=\"lilToggle mt-b mb-b\">\r\n    //                                                             <input type=\"checkbox\" onChange={(e) => handleCheck(index)} name=\"toggleDesc\" defaultChecked={com.boolV} />\r\n    //                                                             <img src={lockB} style={{ width: \"20px\", height: \"20px\", bottom: \"6px\", right: \"8px\", position: \"absolute\" }} />\r\n    //                                                             <img src={unlockB} style={{ width: \"20px\", height: \"20px\", bottom: \"6px\", left: \"7px\", position: \"absolute\" }} />\r\n    //                                                         </div>\r\n    //                                                         {com && com.boolV === true ? <span>Mode public</span>\r\n    //                                                             : <span>Mode privée</span>}\r\n    //                                                     </div>\r\n    //                                                     <ul className=\"inlineList mb-a\">\r\n    //                                                         <li><input type=\"button\" className=\"formGreyBtn\" value=\"Annuler\" onClick={() => handleBoolShareFalse(index)} /></li>\r\n    //                                                         <li><input type=\"button\" className=\"formRedBtn\" value=\"Partager\" onClick={() => {shareCom(com.id);editCom(com.id, index);}} /></li>\r\n    //                                                     </ul>\r\n    //                                                 </div>\r\n    //                                             </div>\r\n    //                                         </div>\r\n    //                                     }\r\n\r\n    //                                 </div>\r\n    //                             )\r\n    //                     })}</div>)\r\n\r\n\r\n\r\n\r\n    //             })}\r\n\r\n\r\n\r\n    //         </div>\r\n\r\n\r\n    //         <div className=\"cont-l-w center-tex\">\r\n    //             <a className=\"viewMore\" >Voir plus</a>\r\n    //         </div>\r\n\r\n    //     </div >\r\n    // )\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/CompteAmateurPage/Comments.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "Comments",
    "memberof": "src/component/CompteAmateurPage/Comments.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/Comments.js~Comments",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/Comments.js",
    "importStyle": "Comments",
    "description": "This component contain your painting comment list",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "api/painting_comment/byUserId: get list of user comments"
      },
      {
        "types": [
          "*"
        ],
        "description": "api/painting_comment/byId?commentId=${comId} : delete selected comment"
      },
      {
        "types": [
          "*"
        ],
        "description": "api/painting_comment/update : edit selected comment"
      }
    ],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/DisplayUser.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport edit from \"../../webapp/img/icons/ico_pen_2.svg\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport editBg from \"../../webapp/img/icons/ico_pen_1.svg\";\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport LinkedinLogo from \"../../webapp/img/icons/ico_social_linkedin_2.svg\"\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getCookie, setCookie } from 'react-use-cookie';\r\nimport { toast } from \"react-toastify\"\r\nimport { useNavigate } from \"react-router\";\r\nimport defaultLogo from \"../../webapp/img/icons/ico_mod_profile_1.svg\"\r\nimport defaultBg from \"../../webapp/img/bg/bg_default.jpg\"\r\nimport pers from \"../../webapp/img/icons/ico_relations_1.svg\"\r\nimport ModalNetwork from \"./ModalNetwork\";\r\n\r\n\r\n/**\r\n * This component diplay your infomations (name, profile picture, background,...)\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n *  @param {boolean} setIsLogged - isLogged setter\r\n * @emits - images/uploadUserBackgroundIcon?userId=${user.id} : post new background image\r\n * @emits - users/statistics : get user stats\r\n */\r\n\r\nexport default function DisplayUser({ user, setUser, isLogged, setIsLogged }) {\r\n\r\n  // const [bool1, setBool1] = useState(false);\r\n  // const [bool2, setBool2] = useState(false);\r\n  // const [boolNetWork, setBoolNetWork] = useState(false);\r\n  // const [stats, setStats] = useState([]);\r\n  // const [fileName, setFileName] = useState(\"Glissez/déposez votre fichier ici\")\r\n  // const { register, handleSubmit, formState: { errors }, setValue, getValues } = useForm();\r\n\r\n  // const navigate = useNavigate();\r\n\r\n\r\n\r\n\r\n  // //Disconnect user account\r\n  // function Disconnect(e) {\r\n  //   e.preventDefault();\r\n  //   localStorage.setItem(\"id\", null)\r\n  //   setUser(null)\r\n  //   setIsLogged(false)\r\n\r\n  //   //redirection vers la page connexion\r\n  //   navigate(\"../view/Login.js\")\r\n\r\n  //   toast.success(\"Vous vous êtes deconnecté avec succès!\", {\r\n  //     position: \"top-right\",\r\n  //     autoClose: 3000,\r\n  //     hideProgressBar: false,\r\n  //     closeOnClick: true,\r\n  //     pauseOnHover: true,\r\n  //     draggable: true,\r\n  //     progress: undefined,\r\n  //   });\r\n\r\n\r\n  // }\r\n  // // Call Jquery script\r\n  // useEffect(() => {\r\n  //   const loadFile = async () => {\r\n  //     const { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n\r\n  //     modal();\r\n  //   };\r\n  //   loadFile();\r\n  // }, []);\r\n  // //functions for modif modals//\r\n  // const handleBool1 = () => {\r\n\r\n  //   if (bool1 === true) {\r\n\r\n  //     setBool1(false);\r\n  //   }\r\n  //   else {\r\n  //     setBool1(true);\r\n  //   }\r\n  // }\r\n\r\n  // const handleBool2 = () => {\r\n\r\n  //   if (bool2 === true) {\r\n\r\n  //     setBool2(false);\r\n  //   }\r\n  //   else {\r\n  //     setBool2(true);\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n  // //update User\r\n  // const updateUser = () => {\r\n\r\n  //   axios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n  //   ).then((response) => {\r\n  //     setUser(response.data)\r\n\r\n  //   });\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n  // //envoie de la banniere à l'api\r\n  // const onSubmitBg = async (data) => {\r\n\r\n  //   var file = await data.fileBg[0];\r\n  //   var formdata = new FormData();\r\n  //   formdata.append('image', file);\r\n  //   console.log(file)\r\n\r\n  //   var xhr = new XMLHttpRequest();\r\n  //   xhr.open('POST', URLDayl + `images/uploadUserBackgroundIcon?userId=${user.id}`);\r\n  //   //xhr.setRequestHeader('Content-Type', 'multipart/form-data');\r\n  //   xhr.send(formdata);\r\n\r\n  //   xhr.onreadystatechange = function () {\r\n  //     if (xhr.readyState != 4) return;\r\n  //     if (xhr.status != 200) {\r\n  //       toast.warning(\"Un problème est survenu dans l'enregistrement de votre bannière!\", {\r\n  //         position: \"top-right\",\r\n  //         autoClose: 3000,\r\n  //         hideProgressBar: false,\r\n  //         closeOnClick: true,\r\n  //         pauseOnHover: true,\r\n  //         draggable: true,\r\n  //         progress: undefined,\r\n  //       });\r\n  //     } else {\r\n  //       updateUser();\r\n  //       toast.success(\"Nouvelle bannière enregistrée!\", {\r\n  //         position: \"top-right\",\r\n  //         autoClose: 3000,\r\n  //         hideProgressBar: false,\r\n  //         closeOnClick: true,\r\n  //         pauseOnHover: true,\r\n  //         draggable: true,\r\n  //         progress: undefined,\r\n  //       });\r\n  //     }\r\n  //   };\r\n\r\n  // }\r\n\r\n  // //Get Stats  (and refresh every 10 secondes)//\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(URLDayl + \"users/statistics\", { params: { userId: user.id } }\r\n  //     )\r\n  //     .then((response) => {\r\n\r\n  //       setStats(response.data)\r\n  //     });\r\n\r\n  // }, 10000);\r\n\r\n\r\n  // return (\r\n  //   <div className=\"DisplayUser\">\r\n  //     {/* <!-- SECTION HAUT DE PAGE - début --> */}\r\n\r\n  //     {/* <!-- ******************************************************\r\n\t// \t\t\t***********************************************************\r\n\r\n\t// \t\t\tBLOC ARRIÈRE-PLAN HAUT DE PAGE - début\r\n\r\n\t// \t\t\t***********************************************************\r\n\t// \t\t\t******************************************************* --> */}\r\n  //     <div className=\"cont-f-w accountBg\" style={user.backgroundImage ? { backgroundImage: `url(${URLDayl}images/contentUser/${user.id}/${user.backgroundImage})` } : { backgroundImage: `url(${defaultBg})` }}>\r\n  //       {/*<!-- IMAGE ARRIÈRE-PLAN PROFILE ARTISTE --> */}\r\n\r\n  //       {/* <!-- ///////////////////////////////////\r\n\t// \t\t\t\tModal configuration de l'arrière-plan - fin\r\n\t// \t\t\t\t//////////////////////////////////// --> */}\r\n  //       <a className=\"openModalNow smart-modal-open topAccountBg\" data-target=\"topAccountBg\" rel=\"nofollow\" >\r\n  //         <img src={editBg} alt=\"Modifier l'arrière-plan\" />\r\n  //       </a>\r\n\r\n  //       <div id=\"topAccountBg\" className=\"smart-modal-content scrollAuto\" style={{ width: \"340px\" }}>\r\n  //         <h3>Modifier l'arrière-plan</h3>\r\n  //         <a className=\"smart-modal-close\">\r\n  //           <img className=\"img-left\" src={close} alt=\"Fermer\" />\r\n  //         </a>\r\n\r\n  //         <p className=\"fileRestriction mt-b mb-a\"> Image au format .jpg ou .png <br /> 2Mo maximum </p>\r\n  //         <form className=\"modalForm\" onSubmit={handleSubmit(onSubmitBg)}>\r\n  //           <div className=\"fileUploadInput\" data-text={fileName} >\r\n  //             <input name=\"fileUploadField\" type=\"file\" className=\"fileUploadField\" id=\"formBg\"  {...register(\"fileBg\")} onChange={(e) => setFileName(e.target.files[0].name)} />\r\n  //           </div>\r\n  //           <input type=\"submit\" className=\"submit mt-b smart-modal-close\" value=\"Enregistrer les modifications\" style={{ position: \"relative\", right: \"0\", top: \"0\" }} />\r\n  //         </form>\r\n  //       </div>\r\n\r\n  //       {/* <!-- ///////////////////////////////////\r\n\t// \t\t\t\tModal configuration de l'arrière-plan - fin\r\n\t// \t\t\t\t//////////////////////////////////// --> */}\r\n  //     </div>\r\n  //     {/* <!-- ******************************************************\r\n\t// \t\t\t***********************************************************\r\n\r\n\t// \t\t\tBLOC ARRIÈRE-PLAN HAUT DE PAGE - fin\r\n\r\n\t// \t\t\t***********************************************************\r\n\t// \t\t\t******************************************************* -->\r\n\r\n\r\n\t// \t\t\t<!-- ******************************************************\r\n\t// \t\t\t***********************************************************\r\n\r\n\t// \t\t\tBLOC INFOS MEMBRE GAUCHE HAUT DE PAGE - début\r\n\r\n\t// \t\t\t***********************************************************\r\n\t// \t\t\t******************************************************* --> */}\r\n  //     <div className=\"accountBox\">\r\n  //       {/* <!-- Modal édition du profil membre - début --> */}\r\n  //       <Link className=\"topAccountEdit\" data-target=\"topAccountEdit\" rel=\"nofollow\" to=\"../../view/UserInfo.js\" state={user} data-tooltip=\"Ne fonctionne pas correctement pour l'instant\">\r\n  //         <img src={edit} alt=\"Éditer mon profil\" />\r\n  //       </Link>\r\n\r\n  //       {/* <div id=\"topAccountEdit\" className=\"smart-modal-content scrollAuto\">\r\n         \r\n  //           <h3>Éditer mon profil</h3>\r\n\r\n  //           <a className=\"smart-modal-close\">\r\n  //             <img className=\"img-left\" src={close} alt=\"Fermer\" style={{ bottom: \"50%\", left: \"20px\" }} />\r\n  //           </a>\r\n  //         </div>\r\n  //         <form className=\"modalForm\" onSubmit={handleSubmit(postUserInfo)} style={{marginTop: \"75px\"}}>\r\n  //           <div className=\"userAvatar\" style={user.iconImage ? { backgroundImage: `url(${URLDayl}images/contentUser/${user.id}/${user.iconImage})` } : { backgroundImage: `url(${defaultLogo})` }} >\r\n  //             <div className=\"uploadBtn absBR\">\r\n  //               <button className=\"btn\" onClick={() => handleBool1()} > <img src={edit} alt=\"Modifier l'image\" /></button>\r\n  //               <input name=\"fileUploadField\" type=\"file\" className=\"fileUploadField\" id=\"formIcon\"  {...register(\"file\")} />\r\n  //             </div>\r\n  //           </div>\r\n  //           <p className=\"fileRestriction\"> Image au format .jpg ou .png <br /> 2Mo maximum </p>\r\n  //           <label for=\"userName\" className=\"mt-b\">Nom d'utilisateur </label>\r\n  //           <label for=\"userName\" className=\"mt-b\">Prénom </label>\r\n  //           <input type=\"text\" id=\"firstname\" size=\"35\" {...register(\"firstName\", { value: user.firstName })}   required />\r\n  //           <label for=\"userName\" className=\"mt-b\">Nom</label>\r\n  //           <input type=\"text\" id=\"lastname\" size=\"35\" {...register(\"lastName\", { value: user.lastName })}   required />\r\n  //           <label for=\"userBio\">Présentation</label>\r\n  //           <input id=\"userBio\" className=\"mb-b\" maxlength=\"255\" {...register(\"biography\", { value: user.biography })}  />\r\n  //           <label for=\"userLoca\">Ville</label>\r\n  //           <input type=\"text\" id=\"userLoca\" size=\"35\" {...register(\"city\", { value: user.city })} />\r\n  //           <label for=\"userLoca\">Pays</label>\r\n  //           <input type=\"text\" id=\"userLoca\" size=\"35\" {...register(\"country\", { value: user.country })}   />\r\n  //           <label for=\"userLI\">Page LinkedIn</label>\r\n  //           <input type=\"text\" id=\"userLI\" size=\"90\" {...register(\"linkedinAccount\", { value: user.linkedinAccount })}  />\r\n  //           <label for=\"userTW\">Page Twitter</label>\r\n  //           <input type=\"text\" id=\"userTW\" size=\"90\" {...register(\"twitterAccount\", { value: user.twitterAccount })}   />\r\n  //           <label for=\"userFB\">Page Facebook</label>\r\n  //           <input type=\"text\" id=\"userFB\" size=\"90\" {...register(\"facebookAccount\", { value: user.facebookAccount })}   />\r\n  //           <label for=\"userPI\">Page Pinterest</label>\r\n  //           <input type=\"text\" id=\"userPI\" size=\"90\" {...register(\"pinterestAccount\", { value: user.pinterestAccount })}  />\r\n  //           <label for=\"userPI\">Page Instagram</label>\r\n  //           <input type=\"text\" id=\"userIN\" size=\"90\" {...register(\"instragramAccount\", { value: user.instragramAccount })}  />\r\n  //           <input type=\"submit\" className=\"submit mt-b smart-modal-close\" value=\"Enregistrer les modifications\" style={{ position: \"relative\", right: \"0\", top: \"0\" }} />\r\n  //         </form>\r\n  //       </div> */}\r\n  //       {/* <!-- Modal édition /du profil membre - fin --> */}\r\n\r\n  //       <div className=\"userAvatar\" style={user.iconImage ? { backgroundImage: `url(${URLDayl}images/contentUser/${user.id}/${user.iconImage})` } : { backgroundImage: `url(${defaultLogo})` }}></div>\r\n  //       <h1>{user.firstName} {user.lastName}</h1>\r\n  //       <p className=\"userActualPlace\">{user.city}{user.city && user.city && \",\"} {user.country}</p>\r\n  //       <p className=\"userLifeSpan\">{/* &#10013; 23-01-1989 */}</p>\r\n  //       <p className=\"userQuickBio\">\r\n  //         {user.biography}\r\n  //       </p>\r\n\r\n\r\n  //       {/* <!-- LIEN VERS MON ATELIER - début --> */}\r\n\r\n  //       {user.userType !== \"amateur\" && <Link className=\"workShopLink mb-b\" to=\"../../view/Atelier.js\">Mon atelier</Link>}\r\n\r\n  //       {/* <!-- LIEN VERS MON ATELIER - fin --> */}\r\n\r\n  //       <div className=\"openRelations\">\r\n  //         {/* <!-- LIEN OUVERTURE MODAL RELATIONS - début --> */}\r\n  //         <a className=\"\" rel=\"nofollow\" onClick={(e) => setBoolNetWork(!boolNetWork)}><img src={pers} alt=\"Mes relations\" /></a>\r\n  //         <a className=\" modalTextLink\" rel=\"nofollow\" onClick={(e) => setBoolNetWork(!boolNetWork)}><span>Mon réseau</span><span>5</span></a>    {/* TODO */}\r\n  //         <a className=\" modalTextLink\" rel=\"nofollow\" onClick={(e) => setBoolNetWork(!boolNetWork)}><span>Mes abonnés</span><span>{stats.numberFollowers}</span></a>\r\n  //         <a className=\" modalTextLink\" rel=\"nofollow\" onClick={(e) => setBoolNetWork(!boolNetWork)}><span>Mes abonnements</span><span>{stats.numberFollowing}</span></a>\r\n  //         {/* <!-- LIEN OUVERTURE MODAL RELATIONS - fin --> */}\r\n  //       </div>\r\n\r\n  //       {boolNetWork === true && <ModalNetwork user={user} setUser={setUser} setBoolNetWork={setBoolNetWork} boolNetWork={boolNetWork} />}\r\n  //       {/* <!-- LIENS VERS LES PAGES DE RÉSEAUX SOCIAUX DE L'ABONNÉ.E - début --> */}\r\n  //       <ul className=\"userSocialLinks\">\r\n  //         <li>\r\n  //           <a href={user.linkedinAccount} target=\"_blank\">\r\n  //             <img src={LinkedinLogo} alt=\"Compte LinkedIn\" />\r\n  //           </a>\r\n  //         </li>\r\n  //         <li>\r\n  //           <a href={user.twitterAccount} target=\"_blank\">\r\n  //             <img\r\n  //               src={require(\"../../webapp/img/icons/ico_social_twitter_2.png\")}\r\n  //               alt=\"Compte Twitter\"\r\n  //             />\r\n  //           </a>\r\n  //         </li>\r\n  //         <li>\r\n  //           <a href={user.facebookAccount} target=\"_blank\">\r\n  //             <img\r\n  //               src={require(\"../../webapp/img/icons/ico_social_facebook_2.png\")}\r\n  //               alt=\"Compte Facebook\"\r\n  //             />\r\n  //           </a>\r\n  //         </li>\r\n  //         <li>\r\n  //           <a href={user.pinterestAccount} target=\"_blank\">\r\n  //             <img\r\n  //               src={require(\"../../webapp/img/icons/ico_social_pinterest_2.png\")}\r\n  //               alt=\"Compte Pinterest\"\r\n  //             />\r\n  //           </a>\r\n  //         </li>\r\n  //       </ul>\r\n  //       {/* <!-- LIENS VERS LES PAGES DE RÉSEAUX SOCIAUX DE L'ABONNÉ.E - fin --> */}\r\n\r\n  //       {/* <!-- DÉCONNEXION DU COMPTE - début --> */}\r\n  //       <div className=\"logoutLink pt-a\">\r\n  //         <a onClick={Disconnect}>Déconnexion du compte</a><br />\r\n  //         {/* <!-- DÉCONNEXION DU COMPTE - fin --> */}\r\n\r\n  //       </div>\r\n  //     </div>\r\n\r\n\r\n  //     <div id=\"modalSubscribedTo\" className=\"smart-modal-content scrollAuto\">\r\n  //       <h3>Abonnements</h3>\r\n  //       <a className=\"smart-modal-close\">\r\n  //         <img\r\n  //           className=\"img-left\"\r\n  //           src={require(\"../../webapp/img/icons/ico_close_2.svg\")}\r\n  //           alt=\"Trier\"\r\n  //         />\r\n  //       </a>\r\n  //       <div className=\"showSubs\">\r\n  //         {/* <!-- DÉTAILS ABONNEMENT - début --> */}\r\n  //         <div className=\"subDetails\">\r\n  //           <a\r\n  //             href=\"\"\r\n  //             className=\"userAvatar\"\r\n  //             style={{\r\n  //               backgroundImage: `url(${require(\"../../webapp/temp/arthur_1.jpg\")})`,\r\n  //             }}\r\n  //           ></a>\r\n  //           <a href=\"\" className=\"userName\">\r\n  //             Nom d'utilisateur\r\n  //           </a>\r\n  //           <div className=\"userSubs\">128 abonné.es</div>\r\n  //           <a href=\"#\" className=\"endMemberSubscription\"></a>\r\n\r\n  //           <input\r\n  //             type=\"button\"\r\n  //             className=\"endMemberSubscription\"\r\n  //             value=\"\"\r\n  //             onClick=\"openCloseNextDiv(this);\"\r\n  //           />\r\n\r\n  //           <div className=\"deleteConfirm\">\r\n  //             <span className=\"deleteText\">Supprimer?</span>\r\n  //             <button\r\n  //               type=\"button\"\r\n  //               className=\"yes closeTwoParentsNow\"\r\n  //               value=\"\"\r\n  //             >\r\n  //               Oui\r\n  //             </button>\r\n  //             <button type=\"button\" className=\"no closeParentNow\" value=\"\">\r\n  //               Non\r\n  //             </button>\r\n  //           </div>\r\n  //         </div>\r\n  //         {/* <!-- DÉTAILS ABONNEMENT - fin -->\r\n\t// \t\t\t\t\t<!-- DÉTAILS ABONNEMENT - début --> */}\r\n  //         <div className=\"subDetails\">\r\n  //           <a\r\n  //             href=\"/#\"\r\n  //             className=\"userAvatar\"\r\n  //             style={{\r\n  //               backgroundImage: `url(${require(\"../../webapp/temp/arthur_1.jpg\")})`,\r\n  //             }}\r\n  //           ></a>\r\n  //           <a href=\"\" className=\"userName\">\r\n  //             Nom d'utilisateur\r\n  //           </a>\r\n  //           <div className=\"userSubs\">128 abonné.es</div>\r\n  //           <a href=\"/#\" className=\"endMemberSubscription\"></a>\r\n\r\n  //           <input\r\n  //             type=\"button\"\r\n  //             className=\"endMemberSubscription\"\r\n  //             value=\"\"\r\n  //             onClick=\"openCloseNextDiv(this);\"\r\n  //           />\r\n\r\n  //           <div className=\"deleteConfirm\">\r\n  //             <span className=\"deleteText\">Supprimer?</span>\r\n  //             <button\r\n  //               type=\"button\"\r\n  //               className=\"yes closeTwoParentsNow\"\r\n  //               value=\"\"\r\n  //             >\r\n  //               Oui\r\n  //             </button>\r\n  //             <button type=\"button\" className=\"no closeParentNow\" value=\"\">\r\n  //               Non\r\n  //             </button>\r\n  //           </div>\r\n  //         </div>\r\n  //         {/* <!-- DÉTAILS ABONNEMENT - fin -->\r\n\t// \t\t\t\t\t<!-- DÉTAILS ABONNEMENT - début --> */}\r\n  //         <div className=\"subDetails\">\r\n  //           <a\r\n  //             href=\"\"\r\n  //             className=\"userAvatar\"\r\n  //             style={{\r\n  //               backgroundImage: `url(${require(\"../../webapp/temp/arthur_1.jpg\")})`,\r\n  //             }}\r\n  //           ></a>\r\n  //           <a href=\"\" className=\"userName\">\r\n  //             Nom d'utilisateur\r\n  //           </a>\r\n  //           <div className=\"userSubs\">128 abonné.es</div>\r\n  //           <a href=\"#\" className=\"endMemberSubscription\"></a>\r\n\r\n  //           <input\r\n  //             type=\"button\"\r\n  //             className=\"endMemberSubscription\"\r\n  //             value=\"\"\r\n  //             onClick=\"openCloseNextDiv(this);\"\r\n  //           />\r\n\r\n  //           <div className=\"deleteConfirm\">\r\n  //             <span className=\"deleteText\">Supprimer?</span>\r\n  //             <button\r\n  //               type=\"button\"\r\n  //               className=\"yes closeTwoParentsNow\"\r\n  //               value=\"\"\r\n  //             >\r\n  //               Oui\r\n  //             </button>\r\n  //             <button type=\"button\" className=\"no closeParentNow\" value=\"\">\r\n  //               Non\r\n  //             </button>\r\n  //           </div>\r\n  //         </div>\r\n  //         {/* <!-- DÉTAILS ABONNEMENT - fin -->\r\n\t// \t\t\t\t\t<!-- DÉTAILS ABONNEMENT - début --> */}\r\n  //         <div className=\"subDetails\">\r\n  //           <a\r\n  //             href=\"\"\r\n  //             className=\"userAvatar\"\r\n  //             style={{\r\n  //               backgroundImage: `url(${require(\"../../webapp/temp/arthur_1.jpg\")})`,\r\n  //             }}\r\n  //           ></a>\r\n  //           <a href=\"\" className=\"userName\">\r\n  //             Nom d'utilisateur\r\n  //           </a>\r\n  //           <div className=\"userSubs\">128 abonné.es</div>\r\n  //           <a href=\"#\" className=\"endMemberSubscription\"></a>\r\n\r\n  //           <input\r\n  //             type=\"button\"\r\n  //             className=\"endMemberSubscription\"\r\n  //             value=\"\"\r\n  //             onClick=\"openCloseNextDiv(this);\"\r\n  //           />\r\n\r\n  //           <div className=\"deleteConfirm\">\r\n  //             <span className=\"deleteText\">Supprimer?</span>\r\n  //             <button\r\n  //               type=\"button\"\r\n  //               className=\"yes closeTwoParentsNow\"\r\n  //               value=\"\"\r\n  //             >\r\n  //               Oui\r\n  //             </button>\r\n  //             <button type=\"button\" className=\"no closeParentNow\" value=\"\">\r\n  //               Non\r\n  //             </button>\r\n  //           </div>\r\n  //         </div>\r\n  //         {/* <!-- DÉTAILS ABONNEMENT - fin --> */}\r\n  //       </div>\r\n  //     </div>\r\n  //     {/* <!-- MODAL ABONNEMENTS - FIN -->\r\n\r\n\t// \t\t\t<!-- ******************************************************\r\n\t// \t\t\t***********************************************************\r\n\r\n\t// \t\t\tBLOC INFOS MEMBRE GAUCHE HAUT DE PAGE - fin\r\n\r\n\t// \t\t\t***********************************************************\r\n\t// \t\t\t******************************************************* --> */}\r\n  //   </div>\r\n  // );\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/CompteAmateurPage/DisplayUser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "DisplayUser",
    "memberof": "src/component/CompteAmateurPage/DisplayUser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/DisplayUser.js~DisplayUser",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/DisplayUser.js",
    "importStyle": "DisplayUser",
    "description": "This component diplay your infomations (name, profile picture, background,...)",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsLogged",
        "description": "isLogged setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "images/uploadUserBackgroundIcon?userId=${user.id} : post new background image"
      },
      {
        "types": [
          "*"
        ],
        "description": "users/statistics : get user stats"
      }
    ],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/FavArtists.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n/**\r\n * This component contain your list of favorite artists\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @emits - artist/{id} : get artist informations\r\n * @emits - artistLiked/deleteFavoriteArtist/ : unfollow artist\r\n * \r\n */\r\n\r\nexport default function FavArtists({ user, setUser }) {\r\n\r\n\tconst [listArtist, setListArtist] = useState([]);\r\n\tconst [refreshKey, setRefreshKey] = useState(0);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t//get Painting info//\r\n\tuseEffect(() => {\r\n\r\n\t\tsetListArtist([])\r\n\r\n\t\tfor (let i = 0; i < user.artistLiked.length; i++)\r\n\t\t\taxios.get(URLDayl + `artist/${user.artistLiked[i]}`).then((response) => {\r\n\r\n\t\t\t\tlet boolArray = response.data;\r\n\t\t\t\tboolArray.bool = false;\r\n\t\t\t\tsetListArtist(listArtist => [...listArtist, boolArray]);\r\n\t\t\t\tconsole.log(response.data)\r\n\r\n\t\t\t});\r\n\r\n\r\n\r\n\r\n\t}, [refreshKey]);\r\n\r\n\t//Delete user like//\r\n\tconst deleteArtist = (artistId) => {\r\n\r\n\r\n\t\taxios.get(URLDayl + `artistLiked/deleteFavoriteArtist/${user.id}/${artistId}`,\r\n\t\t\t{ headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\r\n\t\t)\r\n\t\t\t.then((response) => {\r\n\r\n\r\n\t\t\t\t//update user\r\n\t\t\t\taxios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n\t\t\t\t)\r\n\t\t\t\t\t.then((response2) => {\r\n\r\n\t\t\t\t\t\tsetUser(response2.data)\r\n\t\t\t\t\t\tsetRefreshKey(oldKey => oldKey + 1);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t});\r\n\r\n\r\n\r\n\r\n\t}\r\n\r\n\t//afficher modale suppression//\r\n\tconst handleBoolListTrue = (index) => {\r\n\r\n\t\tconst tempBool = [...listArtist]\r\n\r\n\t\ttempBool[index].bool = true;\r\n\t\tsetListArtist(tempBool);\r\n\t}\r\n\r\n\t//cacher modale suppression//\r\n\tconst handleBoolListFalse = (index) => {\r\n\r\n\t\tconst tempBool = [...listArtist]\r\n\r\n\t\ttempBool[index].bool = false;\r\n\t\tsetListArtist(tempBool);\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"favArtists\">\r\n\t\t\t<div className=\"accountArtists \">\r\n\t\t\t\t{listArtist.length > 0 &&\r\n\t\t\t\t\tlistArtist.map((artist, index) => (\r\n\r\n\t\t\t\t\t\t<div className=\"item\" style={{ backgroundImage: `url(${require('../../webapp/temp/remedios-varo_1.jpg')}` }}>\r\n\t\t\t\t\t\t\t<div className=\"name\">{artist.artist_name_tot}</div>\r\n\t\t\t\t\t\t\t<div className=\"items-count\">{/* list.countItems */} oeuvres</div>\r\n\t\t\t\t\t\t\t<Link className=\"discover\" to={`../../view/ArtistDetailPage.js/${artist.artistIdtfIntern}`} state={artist.artistIdtfIntern} href=\"artiste.html\"></Link>\r\n\r\n\t\t\t\t\t\t\t<input type=\"button\" className=\"unfollow\" onClick={() => handleBoolListTrue(index)} value=\"\" />\r\n\r\n\t\t\t\t\t\t\t{artist.bool && <div className=\"deleteConfirm\">\r\n\t\t\t\t\t\t\t\t<span className=\"deleteText\">Supprimer?</span>\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"yes closeTwoParentsNow\" onClick={() => deleteArtist(artist.id)} value=\"\">Oui</button>\r\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"no closeParentNow\" onClick={() => handleBoolListFalse(index)} value=\"\">Non</button>\r\n\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t)\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/CompteAmateurPage/FavArtists.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "FavArtists",
    "memberof": "src/component/CompteAmateurPage/FavArtists.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/FavArtists.js~FavArtists",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/FavArtists.js",
    "importStyle": "FavArtists",
    "description": "This component contain your list of favorite artists",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "artist/{id} : get artist informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "artistLiked/deleteFavoriteArtist/ : unfollow artist"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/Likes.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { Link } from \"react-router-dom\"\r\nimport ListModal from \"../general/ListModal\";\r\n\r\n/**\r\n * This component contain your list of likes\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @emits - paintingEntity/{id} : get paint informations\r\n * @emits - users/updateFavoritePainting : delete paint\r\n */\r\n\r\nexport default function Likes({ user, setUser }) {\r\n\r\n    const [painting, setPainting] = useState([]);\r\n    const [refreshKey, setRefreshKey] = useState(0);\r\n    const [isLogged] = useState(true);\r\n\r\n\r\n\r\n    //get Painting info//\r\n    useEffect(() => {\r\n\r\n        setPainting([])\r\n\r\n        for (let i = 0; i < user.paintingLiked.length; i++)\r\n            axios.get(URLDayl + `paintingEntity/${user.paintingLiked[i]}`).then((response) => {\r\n\r\n                let boolArray = response.data;\r\n                boolArray.bool = false;\r\n                setPainting(painting => [...painting, boolArray]);\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n    }, [refreshKey]);\r\n\r\n\r\n\r\n    console.log(painting)\r\n\r\n    //Delete user like//\r\n    const deleteLike = (paintId) => {\r\n\r\n\r\n        axios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: paintId, operation: \"remove\" },\r\n            { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\r\n        )\r\n            .then((response) => {\r\n\r\n\r\n                console.log(\"remove\")\r\n                //update user\r\n                axios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n                )\r\n                    .then((response2) => {\r\n\r\n                        setUser(response2.data)\r\n                        setRefreshKey(oldKey => oldKey + 1);\r\n                    });\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    //afficher modale suppression//\r\n    const handleBoolListTrue = (index) => {\r\n\r\n        const tempBool = [...painting]\r\n\r\n        tempBool[index].bool = true;\r\n        setPainting(tempBool);\r\n    }\r\n\r\n    //cacher modale suppression//\r\n    const handleBoolListFalse = (index) => {\r\n\r\n        const tempBool = [...painting]\r\n\r\n        tempBool[index].bool = false;\r\n        setPainting(tempBool);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"Likes\">\r\n\r\n\r\n\r\n            <div className=\"accountArtists\">\r\n\r\n                {painting.length > 0 &&\r\n                    painting.map((paint, index) => {\r\n                        return (\r\n                            <div className=\"sliderOne owl-loaded \">\r\n                                <div className=\"item\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${paint.artist_idtf_intern}/${paint.generatedId})` }}>\r\n\r\n                                    <div style={{ top: \"193px\", right: \"150px\" }}><ListModal user={user} isLogged={isLogged} listPaint={paint} /></div>\r\n                                    <div className=\"bt-wrapper\">\r\n\r\n                                        {/* <div className=\"img-wrapper\"> */}\r\n\r\n                                        <div className=\"titre\">\r\n                                            <h3 style={{ fontStyle: \"oblique\", fontWeight: \"600\", fontSize: \"14px\", color: \"white\", marginBottom: \"15px\"\r\n                                         }}>{paint.artist_name_tot}</h3>\r\n                                            {paint.aw_title_Origin}\r\n                                            <div className=\"date\">{paint.aw_year}</div>\r\n                                        </div>\r\n                                        <div className=\"container-action\">\r\n                                            <Link className=\"bt-action voir\" to={`../../view/OpusPage.js/${paint.id}`} state={paint.id}>\r\n\r\n                                                voir\r\n\r\n                                            </Link>\r\n                                            <Link className=\"bt-action match\" to={`../../view/MatchingPage.js/${paint.id}`} state={paint.id}>\r\n                                                match\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"name\"></div>\r\n\r\n                                    <input type=\"button\" className=\"unfollow\" onClick={() => handleBoolListTrue(index)} />\r\n\r\n                                    {paint.bool === true &&\r\n                                        <div className=\"deleteConfirm\">\r\n                                            <span className=\"deleteText\">Supprimer?</span>\r\n                                            <button type=\"button\" className=\"yes closeTwoParentsNow\" onClick={() => deleteLike(paint.id)} value=\"\">Oui</button>\r\n                                            <button type=\"button\" className=\"no closeParentNow\" onClick={() => handleBoolListFalse(index)} value=\"\">Non</button>\r\n                                        </div>}\r\n\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/CompteAmateurPage/Likes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "Likes",
    "memberof": "src/component/CompteAmateurPage/Likes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/Likes.js~Likes",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/Likes.js",
    "importStyle": "Likes",
    "description": "This component contain your list of likes",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/{id} : get paint informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "users/updateFavoritePainting : delete paint"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/Lists.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { set } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\"\r\n\r\n\r\n/**\r\n * This component contain your list of painting list\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @emits - userLists/save : create new list\r\n * @emits - userLists/byUserId : get user lists\r\n * @emits - userLists/deleteById?listId=${listId} : delete selected list\r\n */\r\n\r\n\r\nexport default function Lists({ user, setUser }) {\r\n\r\n\r\n// \tconst [listList, setListList] = useState([]);\r\n// \tconst [listTitle, setListTitle] = useState([]);\r\n// \tconst [refreshKey, setRefreshKey] = useState(0);\r\n\r\n\r\n\r\n\r\n// \t//Post new list to the API//\r\n// \tconst handleSubmit = (e) => {\r\n\r\n\r\n// \t\te.preventDefault();\r\n\r\n// \t\taxios.post(URLDayl + \"userLists/save\",\r\n// \t\t\t{ listName: listTitle, rank: 0, userId: user.id, id: 0, status: \"ACTIVE\", detail: \"\", imageUrl: \"\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n// \t\t)\r\n// \t\t\t.then((response) => {\r\n// \t\t\t\tsetRefreshKey(oldKey => oldKey + 1);\r\n\r\n// \t\t\t\ttoast.success(\"Nouvelle liste ajoutée!\", {\r\n// \t\t\t\t\tposition: \"top-right\",\r\n// \t\t\t\t\tautoClose: 3000,\r\n// \t\t\t\t\thideProgressBar: false,\r\n// \t\t\t\t\tcloseOnClick: true,\r\n// \t\t\t\t\tpauseOnHover: true,\r\n// \t\t\t\t\tdraggable: true,\r\n// \t\t\t\t\tprogress: undefined,\r\n// \t\t\t\t});\r\n\r\n\r\n// \t\t\t});\r\n\r\n// \t}\r\n\r\n// \t//Get User List//\r\n// \tuseEffect(() => {\r\n\r\n// \t\taxios\r\n// \t\t\t.get(URLDayl + \"userLists/byUserId\", { params: { userId: user.id } }\r\n// \t\t\t)\r\n// \t\t\t.then((response) => {\r\n// \t\t\t\tsetListList(response.data);\r\n// console.log(response.data)\r\n// \t\t\t\tconst boolArray = response.data.map((el) => { return { ...el, bool: false } });\r\n// \t\t\t\tsetListList(boolArray)\r\n// \t\t\t});\r\n\r\n// \t}, [refreshKey]);\r\n\r\n// \t//Delete user list//\r\n// \tconst deleteList = (listId) => {\r\n\r\n// \t\taxios\r\n// \t\t\t.delete(URLDayl + `userLists/deleteById?listId=${listId}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n// \t\t\t)\r\n// \t\t\t.then((response) => {\r\n// \t\t\t\tsetListList(response.data);\r\n// \t\t\t\tsetRefreshKey(oldKey => oldKey + 1);\r\n\r\n// \t\t\t\ttoast.success(\"Liste supprimée!\", {\r\n// \t\t\t\t\tposition: \"top-right\",\r\n// \t\t\t\t\tautoClose: 3000,\r\n// \t\t\t\t\thideProgressBar: false,\r\n// \t\t\t\t\tcloseOnClick: true,\r\n// \t\t\t\t\tpauseOnHover: true,\r\n// \t\t\t\t\tdraggable: true,\r\n// \t\t\t\t\tprogress: undefined,\r\n// \t\t\t\t});\r\n// \t\t\t});\r\n\r\n\r\n// \t}\r\n\r\n\r\n// \t//afficher modale suppression//\r\n// \tconst handleBoolListTrue = (index) => {\r\n\r\n// \t\tconst tempBool = [...listList]\r\n\r\n// \t\ttempBool[index].bool = true;\r\n// \t\tsetListList(tempBool);\r\n// \t}\r\n\r\n// \t//cacher modale suppression//\r\n// \tconst handleBoolListFalse = (index) => {\r\n\r\n// \t\tconst tempBool = [...listList]\r\n\r\n// \t\ttempBool[index].bool = false;\r\n// \t\tsetListList(tempBool);\r\n\r\n// \t}\r\n\r\n\r\n\r\n\r\n\r\n// \treturn (\r\n// \t\t<div className=\"Lists\">\r\n// \t\t\t<div className=\"createThisNewFolder mb-b\">\r\n// \t\t\t\t<p className=\"mt-a\">Créer une nouvelle liste</p>\r\n// \t\t\t\t<form action=\"\" onSubmit={handleSubmit}>\r\n// \t\t\t\t\t<div className=\"addListForm\">\r\n// \t\t\t\t\t\t<input onChange={(e) => setListTitle(e.target.value)} value={listTitle} type=\"text\" placeholder=\"Nom de la liste\" />\r\n// \t\t\t\t\t\t<button type=\"submit\">Créer</button>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</form>\r\n// \t\t\t</div>\r\n// \t\t\t{/* <!-- créer une nouvelle liste - fin --> */}\r\n\r\n// \t\t\t<div className=\"accountArtists \">\r\n// \t\t\t\t{listList.length > 0 &&\r\n// \t\t\t\t\tlistList.map((list, index) => (\r\n\r\n// \t\t\t\t\t\t<div className=\"item\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${list.imageUrl})` }}>\r\n// \t\t\t\t\t\t\t<div className=\"name\">{list.listName}</div>\r\n// \t\t\t\t\t\t\t<div className=\"items-count\">{list.countItems} oeuvres</div>\r\n// \t\t\t\t\t\t\t<Link className=\"discover\" to={`../../view/ListeAmateurPage.js/${list.id}`} state={list.id}></Link>\r\n\r\n// \t\t\t\t\t\t\t<input type=\"button\" className=\"unfollow\" onClick={() => handleBoolListTrue(index)} value=\"\" />\r\n\r\n// \t\t\t\t\t\t\t{list.bool && <div className=\"deleteConfirm\">\r\n// \t\t\t\t\t\t\t\t<span className=\"deleteText\">Supprimer?</span>\r\n// \t\t\t\t\t\t\t\t<button type=\"button\" className=\"yes closeTwoParentsNow\" onClick={() => deleteList(list.id)} value=\"\">Oui</button>\r\n// \t\t\t\t\t\t\t\t<button type=\"button\" className=\"no closeParentNow\" onClick={() => handleBoolListFalse(index)} value=\"\">Non</button>\r\n// \t\t\t\t\t\t\t</div>}\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t))}\r\n\r\n// \t\t\t</div>\r\n\r\n// \t\t</div>\r\n// \t)\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/CompteAmateurPage/Lists.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "Lists",
    "memberof": "src/component/CompteAmateurPage/Lists.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/Lists.js~Lists",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/Lists.js",
    "importStyle": "Lists",
    "description": "This component contain your list of painting list",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "userLists/save : create new list"
      },
      {
        "types": [
          "*"
        ],
        "description": "userLists/byUserId : get user lists"
      },
      {
        "types": [
          "*"
        ],
        "description": "userLists/deleteById?listId=${listId} : delete selected list"
      }
    ],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/Matching.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\n\r\n\r\n\r\n/**\r\n * This component contain your list of saved matching\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n */\r\n\r\nexport default function Matching({ user }) {\r\n\r\n    return (\r\n        <div className=\"Matching\">\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/CompteAmateurPage/Matching.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "Matching",
    "memberof": "src/component/CompteAmateurPage/Matching.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/Matching.js~Matching",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/Matching.js",
    "importStyle": "Matching",
    "description": "This component contain your list of saved matching",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/ModalNetwork.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport pers from \"../../webapp/img/icons/ico_relations_1.svg\"\r\nimport send from \"../../webapp/img/icons/ico_chatbox_send.svg\";\r\nimport del from \"../../webapp/img/icons/ico_user_delete_2.svg\"\r\nimport soc1 from \"../../webapp/temp/soc_1.jpg\"\r\nimport soc2 from \"../../webapp/temp/soc_2.jpg\"\r\nimport soc3 from \"../../webapp/temp/soc_3.jpg\"\r\nimport soc4 from \"../../webapp/temp/soc_4.jpg\"\r\nimport soc5 from \"../../webapp/temp/soc_5.jpg\"\r\nimport soc6 from \"../../webapp/temp/soc_6.jpg\"\r\nimport soc7 from \"../../webapp/temp/soc_7.jpg\"\r\n\r\n\r\n\r\n/**\r\n * This component is a modal used to manage your network (add/delete friends,...)\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} boolNetWork - test if the network modal is open\r\n *  @param {boolean} setBoolNetWork - boolNetWork setter\r\n */\r\n\r\n\r\nexport default function ModalNetwork({ user, setUser, boolNetWork, setBoolNetWork }) {\r\n\r\n    //  init Variables global\r\n    const [isActive, setIsActive] = useState(1);\r\n\r\n    //Active class Tab\r\n    const toggleClass = (val) => {\r\n        setIsActive(val);\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"ModalNetwork\">\r\n\r\n            {/* <!-- MODAL GERER MON RESEAU - DÉBUT --> */}\r\n            <div className=\"smart-modal-overlay\" style={{ display: \"block\" }}></div>\r\n            <div className=\"smart-modal-content-l scrollAuto\" style={{ transform: \"translate(-50%,-50%)\", display: \"inline-flex\", flexWrap: \"wrap\", alignContent: \"flex-start\" }}>\r\n                <h3>Gérer mon réseau</h3>\r\n                <a className=\"smart-modal-close\" onClick={(e) => setBoolNetWork(!boolNetWork)}><img className=\"img-left\" src={close} alt=\"Trier\" /></a>\r\n                <div className=\"showSubs\">\r\n                    <Tabs defaultIndex={isActive - 1}>\r\n                        <TabList>\r\n                            <nav className=\"accountTabs\">\r\n                                <ul>\r\n                                    <Tab className=\"react-tabs__tab\"><a className={isActive === 1 ? 'active' : null} onClick={() => toggleClass(1)} >Demandes d'ajout<span className=\"pillR\">8</span></a></Tab>\r\n                                    <Tab className=\"react-tabs__tab\"><a className={isActive === 2 ? 'active' : null} onClick={() => toggleClass(2)}>Mon réseau</a></Tab>\r\n                                    <Tab className=\"react-tabs__tab\"><a className={isActive === 3 ? 'active' : null} onClick={() => toggleClass(3)}>Mes abonnés</a></Tab>\r\n                                    <Tab className=\"react-tabs__tab\"> <a className={isActive === 4 ? 'active' : null} onClick={() => toggleClass(4)}>Mes abonnements</a></Tab>\r\n                                </ul>\r\n                            </nav>\r\n                        </TabList>\r\n                        <div className=\"doubleSearch\" data-tooltip=\"Recherche de personnes\">\r\n                            <form action=\"\">\r\n                                <input type=\"text\" style={{ backgroundImage: `url(${pers})`, backgroundSize: \"25px 25px\" }} size=\"35\" placeholder=\"\" required />\r\n                                <input type=\"button\" value=\"\" />\r\n                            </form>\r\n                        </div>\r\n                        <TabPanel>\r\n                            <h4 className=\"mb-b\">Demandes d’ajout à votre réseau (7)</h4>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\r\n                            <div className=\"subDetails\">\r\n                                <div className=\"userFacts\">\r\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc1})` }}></a>\r\n                                    <a href=\"\" className=\"userName\">Arthuro Bracchio</a>\r\n                                    <p className=\"userPlace\">Florence, Italie</p>\r\n                                    <p className=\"userCorel\">17 membres en commun</p>\r\n                                </div>\r\n                                <div className=\"userSubBtn\">\r\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\r\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\r\n\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\r\n                            <div className=\"subDetails\">\r\n                                <div className=\"userFacts\">\r\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc2})` }}></a>\r\n                                    <a href=\"\" className=\"userName\">Istria Desmoth</a>\r\n                                    <p className=\"userPlace\">Edimburgh, Ecosse</p>\r\n                                    <p className=\"userCorel\">31 membres en commun</p>\r\n                                </div>\r\n                                <div className=\"userSubBtn\">\r\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\r\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\r\n\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\r\n                            <div className=\"subDetails\">\r\n                                <div className=\"userFacts\">\r\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc3})` }}></a>\r\n                                    <a href=\"\" className=\"userName\">Latosha Johnson</a>\r\n                                    <p className=\"userPlace\">Chicago, U.S.A</p>\r\n                                    <p className=\"userCorel\">45 membres en commun</p>\r\n                                </div>\r\n                                <div className=\"userSubBtn\">\r\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\r\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\r\n\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\r\n                            <div className=\"subDetails\">\r\n                                <div className=\"userFacts\">\r\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc4})` }}></a>\r\n                                    <a href=\"\" className=\"userName\">Conchita Martinez</a>\r\n                                    <p className=\"userPlace\">Madrid, Espagne</p>\r\n                                    <p className=\"userCorel\">52 membres en commun</p>\r\n                                </div>\r\n                                <div className=\"userSubBtn\">\r\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\r\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\r\n\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\r\n                            <div className=\"subDetails\">\r\n                                <div className=\"userFacts\">\r\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc5})` }}></a>\r\n                                    <a href=\"\" className=\"userName\">Saginaw Rashpania</a>\r\n                                    <p className=\"userPlace\">New-Dehli, Inde</p>\r\n                                    <p className=\"userCorel\">12 membres en commun</p>\r\n                                </div>\r\n                                <div className=\"userSubBtn\">\r\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\r\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\r\n\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\r\n                            <div className=\"subDetails\">\r\n                                <div className=\"userFacts\">\r\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc6})` }}></a>\r\n                                    <a href=\"\" className=\"userName\">Ilona Hindenberg</a>\r\n                                    <p className=\"userPlace\">Hannover, Allemagne</p>\r\n                                    <p className=\"userCorel\">36 membres en commun</p>\r\n                                </div>\r\n                                <div className=\"userSubBtn\">\r\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\r\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\r\n\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\r\n                            <div className=\"subDetails\">\r\n                                <div className=\"userFacts\">\r\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc7})` }}></a>\r\n                                    <a href=\"\" className=\"userName\">Antonin Despentes</a>\r\n                                    <p className=\"userPlace\">Lyon, France</p>\r\n                                    <p className=\"userCorel\">36 membres en commun</p>\r\n                                </div>\r\n                                <div className=\"userSubBtn\">\r\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\r\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <h4 className=\"mb-b\">Votre Réseau (7)</h4>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\r\n                            <div className=\"subDetails\">\r\n                                <div className=\"userFacts\">\r\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc1})` }}></a>\r\n                                    <a href=\"\" className=\"userName\">Arthuro Bracchio</a>\r\n                                    <p className=\"userPlace\">Florence, Italie</p>\r\n                                    <p className=\"userCorel\">17 membres en commun</p>\r\n                                </div>\r\n                                <div className=\"userSubBtn\">\r\n                                    <a className=\"renameIt\" style={{ right: \"50px\", width: \"42px\", height: \"42px\",padding: \"8px\" }}>\r\n                                        <img src={del} style={{ width: \"20px\", height: \"20px\" }} />\r\n                                    </a>\r\n                                    <a type=\"button\" className=\"topAccountBg\" value=\"Accepter\" style={{ border: \"solid 1px grey\", right: \"0\" }}>\r\n                                        <img src={send} style={{ width: \"20px\", height: \"20px\" }} />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <h4 className=\"mb-b\">Vos Abonnés (7)</h4>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\r\n                            <div className=\"subDetails\">\r\n                                <div className=\"userFacts\">\r\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc1})` }}></a>\r\n                                    <a href=\"\" className=\"userName\">Arthuro Bracchio</a>\r\n                                    <p className=\"userPlace\">Florence, Italie</p>\r\n                                    <p className=\"userCorel\">17 membres en commun</p>\r\n                                </div>\r\n                                <div className=\"userSubBtn\">\r\n                                <a className=\"renameIt\" style={{ right: \"50px\", width: \"42px\", height: \"42px\",padding: \"8px\" }}>\r\n                                        <img src={del} style={{ width: \"20px\", height: \"20px\" }} />\r\n                                    </a>\r\n                                    <a type=\"button\" className=\"topAccountBg\" value=\"Accepter\" style={{ border: \"solid 1px grey\", right: \"0\" }}>\r\n                                        <img src={send} style={{ width: \"20px\", height: \"20px\" }} />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <h4 className=\"mb-b\">Vos Abonnements (7)</h4>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\r\n                            <div className=\"subDetails\">\r\n                                <div className=\"userFacts\">\r\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc1})` }}></a>\r\n                                    <a href=\"\" className=\"userName\">Arthuro Bracchio</a>\r\n                                    <p className=\"userPlace\">Florence, Italie</p>\r\n                                    <p className=\"userCorel\">17 membres en commun</p>\r\n                                </div>\r\n                                <div className=\"userSubBtn\">\r\n                                <a className=\"renameIt\" style={{ right: \"50px\", width: \"42px\", height: \"42px\",padding: \"8px\" }}>\r\n                                        <img src={del} style={{ width: \"20px\", height: \"20px\" }} />\r\n                                    </a>\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\r\n                        </TabPanel>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/CompteAmateurPage/ModalNetwork.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "ModalNetwork",
    "memberof": "src/component/CompteAmateurPage/ModalNetwork.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/ModalNetwork.js~ModalNetwork",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/ModalNetwork.js",
    "importStyle": "ModalNetwork",
    "description": "This component is a modal used to manage your network (add/delete friends,...)",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "boolNetWork",
        "description": "test if the network modal is open"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setBoolNetWork",
        "description": "boolNetWork setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/TabAmateur.js",
    "content": "import * as React from 'react';\r\nimport { useEffect, useState, } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport FavArtists from \"./FavArtists\";\r\nimport Matching from \"./Matching\";\r\nimport Likes from \"./Likes\";\r\nimport Lists from \"./Lists\";\r\nimport Comments from \"./Comments\";\r\nimport Activity from \"./Activity\";\r\nimport hash from \"../../webapp/img/icons/ico_hashtag_1.svg\"\r\nimport pers from \"../../webapp/img/icons/ico_relations_1.svg\"\r\n// import Tab from \"@mui/material/Tab\";\r\n// import Tabs from \"@mui/material/Tabs\";\r\n// import TabList from \"@mui/material/TabList\";\r\n// import TabPanel from \"@mui/material/TabPanel\";\r\n// import TabContext from \"@mui/material/TabContext\";\r\n\r\n\r\n/**\r\n * This component order the previous components in tabs\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {number} isActive - tab selection\r\n *  @param {number} setIsActive - isActive setter\r\n */\r\n\r\n\r\nexport default function TabAmateurs({ user, setUser, isActive, setIsActive }) {\r\n\r\n    //init Variables global\r\n    // const [isActive, setActive] = useState(1);\r\n\r\n\r\n    // // Init onglet ouvert\r\n    // useEffect(() => {\r\n    //     toggleClass(isActive);\r\n    // }, []);\r\n\r\n    //Active class Tab\r\n    const toggleClass = (val) => {\r\n        setIsActive(val);\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"TabAmateurs\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div className=\"accountPageContent\">\r\n                {/* <!-- Double search - début --> */}\r\n\r\n                <div className=\"doubleSearch formCompact\" style={{ height: \"80px\" }}>\r\n                    {isActive === 1 &&\r\n\r\n                        <div className=\"generalSearch\" data-tooltip=\"Recherche de personnes\">\r\n                            <form action=\"\">\r\n                                <input type=\"text\" style={{ backgroundImage: `url(${pers})`, backgroundSize: \"25px 25px\" }} size=\"35\" placeholder=\"\" required />\r\n                                <input type=\"button\" value=\"\" />\r\n                            </form>\r\n                        </div>\r\n                    }\r\n                    {isActive === 1 &&\r\n                        <div className=\"hashtagSearch\" data-tooltip=\"Recherche par Hashtag\">\r\n                            <form action=\"\">\r\n                                <input type=\"text\" style={{ backgroundImage: `url(${hash})`, backgroundSize: \"20px 20px\" }} size=\"35\" placeholder=\"\" required />\r\n                                <input type=\"button\" value=\"\" />\r\n                            </form>\r\n                        </div>}\r\n\r\n\r\n                </div>\r\n\r\n                {/* <!-- Double search - fin --> */}\r\n                <Tabs defaultIndex={isActive - 1}>\r\n                    <TabList>\r\n                        <nav className=\"accountTabs\">\r\n                            <ul>\r\n\r\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 1 ? 'active' : null} onClick={() => toggleClass(1)} >Mon Fil{/*<!-- Pillule rouge avec écriture blanche >> -->*/} <span className=\"pillR\">8</span> </a></Tab>\r\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 2 ? 'active' : null} onClick={() => toggleClass(2)} >Actus Dayl{/*<!-- Pillule rouge avec écriture blanche >> -->*/} <span className=\"pillR\">8</span></a></Tab>\r\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 3 ? 'active' : null} onClick={() => toggleClass(3)} >Mes Artistes{/*<!-- Pillule rouge avec écriture blanche >> -->*/} {user.artistLiked && user.artistLiked.length !== 0 && <span className=\"pillR\">{user.artistLiked && user.artistLiked.length}</span>} </a></Tab>\r\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 4 ? 'active' : null} onClick={() => toggleClass(4)} > Matching{/*<!-- Pillule rouge avec écriture blanche >> -->*/} {user.matchingLiked && user.matchingLiked.length !== 0 && <span className=\"pillR\">{user.matchingLiked && user.matchingLiked.length}</span>} </a></Tab>\r\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 5 ? 'active' : null} onClick={() => toggleClass(5)} >Likes{/*<!-- Pillule rouge avec écriture blanche >> -->*/} {user.paintingLiked && user.paintingLiked.length !== 0 && <span className=\"pillR\">{user.paintingLiked && user.paintingLiked.length}</span>} </a></Tab>\r\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 6 ? 'active' : null} onClick={() => toggleClass(6)} >Listes{/*<!-- Pillule rouge avec écriture blanche >> -->*/} {user.listIds && user.listIds.length !== 0 && <span className=\"pillR\">{user.listIds && user.listIds.length}</span>} </a></Tab>\r\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 7 ? 'active' : null} onClick={() => toggleClass(7)} >Commentaires{/*<!-- Pillule rouge avec écriture blanche >> -->*/} <span className=\"pillR\">8</span> </a></Tab>\r\n                                {/* <Tab className=\"react-tabs__tab\"><a className={isActive === 7 ? 'active' : null} onClick={() => toggleClass(7)} >Expositions</a></Tab> */}\r\n                            </ul>\r\n                        </nav>\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                        <Activity user={user} />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <FavArtists user={user} />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <Matching user={user} />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <Likes user={user} setUser={setUser} />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <Lists user={user} />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <Comments user={user} />\r\n                    </TabPanel>\r\n                    {/* <TabPanel>\r\n                       <Expositions user = {user}/>\r\n                    </TabPanel> */}\r\n                </Tabs>\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/CompteAmateurPage/TabAmateur.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "TabAmateurs",
    "memberof": "src/component/CompteAmateurPage/TabAmateur.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/TabAmateur.js~TabAmateurs",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/TabAmateur.js",
    "importStyle": "TabAmateurs",
    "description": "This component order the previous components in tabs",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "isActive",
        "description": "tab selection"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsActive",
        "description": "isActive setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/component/general/EmojiPicker.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { set } from \"react-hook-form\";\r\nimport photo from \"../../webapp/temp/arthur_1.jpg\"\r\nimport photo2 from \"../../webapp/temp/olivier_profil_1.jpeg\"\r\nimport data from '@emoji-mart/data'\r\nimport Picker from 'emoji-picker-react';\r\n\r\n/**\r\n * This component is an emoji Picker used to send emoji in chat\r\n * @param {string} txtArea - string containing your message\r\n * @param {string} setTxtArea - txtArea setter\r\n\r\n */\r\n\r\n\r\nexport default function EmojiPicker({ txtArea, setTxtArea }) {\r\n\r\n\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    setChosenEmoji(emojiObject);\r\n\r\n  };\r\n\r\n  console.log(chosenEmoji)\r\n\r\n\r\n  useEffect(() => {\r\n    if (chosenEmoji) {\r\n      let tempTxt = txtArea;\r\n\r\n      tempTxt = tempTxt + chosenEmoji.emoji;\r\n\r\n      setTxtArea(tempTxt)\r\n    }\r\n  }, [chosenEmoji]);\r\n\r\n\r\n  return (\r\n    <div className=\"EmojiPicker\">\r\n\r\n      <Picker onEmojiClick={onEmojiClick} />\r\n    </div >\r\n  );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/general/EmojiPicker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "EmojiPicker",
    "memberof": "src/component/general/EmojiPicker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/EmojiPicker.js~EmojiPicker",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/EmojiPicker.js",
    "importStyle": "EmojiPicker",
    "description": "This component is an emoji Picker used to send emoji in chat",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "txtArea",
        "description": "string containing your message"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setTxtArea",
        "description": "txtArea setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/component/general/Fav.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { ToastContainer, toast } from \"react-toastify\"\r\n\r\n\r\n/**\r\n * This component is used to like a painting\r\n * @param {object} user - user object from api\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @param {object} favPaint - paint object to like\r\n * @emits - users/updateFavoritePainting : like/unlike painting\r\n\r\n */\r\n\r\n\r\nexport default function Fav({ user, isLogged, favPaint }) {\r\n\r\n  const [boolFav, setBoolFav] = useState(false);\r\n  const [refreshKey, setRefreshKey] = useState(0);\r\n\r\n\r\n  /**\r\n   * test si les peintures sont deja like\r\n   */\r\n  useEffect(() => {\r\n    if (isLogged === true)\r\n      user.paintingLiked.length > 0 && user.paintingLiked.map((paintUser) => (\r\n\r\n        favPaint.id === paintUser && (setBoolFav(true))\r\n      ))\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n  function handleClick() {\r\n    console.log(isLogged)\r\n    if (isLogged === true) {\r\n\r\n      //on supprime\r\n      if (boolFav === true) {\r\n        setBoolFav(false)\r\n        FavRemove()\r\n      }\r\n      //sinon on ajoute\r\n      else {\r\n        setBoolFav(true)\r\n        FavAdd()\r\n\r\n      }\r\n\r\n\r\n    }\r\n    else {\r\n      toast.warn(\"Connectez vous pour ajouter aux favoris!\", {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * Add paint to likes\r\n   */\r\n  function FavAdd() {\r\n\r\n\r\n    //add a favorite painting\r\n    axios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: favPaint.id, operation: \"add\" },\r\n      { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\r\n    )\r\n      .then((response) => {\r\n\r\n\r\n        toast.success(\"Ajoutée aux favoris!\", {\r\n          position: \"top-right\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n      });\r\n  }\r\n  function FavRemove() {\r\n\r\n    //delete a favorite painting\r\n    axios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: favPaint.id, operation: \"remove\" },\r\n      { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\r\n    )\r\n      .then((response) => {\r\n\r\n        toast.success(\"Supprimée des favoris!\", {\r\n          position: \"top-right\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n\r\n      });\r\n\r\n  }\r\n\r\n  return (\r\n\r\n\r\n    <div className=\"Fav\">\r\n\r\n      <button className={boolFav ? \"favo yes\" : \"favo not\"} type=\"button\" onClick={handleClick}></button>\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function FavAdd(user, paintId) {\r\n\r\n\r\n  //add a favorite painting\r\n  axios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: paintId, operation: \"add\" },\r\n    { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\r\n  )\r\n    .then((response) => {\r\n\r\n\r\n      console.log(response.data + \" add\")\r\n\r\n    });\r\n}\r\nexport function FavRemove(user, paintId) {\r\n\r\n  //delete a favorite painting\r\n  axios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: paintId, operation: \"remove\" },\r\n    { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\r\n  )\r\n    .then((response) => {\r\n\r\n\r\n      console.log(response.data + \" remove\")\r\n\r\n    });\r\n\r\n}\r\n\r\nexport function TestFav(user, paintId, index, paintings) {\r\n\r\n\r\n\r\n  if (user) {\r\n\r\n\r\n    //Inversion bool pour la classe du boutton\r\n    if (paintings[index].bool === false) {\r\n      paintings[index].bool = true;\r\n      FavAdd(user, paintId)\r\n    }\r\n\r\n    else {\r\n      paintings[index].bool = false;\r\n      FavRemove(user, paintId);\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport function getFav(user, paintings) {\r\n\r\n\r\n  paintings.length > 0 && paintings.map((paint, index) => (\r\n    user.paintingLiked.length > 0 && user.paintingLiked.map((paintUser) => (\r\n\r\n      paint.id === paintUser && (paintings[index].bool = true)\r\n    ))\r\n  ))\r\n\r\n}\r\nexport function getFavM(user, paintings) {\r\n\r\n\r\n  paintings.length > 0 && paintings.map((paint, index) => (\r\n    user.paintingLiked.length > 0 && user.paintingLiked.map((paintUser) => (\r\n      paint.painting.id === paintUser && (paintings[index].bool = true)\r\n    ))\r\n  ))\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/general/Fav.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "Fav",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~Fav",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "Fav",
    "description": "This component is used to like a painting",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "favPaint",
        "description": "paint object to like"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "users/updateFavoritePainting : like/unlike painting"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "FavAdd",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~FavAdd",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "{FavAdd}",
    "description": "",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "FavRemove",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~FavRemove",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "{FavRemove}",
    "description": "",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "TestFav",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~TestFav",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "{TestFav}",
    "description": "",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "getFav",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~getFav",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "{getFav}",
    "description": "",
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "getFavM",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~getFavM",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "{getFavM}",
    "description": "",
    "lineNumber": 220,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "src/component/general/GifPicker.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Tenor from \"@mickyballadelli/react-tenor17\"\r\nimport \"@mickyballadelli/react-tenor17/dist/styles.css\"\r\n\r\n/**\r\n * This component is a Gif Picker used to send gif in chat\r\n\r\n\r\n */\r\n\r\nexport default function GifPicker({props}) {\r\n  \r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"GifPicker\">\r\n            \r\n            <Tenor token=\"AIzaSyAdVAwxf_VBVsUhTJfZLVxSWWOL1hwtOVw\" onSelect={result => console.log(result)} base=\"https://tenor.googleapis.com/v2\" contentFilter=\"off\" defaultResults={true}/>\r\n        </div >\r\n    );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/general/GifPicker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "GifPicker",
    "memberof": "src/component/general/GifPicker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/GifPicker.js~GifPicker",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/GifPicker.js",
    "importStyle": "GifPicker",
    "description": "This component is a Gif Picker used to send gif in chat",
    "lineNumber": 13,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"props\": *}"
        ],
        "defaultRaw": {
          "props": null
        },
        "defaultValue": "{\"props\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "src/component/general/ListModal.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport { toast } from \"react-toastify\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * This component is used to add painting to a list in a grid\r\n * @param {object} user - user object from api\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @param {object} listPaint - paint object to add in list\r\n * @emits - userLists/save : create new list\r\n * @emits - userLists/byUserId : get user lists\r\n */\r\n\r\nexport default function ListModal({ user, isLogged, listPaint }) {\r\n\r\n    const [boolList, setBoolList] = useState(false);\r\n    const [refreshKey, setRefreshKey] = useState(0);\r\n    const [listTitle, setListTitle] = useState([]);\r\n    const [listList, setListList] = useState([]);\r\n\r\n\r\n    //Open List Modal//\r\n    function handleList(paintId) {\r\n\r\n        if (isLogged === true) {\r\n\r\n            if (boolList === true)\r\n                setBoolList(false)\r\n            else\r\n                setBoolList(true)\r\n\r\n\r\n        }\r\n        else {\r\n            toast.warning(\"Connectez vous pour ajouter à une liste!\", {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n    //Get User List//\r\n    useEffect(() => {\r\n\r\n        if (isLogged)\r\n            axios.get(URLDayl + \"userLists/byUserId\", { params: { userId: user.id } }\r\n            )\r\n                .then((response) => {\r\n                  \r\n                    let boolArray = response.data;\r\n                   \r\n                    testList(boolArray);\r\n                   \r\n                });\r\n\r\n    }, [refreshKey]);\r\n\r\n    //Test si la peinture est deja ajouté ou non//\r\n    const testList = (tempListList) => {\r\n\r\n\r\n        //On parcours les lists pour voir si la peinture est presente \r\n        for (let i = 0; i < tempListList.length; i++)\r\n            axios.get(URLDayl + \"userLists/detailByListId\", { params: { listId: tempListList[i].id } }\r\n            )\r\n                .then((response) => {\r\n\r\n                    let tempList = response.data;\r\n                    tempListList[i].boolAdded = false;\r\n                    for (let j = 0; j < tempList.listPaintings.length; j++)\r\n\r\n                        if (tempList.listPaintings[j].id === listPaint.id) {\r\n\r\n                            tempListList[i].boolAdded = true;\r\n                            break;\r\n                        }\r\n\r\n\r\n                });\r\n        console.log(tempListList)\r\n\r\n        setListList(tempListList);\r\n    }\r\n\r\n    //Post new list to the API//\r\n    const handleSubmit = (e) => {\r\n\r\n        if (isLogged) {\r\n            e.preventDefault();\r\n\r\n            console.log(`Form submitted, ${listTitle}`);\r\n            axios.post(URLDayl + \"userLists/save\",\r\n                { listName: listTitle, rank: 0, userId: user.id, id: 0, status: \"ACTIVE\", detail: \"\", imageUrl: \"\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n            )\r\n                .then((response) => {\r\n                    setRefreshKey(oldKey => oldKey + 1);\r\n\r\n                    toast.success(\"Nouvelle liste ajoutée!\", {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n\r\n                });\r\n        }\r\n\r\n        else {\r\n            toast.warn(\"Connectez vous pour ajouter aux favoris!\", {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    //Post or delete new Paint to the list//\r\n    const addRemovePaintToList = (list, paintId, index) => {\r\n\r\n        let tempList = [...listList]\r\n\r\n        if (isLogged) {\r\n\r\n            if (list.boolAdded === false)\r\n                axios.get(URLDayl + \"userLists/addPaintingToList\", { params: { listId: list.id, paintingId: paintId } }\r\n                )\r\n                    .then((response) => {\r\n\r\n                        tempList[index].boolAdded = true\r\n                          tempList[index].countItems = tempList[index].countItems +1;\r\n                        setListList(tempList)\r\n\r\n                        toast.success(\"Oeuvre ajoutée à la liste!\", {\r\n                            position: \"top-right\",\r\n                            autoClose: 3000,\r\n                            hideProgressBar: false,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                        });\r\n\r\n                    });\r\n            else\r\n                axios.get(URLDayl + \"userLists/removePaintingFromList\", { params: { listId: list.id, paintingId: paintId } }\r\n                )\r\n                    .then((response) => {\r\n                        tempList[index].boolAdded = false\r\n                        tempList[index].countItems = tempList[index].countItems -1;\r\n                        setListList(tempList)\r\n\r\n\r\n                        toast.success(\"Oeuvre retirée de la liste!\", {\r\n                            position: \"top-right\",\r\n                            autoClose: 3000,\r\n                            hideProgressBar: false,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                        });\r\n                    });\r\n\r\n\r\n\r\n        }\r\n        else {\r\n            toast.warning(\"Connectez vous pour ajouter à une liste!\", {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"ListModal\">\r\n\r\n            <button id=\"itemListState\" className=\"openModalNow gridItemListAction not\" data-target=\"1777\" onClick={(e) => handleList(listPaint.id)} type=\"button\" value=\"notList\"></button>\r\n\r\n\r\n            {boolList === true &&\r\n                <div>\r\n                    <div className=\"smart-modal-overlay\" style={{ display: \"block\" }}></div>\r\n                    <div id=\"1777\" className=\"smart-modal-content scrollAuto\" style={{ display: \"block\", transform: \"translate(-50%,-50%)\", top: \"50%\", left: \"50%\", minWidth: \"0\" }}>\r\n                        <h3>Ajouter à une liste</h3>\r\n                        <a className=\"smart-modal-close\"><img className=\"img-left\" onClick={() => handleList(listPaint.id)} src={close} alt=\"Trier\" style={{ height: \"20px\" }} /></a>\r\n                        <div className=\"addToList\">\r\n\r\n                            <h4 className=\"mt-b\">Créer une nouvelle liste</h4>\r\n\r\n                            <form action=\"\" onSubmit={handleSubmit}>\r\n                                <div className=\"addListForm\">\r\n                                    <input onChange={(e) => setListTitle(e.target.value)} value={listTitle} type=\"text\" placeholder=\"Nom de la liste\" />\r\n                                    <button type=\"submit\">Créer</button>\r\n                                </div>\r\n                            </form>\r\n\r\n                            <h4 className=\"mt-c mb-a\">Liste existante</h4>\r\n\r\n                            {/* <!-- Liste disponible - début --> */}\r\n                            {listList.length > 0 && listList.map((list, index) => {\r\n                                console.log(list.boolAdded)\r\n                                return (\r\n                                    <div className=\"listDetails\">\r\n                                        <a className=\"\" onClick={() => addRemovePaintToList(list, listPaint.id, index)} /* to={`../../view/ListeAmateurPage.js/${list.id}`} state={list.id} */ style={{ left: \"50px\", top: \"8px\" }}>{list.listName}  ({list.countItems})</a>\r\n                                        {/* <div className=\"listItems\">{list.countItems} oeuvres</div> */}\r\n                                        <button type=\"button\" onClick={() => addRemovePaintToList(list, listPaint.id, index)} className={list.boolAdded === true ? \"addedToThisList\" : \"addToThisList\"}  ></button>\r\n                                    </div>)\r\n                            })}\r\n\r\n                            {/* <!-- Liste disponible - fin -->*/}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/general/ListModal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "ListModal",
    "memberof": "src/component/general/ListModal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/ListModal.js~ListModal",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/ListModal.js",
    "importStyle": "ListModal",
    "description": "This component is used to add painting to a list in a grid",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "listPaint",
        "description": "paint object to add in list"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "userLists/save : create new list"
      },
      {
        "types": [
          "*"
        ],
        "description": "userLists/byUserId : get user lists"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/component/general/ListModal2.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport { toast } from \"react-toastify\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n/**\r\n * This component is used to add your paint to a list\r\n * @param {object} user - user object from api\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @param {object} listPaint - paint object to add in list\r\n * @emits - userLists/save : create new list\r\n * @emits - userLists/byUserId : get user lists\r\n */\r\n\r\n\r\nexport default function ListModal2({ user, isLogged, listPaint }) {\r\n\r\n    const [boolList, setBoolList] = useState(false);\r\n    const [refreshKey, setRefreshKey] = useState(0);\r\n    const [listTitle, setListTitle] = useState([]);\r\n    const [listList, setListList] = useState([]);\r\n\r\n   //Open List Modal//\r\n   function handleList(paintId) {\r\n\r\n    if (isLogged === true) {\r\n\r\n        if (boolList === true)\r\n            setBoolList(false)\r\n        else\r\n            setBoolList(true)\r\n\r\n\r\n    }\r\n    else {\r\n        toast.warning(\"Connectez vous pour ajouter à une liste!\", {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n\r\n}\r\n//Get User List//\r\nuseEffect(() => {\r\n\r\n    if (isLogged)\r\n        axios.get(URLDayl + \"userLists/byUserId\", { params: { userId: user.id } }\r\n        )\r\n            .then((response) => {\r\n              \r\n                let boolArray = response.data;\r\n               \r\n                testList(boolArray);\r\n               \r\n            });\r\n\r\n}, [refreshKey]);\r\n\r\n//Test si la peinture est deja ajouté ou non//\r\nconst testList = (tempListList) => {\r\n\r\n\r\n    //On parcours les lists pour voir si la peinture est presente \r\n    for (let i = 0; i < tempListList.length; i++)\r\n        axios.get(URLDayl + \"userLists/detailByListId\", { params: { listId: tempListList[i].id } }\r\n        )\r\n            .then((response) => {\r\n\r\n                let tempList = response.data;\r\n                tempListList[i].boolAdded = false;\r\n                for (let j = 0; j < tempList.listPaintings.length; j++)\r\n\r\n                    if (tempList.listPaintings[j].id === listPaint.id) {\r\n\r\n                        tempListList[i].boolAdded = true;\r\n                        break;\r\n                    }\r\n\r\n\r\n            });\r\n\r\n    setListList(tempListList);\r\n}\r\n\r\n//Post new list to the API//\r\nconst handleSubmit = (e) => {\r\n\r\n    if (isLogged) {\r\n        e.preventDefault();\r\n\r\n        console.log(`Form submitted, ${listTitle}`);\r\n        axios.post(URLDayl + \"userLists/save\",\r\n            { listName: listTitle, rank: 0, userId: user.id, id: 0, status: \"ACTIVE\", detail: \"\", imageUrl: \"\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n        )\r\n            .then((response) => {\r\n                setRefreshKey(oldKey => oldKey + 1);\r\n\r\n                toast.success(\"Nouvelle liste ajoutée!\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n            });\r\n    }\r\n\r\n    else {\r\n        toast.warn(\"Connectez vous pour ajouter aux favoris!\", {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n//Post or delete new Paint to the list//\r\nconst addRemovePaintToList = (list, paintId, index) => {\r\n\r\n    let tempList = [...listList]\r\n\r\n    if (isLogged) {\r\n\r\n        if (list.boolAdded === false)\r\n            axios.get(URLDayl + \"userLists/addPaintingToList\", { params: { listId: list.id, paintingId: paintId } }\r\n            )\r\n                .then((response) => {\r\n\r\n                    tempList[index].boolAdded = true\r\n                      tempList[index].countItems = tempList[index].countItems +1;\r\n                    setListList(tempList)\r\n\r\n                    toast.success(\"Oeuvre ajoutée à la liste!\", {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n\r\n                });\r\n        else\r\n            axios.get(URLDayl + \"userLists/removePaintingFromList\", { params: { listId: list.id, paintingId: paintId } }\r\n            )\r\n                .then((response) => {\r\n                    tempList[index].boolAdded = false\r\n                    tempList[index].countItems = tempList[index].countItems -1;\r\n                    setListList(tempList)\r\n\r\n\r\n                    toast.success(\"Oeuvre retirée de la liste!\", {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                });\r\n\r\n\r\n\r\n    }\r\n    else {\r\n        toast.warning(\"Connectez vous pour ajouter à une liste!\", {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n\r\n}\r\n    return (\r\n        <div className=\"ListModal2\">\r\n\r\n\r\n            <button className=\"matchAddList\" onClick={() => handleList()} value=\"Lister\" >Lister</button>\r\n\r\n            {boolList === true &&\r\n                <div>\r\n                    <div className=\"smart-modal-overlay\" style={{ display: \"block\" }}></div>\r\n                    <div id=\"1777\" className=\"smart-modal-content scrollAuto\" style={{ display: \"block\", transform: \"translate(-50%,-50%)\", top: \"50%\", left: \"50%\", minWidth: \"0\" }}>\r\n                        <h3>Ajouter à une liste</h3>\r\n                        <a className=\"smart-modal-close\"><img className=\"img-left\" onClick={() => handleList(listPaint.id)} src={close} alt=\"Trier\" style={{ height: \"20px\" }} /></a>\r\n                        <div className=\"addToList\">\r\n\r\n                            <h4 className=\"mt-b\">Créer une nouvelle liste</h4>\r\n\r\n                            <form action=\"\" onSubmit={handleSubmit}>\r\n                                <div className=\"addListForm\">\r\n                                    <input onChange={(e) => setListTitle(e.target.value)} value={listTitle} type=\"text\" placeholder=\"Nom de la liste\" />\r\n                                    <button type=\"submit\">Créer</button>\r\n                                </div>\r\n                            </form>\r\n\r\n                            <h4 className=\"mt-c mb-a\">Liste existante</h4>\r\n\r\n                            {/* <!-- Liste disponible - début --> */}\r\n                            {listList.length > 0 && listList.map((list, index) => (\r\n                                <div className=\"listDetails\" style={{ display: \"flex\" }}>\r\n                                                               <a className=\"\" onClick={() => addRemovePaintToList(list, listPaint.id, index)} /* to={`../../view/ListeAmateurPage.js/${list.id}`} state={list.id} */ style={{ left: \"50px\", top: \"8px\" }}>{list.listName}  ({list.countItems})</a>\r\n                                        {/* <div className=\"listItems\">{list.countItems} oeuvres</div> */}\r\n                                    <button type=\"button\" onClick={() => addRemovePaintToList(list, listPaint.id, index)} className={list.boolAdded === true ? \"addedToThisList\" : \"addToThisList\"}  ></button>\r\n                                </div>))}\r\n\r\n                            {/* <!-- Liste disponible - fin -->*/}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {/* <!-- Modal \"ajouter à une liste\" - fin --> */}\r\n        </div>\r\n    );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/general/ListModal2.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "ListModal2",
    "memberof": "src/component/general/ListModal2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/ListModal2.js~ListModal2",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/ListModal2.js",
    "importStyle": "ListModal2",
    "description": "This component is used to add your paint to a list",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "listPaint",
        "description": "paint object to add in list"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "userLists/save : create new list"
      },
      {
        "types": [
          "*"
        ],
        "description": "userLists/byUserId : get user lists"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "src/component/general/ModalArtist.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"./constantes\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\n\r\n\r\n\r\nexport default function ModalArtist({ user, isLogged, listPaint }) {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/general/ModalArtist.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "ModalArtist",
    "memberof": "src/component/general/ModalArtist.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/ModalArtist.js~ModalArtist",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/ModalArtist.js",
    "importStyle": "ModalArtist",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "src/component/general/SaveMatch.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\n\r\n/**\r\n * This component is used to save a matching\r\n * @todo en attente de changement api\r\n * @param {object} user - user object from api\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @param {object} matchPaint - paint object to add in match\r\n * @emits - matching/save : save a matching\r\n */\r\n\r\n\r\nexport default function SaveMatch({ user, isLogged, matchPaint }) {\r\n\r\n    const [refreshKey, setRefreshKey] = useState(0);\r\n    const [boolMatch, setBoolMatch] = useState(false);\r\n\r\n\r\n    //Test Match saved//\r\n    useEffect(() => {\r\n\r\n        if (user && user.matchLiked) {\r\n            for (let i = 0; i < user.matchLiked.length; i++) {\r\n\r\n                if (user.matchLiked[i] === matchPaint.id) {\r\n                    setBoolMatch(true);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }, [matchPaint]);\r\n\r\n\r\n    function handleClick(e) {\r\n\r\n        e.preventDefault()\r\n\r\n        if (user) {\r\n\r\n            if (boolMatch === false)\r\n                axios.post(URLDayl + \"matching/save\",\r\n                    { userId: user.id, paintingId: matchPaint.id, style: \"CONTENT_AND_STYLE\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n                )\r\n                    .then((response) => {\r\n                        setRefreshKey(oldKey => oldKey + 1);\r\n                        setBoolMatch(true)\r\n                    });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"SaveMatch\">\r\n\r\n            <button className=\"matchSave\" onClick={handleClick} type=\"button\">Enregistrer</button>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/general/SaveMatch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "SaveMatch",
    "memberof": "src/component/general/SaveMatch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/SaveMatch.js~SaveMatch",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/SaveMatch.js",
    "importStyle": "SaveMatch",
    "description": "This component is used to save a matching",
    "lineNumber": 17,
    "todo": [
      "en attente de changement api"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "matchPaint",
        "description": "paint object to add in match"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "matching/save : save a matching"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/component/general/SqueletteFoot.js",
    "content": "import React from \"react\";\r\nimport \"../../webapp/css/core.css\";\r\nimport \"../../webapp/css/carousels.css\"\r\nimport \"../../webapp/css/blocks.css\"\r\nimport \"../../webapp/css/account.css\"\r\n\r\n/**\r\n * website footer\r\n * @param {object} user - user object from api\r\n */\r\n\r\nexport default function SqueletteFoot({ user }) {\r\n  return (\r\n    <div className=\"SqueletteFoot\">\r\n\r\n      <footer></footer>\r\n      {/* <!-- FOOTER - fin -->\r\n\r\n            <!-- APPELS JAVASCRIPT - début --> */}\r\n      <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\r\n      <script src=\"js/isLoading.min.js\"></script>\r\n      <script src=\"js/owlCarousel.min.js\"></script>\r\n      <script src=\"js/colorPicker.min.js\"></script>\r\n      <script src=\"js/modalBox.min.js\"></script>\r\n      <script src=\"js/serializeIt.min.js\"></script>\r\n      <script src=\"js/checkLister.min.js\"></script>\r\n      <script src=\"js/accordion.min.js\"></script>\r\n      <script src=\"js/sliderBox.min.js\"></script>\r\n      <script src=\"js/zoomBox.min.js\"></script>\r\n      <script src=\"js/niceFileUpload.min.js\"></script>\r\n      <script src=\"js/gridActions.min.js\"></script>\r\n      {/* <!-- APPELS JAVASCRIPT - fin --> */}\r\n    </div>\r\n  );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/general/SqueletteFoot.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "SqueletteFoot",
    "memberof": "src/component/general/SqueletteFoot.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/SqueletteFoot.js~SqueletteFoot",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/SqueletteFoot.js",
    "importStyle": "SqueletteFoot",
    "description": "website footer",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "src/component/general/SqueletteHead.js",
    "content": "import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { URLDayl } from \"../../services/constantes\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../webapp/css/core.css\";\r\nimport \"../../webapp/css/carousels.css\"\r\nimport \"../../webapp/css/blocks.css\"\r\nimport \"../../webapp/css/account.css\"\r\nimport \"../../webapp/css/atelier.css\"\r\nimport \"../../webapp/css/stats.css\"\r\nimport \"../../webapp/css/social.css\"\r\nimport \"../../webapp/css/startpage.css\"\r\nimport Logo from \"../../webapp/img/logos/logo_1.svg\"\r\nimport ModProfil from \"../../webapp/img/icons/ico_mod_profile_1.svg\"\r\nimport ModLikes from \"../../webapp/img/icons/ico_mod_likes_1.svg\"\r\nimport ModLists from \"../../webapp/img/icons/ico_mod_lists_1.svg\"\r\nimport ModLogout from \"../../webapp/img/icons/ico_mod_logout_1.svg\"\r\nimport ModMatching from \"../../webapp/img/icons/ico_mod_matching_1.svg\"\r\nimport SignInPage from \"../../view/SignInPage\";\r\nimport defaultLogo from \"../../webapp/img/icons/ico_mod_profile_1.svg\"\r\nimport explorer from \"../../webapp/img/icons/ico_explorer_2.svg\"\r\nimport { useState } from \"react\";\r\nimport ChatMenu from \"../Chat/ChatMenu\";\r\n\r\n\r\n/**\r\n * website header\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @emits - users/${user.id} : update user informations\r\n \r\n */\r\n\r\nexport default function SqueletteHead({user, setUser,isLogged}) {\r\n  const [LogoLogged, setLogoLogged] = useState(\"\");\r\n  const [boolChat, setBoolChat] = useState(false);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n if(isLogged === true)\r\n      axios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n        ).then((response) => {\r\n          setUser(response.data)\r\n        });\r\n     \r\n    }, []);\r\n\r\n  \r\n\r\n\r\n\r\n  // var sheet = document.styleSheets[0];\r\n  // sheet.insertRule(\":root{--color-2:#4444FF}\");\r\n\r\n  // if(isLogged === true){\r\n\r\n  //   setLogoLogged(`url(${URLDayl}images/contentUser/${user.id}/${user.iconImage})`)\r\n  // }\r\n\r\n  function handleChat() {\r\n\r\n    if (boolChat === true) {\r\n      setBoolChat(false);\r\n    }\r\n    else {\r\n      setBoolChat(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"SqueletteHead\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>DAYL - ARTISTE</title>\r\n        <meta name=\"description\" content=\"Description de la page\" />\r\n        <link rel=\"canonical\" href=\"/URLDayl du lien canonique de cette page\" />\r\n        <link rel=\"preconnect\" href=\"/https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" href=\"/https://fonts.gstatic.com\" />\r\n        <link\r\n          href=\"/https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&display=swap\"\r\n          rel=\"stylesheet\" \r\n        />\r\n      </head>\r\n\r\n      {/* HEADER - début */}\r\n      <header>\r\n        {/* ******************************************************\r\n          ***********************************************************\r\n\r\n          MENU BARRE HORIZONTALE HAUT DE PAGE - début\r\n\r\n          ***********************************************************\r\n\t\t\t    ****************************************************  */}\r\n        <nav>\r\n          {/* <!-- BARRE ARRIÈRE-PLAN - début --> */}\r\n          <div className=\"topBarBg\"></div>\r\n          {/* <!-- BARRE ARRIÈRE-PLAN - fin --> */}\r\n          {/* <!-- LOGO DAYL - début --> */}\r\n\r\n          <Link to={{ pathname: \"/\" }}>\r\n            <a className=\"topBarLogo\" href=\"index.html\" >\r\n              <img src={Logo} alt=\"Retour à l'accueil\" />\r\n            </a>\r\n          </Link>\r\n          {/* <Link className=\"topMsgIcon\" rel=\"nofollow\" to={{ pathname: \"/StartingPage\" }} style={{right: \"50%\", backgroundImage: `url(${explorer})`,transform: \"translate(50%, 0)\"}}data-tooltip-2=\"Explorer\"></Link> */}\r\n          {/* <!-- LOGO DAYL - fin --> */}\r\n          {/* <!-- ICONE RESEAU - début --> */}\r\n\r\n          <a className=\"topNetworkIcon\" rel=\"nofollow\" data-tooltip-2=\"Réseau (TO DO)\">\r\n            <span className=\"topPill\">4</span>\r\n          </a>\r\n          {/* <!-- ICONE RESEAU - fin --> */}\r\n\r\n\r\n          {/* <!-- ICONE MESSAGES - début --> */}\r\n          <a className=\"topMsgIcon\" rel=\"nofollow\" onClick={handleChat} data-tooltip-2=\"Messagerie\">\r\n            <span className=\"topPill\">4</span>\r\n          </a>\r\n          {/* <!-- ICONE MESSAGES - fin --> */}\r\n\r\n\r\n          {/* <!-- ICONE NOTIFICATIONS - début --> */}\r\n          <a className=\"topNotifIcon\" rel=\"nofollow\" data-tooltip-2=\"Notifications (TO DO)\">\r\n            <span className=\"topPill\">4</span>\r\n          </a>\r\n          {/* <!-- ICONE NOTIFICATIONS - fin --> */}\r\n\r\n          {/* <!-- ///////////////////////////////////\r\n            COMPTE MEMBRE (déconnecté) - début\r\n            //////////////////////////////////// -->\r\n            <!-- ICONE COMPTE MEMBRE - début --> */}\r\n\r\n          {isLogged === true ?\r\n            <Link to={{ pathname: `../../view/CompteAmateurPage.js` }} className={!user.iconImage ? \"topBarAcc topAccountIcon\" : \"topBarUser\"}\r\n              rel=\"nofollow\" /* state={user} */ >\r\n              <span style={/* user.iconImage !== \"\" &&  */{ backgroundImage: `url(${URLDayl}images/contentUser/${user.id}/${user.iconImage})` } } data-tooltip-2=\"Profil\"></span>\r\n            </Link>\r\n            : <Link to={{ pathname: \"../../view/LogIn.js\" }} className={isLogged === false ? \"topBarAcc topAccountIcon\" : \"topBarUser\"}\r\n              data-target=\"topLogin\" rel=\"nofollow\" data-tooltip-2=\"Connexion/Inscription\" >\r\n              <span style={{ backgroundImage: isLogged === true && `url(${URLDayl}images/contentUser/${user.id}/${user.iconImage})` }}></span>\r\n            </Link>}\r\n\r\n          {/* <!-- ICONE AVATAR MEMBRE - fin -->\r\n                  <!-- MODAL RACCOURCIS COMPTE MEMBRE - début --> */}\r\n          {/* <div id=\"topUserAccount\" className=\"smart-modal-content scrollAuto\">\r\n            <h3>Mon compte</h3>\r\n            {user &&\r\n              <a className=\"smart-modal-close\" style={{ background: URLDayl + `images/contentUser/${user.id}/${user.iconImage}` }}>\r\n                <img\r\n                  className=\"img-left\"\r\n                  src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`}\r\n                  alt=\"Trier\"\r\n                />\r\n              </a>}\r\n          </div> */}\r\n          {/* <!-- MODAL RACCOURCIS COMPTE MEMBRE - fin -->\r\n                  <!-- ///////////////////////////////////\r\n                  COMPTE MEMBRE (connecté) - fin\r\n                //////////////////////////////////// --> */}\r\n        </nav>\r\n        {/* <!-- ******************************************************\r\n                ***********************************************************\r\n\r\n                MENU BARRE HORIZONTALE HAUT DE PAGE - fin\r\n\r\n                ***********************************************************\r\n            ******************************************************* -->\r\n\r\n<!-- ******************************************************\r\n                ***********************************************************\r\n\r\n                MENU GLISSANT BORD GAUCHE - début\r\n\r\n                ***********************************************************\r\n\t\t\t          ******************************************************* --> */}\r\n        <nav className=\"menu\">\r\n          <ul className=\"title-menu\">\r\n            <li>\r\n              <a className=\"btmenu\" href=\"javascript:void(0);\"></a>\r\n              <div className=\"wrap-list principal\">\r\n                <ul className=\"list\">\r\n                  <li className=\"titleSubmenu\">\r\n                    <Link  to={{ pathname: \"/\" }}>\r\n                      <img\r\n                        className=\"logo\"\r\n                        src={Logo}\r\n                        alt=\"AI Artworks - Accueil\"\r\n                      />\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"titleSubmenu\">\r\n                    <Link  className=\"acc\" title=\"aiartworks\" to={{ pathname: \"/StartingPage\" }}>\r\n                      <span>Présentation</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"titleSubmenu\">\r\n                    <a  className=\"thm\">\r\n                      <span>Thèmes</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"titleSubmenu\">\r\n                    <a  className=\"art\">\r\n                      <span>Artistes</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"titleSubmenu\">\r\n                    <a  className=\"mvm\">\r\n                      <span>Mouvements Artistiques</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"titleSubmenu\">\r\n                    <a  className=\"abt\">\r\n                      <span>A propos</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"titleSubmenu\">\r\n                    <a  className=\"par\">\r\n                      <span>Partenaires</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"titleSubmenu\">\r\n                    <a  className=\"cpt\">\r\n                      <span>Mon compte</span>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        {/* <!-- ******************************************************\r\n                ***********************************************************\r\n\r\n                MENU GLISSANT BORD GAUCHE - fin\r\n\r\n                ***********************************************************\r\n\t\t\t          ******************************************************* --> */}\r\n      </header>\r\n      {/* <!-- HEADER - fin --> */}\r\n\r\n      {boolChat === true && <ChatMenu boolChat={boolChat} setBoolChat={setBoolChat}/>}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/general/SqueletteHead.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "SqueletteHead",
    "memberof": "src/component/general/SqueletteHead.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/SqueletteHead.js~SqueletteHead",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/SqueletteHead.js",
    "importStyle": "SqueletteHead",
    "description": "website header",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "users/${user.id} : update user informations"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "src/component/HomePage/MatchingImage.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Fav from \"../general/Fav\";\r\nimport ListModal from \"../general/ListModal\";\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\n\r\n/**\r\n * This component is used to launch the matcing algorithm with an imported paint\r\n * @param {number} paintId - id of the paint\r\n * @emits - images/submitImageForMatching?fileName=${data.itemName}&artist=${data.artistName} : submit an image for matching\r\n\r\n */\r\n\r\nexport default function MatchingImage({ user, paintId}) {\r\n\r\n\t// const [result, setResult] = useState([]);\r\n\t// const [styleChoice, setStyleChoice] = useState(\"1\");\r\n\t// const [listArtist, setListArtist] = useState([]);\r\n\t// const [boolModalArtist, setBoolModalArtist] = useState(false);\r\n\t// const [boolAllArtist, setBoolAllArtist] = useState(true);\r\n\t// const [orderDate, setOrderDate] = useState(0);\r\n\t// const [tempList, setTempList] = useState([]);\r\n\t// const [image, setImage] = useState(null)\r\n\t// const [fileName, setFileName] = useState(\"Glissez/déposez votre fichier ici\")\r\n\t// const { register, handleSubmit } = useForm();\r\n\r\n\r\n\t// const location = useLocation();\r\n\t// paintId = location.state;\r\n\r\n    // const navigate = useNavigate();\r\n\r\n\r\n\r\n\r\n\t// function onSubmit(data) {\r\n    //     let tempResult;\r\n\r\n\t// \tvar file = data.file[0];\r\n\t// \tvar formdata = new FormData();\r\n\t// \tformdata.append('image', file);\r\n\t// \tsetImage(URL.createObjectURL(file));\r\n\t// \tif (!data.itemName) {\r\n\t// \t\tdata.itemName = \" \";\r\n\t// \t}\r\n\t// \tif (!data.artistName) {\r\n\t// \t\tdata.artistName = \" \";\r\n\t// \t}\r\n\r\n\t// \tvar xhr = new XMLHttpRequest();\r\n\t// \txhr.open('POST', URLDayl + `images/submitImageForMatching?fileName=${data.itemName}&artist=${data.artistName}`);\r\n\t// \t//xhr.setRequestHeader('Content-Type', 'multipart/form-data');\r\n\t// \txhr.send(formdata);\r\n\r\n\r\n\t// \txhr.onreadystatechange = function () {\r\n\t// \t\tif (xhr.readyState !== 4) return;\r\n\t// \t\t//si probleme on affiche l'erreur\r\n\t// \t\tif (xhr.status !== 200) {\r\n\t// \t\t\tconsole.log(xhr);\r\n\t// \t\t\t//sinon on affiche les resultats\r\n\t// \t\t} else {\r\n\r\n\t// \t\t\tif (styleChoice === \"1\") {\r\n\t// \t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).style).map((el) => { return { ...el, boolVis: true } }));\r\n\t// \t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).style).map((el) => { return { ...el, boolVis: true } }));\r\n    //                 tempResult = Object.values(JSON.parse(xhr.responseText).style).map((el) => { return { ...el, boolVis: true } });\r\n\t// \t\t\t}\r\n\t// \t\t\tif (styleChoice === \"2\") {\r\n\t// \t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).color).map((el) => { return { ...el, boolVis: true } }));\r\n\t// \t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).color).map((el) => { return { ...el, boolVis: true } }));\r\n    //                 tempResult = Object.values(JSON.parse(xhr.responseText).color).map((el) => { return { ...el, boolVis: true } });\r\n\t// \t\t\t}\r\n\t// \t\t\tif (styleChoice === \"3\") {\r\n\t// \t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).content).map((el) => { return { ...el, boolVis: true } }));\r\n\t// \t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).content).map((el) => { return { ...el, boolVis: true } }));\r\n    //                 tempResult = Object.values(JSON.parse(xhr.responseText).content).map((el) => { return { ...el, boolVis: true } });\r\n\t// \t\t\t}\r\n\t// \t\t\tif (styleChoice === \"4\") {\r\n\t// \t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).color_content).map((el) => { return { ...el, boolVis: true } }));\r\n\t// \t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).color_content).map((el) => { return { ...el, boolVis: true } }));\r\n    //                 tempResult = Object.values(JSON.parse(xhr.responseText).color_content).map((el) => { return { ...el, boolVis: true } });\r\n\t// \t\t\t}\r\n\t// \t\t\tif (styleChoice === \"5\") {\r\n\t// \t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).color_style).map((el) => { return { ...el, boolVis: true } }));\r\n\t// \t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).color_style).map((el) => { return { ...el, boolVis: true } }));\r\n    //                 tempResult = Object.values(JSON.parse(xhr.responseText).color_style).map((el) => { return { ...el, boolVis: true } });\r\n\t// \t\t\t}\r\n\t// \t\t\tif (styleChoice === \"6\") {\r\n\t// \t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).content_style).map((el) => { return { ...el, boolVis: true } }));\r\n\t// \t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).content_style).map((el) => { return { ...el, boolVis: true } }));\r\n    //                 tempResult = Object.values(JSON.parse(xhr.responseText).content_style).map((el) => { return { ...el, boolVis: true } });\r\n\t// \t\t\t}\r\n\r\n\t// \t\t\tlet tempListArtist = Object.values(JSON.parse(xhr.responseText).style).filter((v, i) => {\r\n\t// \t\t\t\treturn Object.values(JSON.parse(xhr.responseText).style).map((res) => res.artistId).indexOf(v.artistId) == i\r\n\t// \t\t\t})\r\n\t// \t\t\ttempListArtist = tempListArtist.map((el) => { return { ...el, boolList: true } });\r\n\r\n\t// \t\t\tconsole.log(tempListArtist)\r\n\r\n\t// \t\t\tsetListArtist([...tempListArtist])\r\n\r\n    //             navigate(\"../../view/MatchingImage.js\", {state: { result: tempResult, image : URL.createObjectURL(file)}})\r\n\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\r\n\r\n\t\r\n\r\n\t// return (\r\n\t// \t<div className=\"MatchingImage\">\r\n\r\n\t// \t\t{/* <!-- ******************************************************\r\n\t// \t\tSECTION MATCHING IMAGE UPLOAD - début\r\n\t// \t\t****************************************************** --> */}\r\n\t// \t\t<section className=\"center-col\">\r\n\t// \t\t\t<div className=\"cont-f-w\" >\r\n\r\n\t// \t\t\t\t{/* <!-- formulaire de matching - début --> */}\r\n\t// \t\t\t\t<div className=\"matchingImgSearch\" style={{height: \"420px\", marginTop: \"0\"}}>\r\n\r\n\t// \t\t\t\t\t<h1>Choisissez une image, une peinture sur votre ordinateur</h1>\r\n\t// \t\t\t\t\t<p className=\"title\">Une de vos oeuvres ? Une peinture en photo ?</p>\r\n\r\n\t// \t\t\t\t\t<form id=\"ImgMatchingSearch\" onSubmit={handleSubmit(onSubmit)}>\r\n\t// \t\t\t\t\t\t<input type=\"text\" id=\"artistName\" {...register(\"artistName\")} /* value={form?.artistName} onChange={e => setForm({ ...form, artistName: e.target.value })} */ placeholder=\"Un nom d’artiste? (facultatif)\" />\r\n\t// \t\t\t\t\t\t<input type=\"text\" id=\"artistItemName\" {...register(\"itemName\")}/* value={form?.itemName} onChange={e => setForm({ ...form, itemName: e.target.value })} */ placeholder=\"Un nom d’oeuvre? (facultatif)\" />\r\n\r\n\t// \t\t\t\t\t\t<div style={{ marginRight: \"15px\", bottom: \"10px\" }}>\r\n\t// \t\t\t\t\t\t\t<select id=\"type\" name=\"type\" className=\"searchFilter\" value={styleChoice} onChange={e => setStyleChoice(e.target.value)} style={{ alignItems: \"center\" }}>\r\n\t// \t\t\t\t\t\t\t\t<option value=\"1\">Style</option>\r\n\t// \t\t\t\t\t\t\t\t<option value=\"2\">Couleur</option>\r\n\t// \t\t\t\t\t\t\t\t<option value=\"3\">Forme</option>\r\n\t// \t\t\t\t\t\t\t\t<option value=\"4\">Couleur et Forme</option>\r\n\t// \t\t\t\t\t\t\t\t<option value=\"5\">Couleur et Style</option>\r\n\t// \t\t\t\t\t\t\t\t<option value=\"6\">Forme et Style</option>\r\n\t// \t\t\t\t\t\t\t</select>\r\n\t// \t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t<div className=\"fileDropArea\">\r\n\t// \t\t\t\t\t\t\t<span className=\"fakeBtn\"></span>\r\n\t// \t\t\t\t\t\t\t<span className=\"fileMsg\" >{fileName}</span>\r\n\t// \t\t\t\t\t\t\t<input className=\"fileInput\" type=\"file\" id=\"formImage\" {...register(\"file\")} onChange={e => setFileName(e.target.files[0].name)} multiple />\r\n\t// \t\t\t\t\t\t</div>\r\n\r\n\t// \t\t\t\t\t\t<input type=\"submit\" className=\"matchSub\" value=\"Match\" />\r\n\t// \t\t\t\t\t</form>\r\n\t// \t\t\t\t\t{/* {image && <div style={{ padding: \"10px\", borderRadius: \"8px\", backgroundColor: \"white\", margin: \"20px\" }}>\r\n\t// \t\t\t\t\t\t<img className=\"show\" src={image} style={{ maxWidth: \"650px\", height: \"auto\", maxHeight: \"300px\", borderRadius: \"8px\", width: \"auto\" }} />\r\n\t// \t\t\t\t\t</div>} */}\r\n\r\n\t// \t\t\t\t</div>\r\n\t// \t\t\t\t{/* <!-- formulaire de matching - fin --> */}\r\n\r\n\r\n\t// \t\t\t</div>\r\n\r\n\r\n\t\t\t\t\r\n\r\n\t// \t\t</section>\r\n\t// \t</div>\r\n\r\n\t// );\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/HomePage/MatchingImage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "MatchingImage",
    "memberof": "src/component/HomePage/MatchingImage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/HomePage/MatchingImage.js~MatchingImage",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/HomePage/MatchingImage.js",
    "importStyle": "MatchingImage",
    "description": "This component is used to launch the matcing algorithm with an imported paint",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "id of the paint"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "images/submitImageForMatching?fileName=${data.itemName}&artist=${data.artistName} : submit an image for matching"
      }
    ],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/component/HomePage/MostMatched.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { Link, useLocation, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport Carousel from \"react-multi-carousel\";\r\n\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Fav from \"../general/Fav\";\r\nimport { SliderPicker } from \"react-color\";\r\n\r\n/**\r\n * This component display the most matched painting of a month\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @emits - users/${user.id} : update user informations\r\n */\r\n\r\nexport default function MostMatched({ user, setUser, isLogged }) {\r\n//   //Declaration des variables globales\r\n//   const [error, setError] = useState(null);\r\n//   const [isLoaded, setIsLoaded] = useState(false);\r\n//   const [matchedPainting, setMatchedPainting] = useState([]);\r\n//   const [refreshKey, setRefreshKey] = useState(0);\r\n//   const [width, setWidth] = useState(window.innerWidth);\r\n//   const [coefWidth, setCoefWidth] = useState();\r\n//   const [nMonth, setNMonth] = useState(\"1\");\r\n//   const [date, setDate] = useState();\r\n\r\n\r\n\r\n//   // document.documentElement.style.setProperty('--color-2', \"#FFF\");\r\n//   // document.documentElement.style.setProperty('--color-6', \"#000000\");\r\n//   // document.documentElement.style.setProperty('--color-5', \"#1a1a1a\");\r\n//   // document.documentElement.style.setProperty('--color-11b', \"#0c0c0c\");\r\n//   // //parametres carousel//\r\n//   const responsive = {\r\n\r\n//     superLargeDesktop: {\r\n//       // the naming can be any, depends on you.\r\n//       breakpoint: { max: 4000, min: 0 },\r\n//       items: 5,\r\n//     },\r\n//     // desktop: {\r\n//     //   breakpoint: { max: 3000, min: 1024 },\r\n//     //   items: 5,\r\n//     // },\r\n//     // tablet: {\r\n//     //   breakpoint: { max: 1024, min: 464 },\r\n//     //   items: 3,\r\n//     // },\r\n//     // mobile: {\r\n//     //   breakpoint: { max: 464, min: 0 },\r\n//     //   items: 2,\r\n//     // }\r\n//   };\r\n\r\n//   // Call Jquery script\r\n//   useEffect(() => {\r\n//     const loadFile = async () => {\r\n//       const { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n\r\n//       modal();\r\n//     };\r\n//     loadFile();\r\n//   }, []);\r\n\r\n\r\n\r\n//   //update user\r\n//   useEffect(() => {\r\n//     if (user)\r\n//       axios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n//       ).then((response) => { setUser(response.data) });\r\n\r\n\r\n//   }, [refreshKey]);\r\n\r\n//   //Get Most matched this month//\r\n//   useEffect(() => {\r\n//     testDate();\r\n//     axios\r\n//       .get(URLDayl + `matchingSearch/moreMatchedPaintingForLast30Days?numberOfMonthsBefore=${nMonth}`\r\n//       )\r\n//       .then((response) => {\r\n//         setMatchedPainting(response.data);\r\n// console.log(response)\r\n//         const boolArray = response.data.map((el) => { return { ...el, bool: false } });\r\n\r\n//         setMatchedPainting(boolArray);\r\n//         getItemWidth();\r\n\r\n\r\n//       });\r\n\r\n\r\n\r\n//   }, [nMonth]);\r\n\r\n//   function testDate() {\r\n//     if (nMonth === \"1\") {\r\n//       setDate(\"Ce mois-ci\")\r\n//     }\r\n//     if (nMonth === \"2\") {\r\n//       setDate(\"Le mois dernier\");\r\n//     }\r\n//     if (nMonth === \"3\") {\r\n//       setDate(\"Il y a 2 mois\")\r\n//     }\r\n//     if (nMonth === \"4\") {\r\n//       setDate(\"Il y a 4 mois\")\r\n//     }\r\n\r\n//   }\r\n\r\n//   //get la largeur d'un item carrousel\r\n//   function getItemWidth() {\r\n//     let el = document.querySelector('.react-multi-carousel-item.itemOne')\r\n//     //on convertis la valeur en int\r\n\r\n//     if (el) {\r\n//       let element = parseInt(el.style.width.slice(0, 3))\r\n//       let coef = 2 * (270 / element);\r\n//       setCoefWidth(coef)\r\n//     }\r\n\r\n//   }\r\n//   //get la largeur de la fenetre\r\n//   const handleResize = () => {\r\n//     setWidth(window.innerWidth)\r\n//   }\r\n//   useEffect(() => {\r\n//     window.addEventListener(\"resize\", handleResize, false);\r\n//   }, []);\r\n\r\n\r\n//   //update la largeur d'un item quand la largeur de la fenetre change\r\n//   useEffect(() => {\r\n\r\n//     getItemWidth();\r\n//   }, [width]);\r\n\r\n\r\n//   return (\r\n//     <div className=\"MostMatched\">\r\n     \r\n\r\n//       {/* <!-- ******************************************************\r\n// \t\t\tSECTION SECTION LES PLUS MATCHÉES - début\r\n// \t\t\t****************************************************** --> */}\r\n//       <section className=\"center-col cont-sty-1\">\r\n//         {/* <!-- informations et actions - début --> */}\r\n//         <div className=\"cont-l-w center-row\">\r\n//           <div className=\"cont-fl-l\">\r\n//             <h2>Les plus matchées</h2>\r\n//             <h3>\r\n//               <a href=\"#\">{date}</a>\r\n//             </h3>\r\n//           </div>\r\n//           <div className=\"cont-fl-r\" >\r\n//             <ul>\r\n//               <li>\r\n//                 {/* <!-- Dropdown les plus matchées \"trier\" - début --> */}\r\n\r\n//                 <div>\r\n//                   <select className=\"searchFilter\" id=\"mostMatchedByMonth\" name=\"mostMatchedByMonth\" onChange={(e) => setNMonth(e.target.value)}>\r\n//                     <option value=\"1\" selected>Ce mois-ci</option>\r\n//                     <option value=\"2\">Le mois dernier</option>\r\n//                     <option value=\"3\">Il y a 2 mois</option>\r\n//                     <option value=\"4\">Il y a 3 mois</option>\r\n//                   </select>\r\n//                 </div>\r\n//               </li>\r\n//             </ul>\r\n//             {/* <!-- Dropdown les plus matchées \"trier\" - fin --> */}\r\n//           </div>\r\n//         </div>\r\n//         {/* <!-- informations et actions - fin --> */}\r\n\r\n//         {/* <!-- carouse                                    <Link className=\"discover\" to={`../../view/ListAmateurPage.js/${list.id}`} state={list.id}>{list.listName}</Link>\r\n// l - début --> */}\r\n//         <div className=\"cont-l-w\">\r\n//           <Carousel responsive={responsive}\r\n//             infinite={true}\r\n//             swipeable={true}\r\n//             ssr={true}\r\n//             slidesToSlide={coefWidth}\r\n//             shouldResetAutoplay={false}\r\n//             itemClass=\"itemOne\"\r\n//             partialVisible={true}\r\n//             renderButtonGroupOutside={true}\r\n//             arrows={true}\r\n//             rewind={false}\r\n//             rewindWithAnimation={false}\r\n//           >\r\n\r\n//             {matchedPainting.length > 0 &&\r\n//               matchedPainting.map((matchPaint, index) => (\r\n//                 <div className=\"sliderOne owl-loaded\" style={{ paddingRight: \"20px\" }}>\r\n//                   <div className=\"item\" >\r\n//                     <Fav user={user} isLogged={isLogged} favPaint={matchPaint.painting} />\r\n//                     <div className=\"img-wrapper\" >\r\n//                       <div className=\"bt-wrapper\">\r\n//                         <div className=\"titre\">\r\n//                           {matchPaint.painting.name}\r\n//                           <div className=\"date\">{matchPaint.painting.year}</div>\r\n//                         </div>\r\n//                         <div className=\"container-action\">\r\n//                           <Link className=\"bt-action voir\" to={`../../view/OpusPage.js/${matchPaint.painting.id}`} state={matchPaint.painting.id}>\r\n\r\n//                             voir\r\n\r\n//                           </Link>\r\n//                           <Link className=\"bt-action match\" to={`../../view/MatchingPage.js/${matchPaint.painting.id}`} state={matchPaint.painting.id}>\r\n//                             match\r\n//                           </Link>\r\n//                         </div>\r\n//                       </div>\r\n//                       <img\r\n//                         className=\"owl-lazy\"\r\n//                         src={URLDayl + `images/content/mini/${matchPaint.painting.artistId}/${matchPaint.painting.urlImage}`}\r\n//                         alt=\"Titre de l'oeuvre\"\r\n//                       />\r\n//                     </div>\r\n//                     <div className=\"name\">\r\n//                       <Link to={`../../view/ArtistDetailPage.js/${matchPaint.painting.artistId}`} state={matchPaint.painting.artistId}>{matchPaint.painting.artisteName}</Link>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>)\r\n\r\n//               )}\r\n//           </Carousel>\r\n//         </div>\r\n//         {/* <!-- carousel - fin --> */}\r\n//       </section>\r\n//       {/* <!-- SECTION LES PLUS MATCHÉES - fin --> */}\r\n//     </div>\r\n//   );\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/HomePage/MostMatched.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "MostMatched",
    "memberof": "src/component/HomePage/MostMatched.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/HomePage/MostMatched.js~MostMatched",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/HomePage/MostMatched.js",
    "importStyle": "MostMatched",
    "description": "This component display the most matched painting of a month",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "users/${user.id} : update user informations"
      }
    ],
    "return": null
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/component/HomePage/RandomInfo.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport lecar from \"../../webapp/temp/lecar_1.jpg\"\r\n\r\n\r\n/**\r\n * This component display random quick facts about famous color, painting, artist, style,...\r\n\r\n */\r\n\r\nexport default function RandomInfo() {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"RandomInfo\" >\r\n\r\n            {/* <!-- MYTHICOLORS - début\r\n\t\t\t******************************************************* --> */}\r\n            <section className=\"center-col mt-d\" >\r\n\r\n                <div className=\"RandomQuickFactBox cont-l-w\">\r\n\r\n                    <div>\r\n                        <h2>Mythi'Colors</h2>\r\n                        <h3 style={{color:\"#6050DC\"}}>Bleu Majorelle</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <h4 style={{borderColor:\"#6050DC\"}}>Le bleu Majorelle est un bleu clair, intense et frais.</h4>\r\n                        <p>En 1924, l'artiste français Jacques Majorelle (1886 - 1962) construisit sa plus grande œuvre d'art, le jardin Majorelle à Marrakech, au Maroc, et peignit les murs du jardin, les fontaines et la villa de cette nuance de bleu très intense, pour laquelle il déposa le nom \"bleu Majorelle\".<br /><br />Il avait remarqué cette couleur sur des carreaux marocains, des burnous berbères et autour des fenêtres des bâtiments tels que les kasbahs et les maisons en pisé indigènes.</p>\r\n                    </div>\r\n\r\n                    <div className=\"col mythiColor\" style={{backgroundColor:\"#6050DC\"}}>\r\n                        <p>Hex triplet : #6050DC<br />sRGB : (96, 80, 220)<br />HSV : (247°, 64%, 86%)</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </section>\r\n            {/* <!-- MYTHICOLORS - fin --> */}\r\n\r\n            {/* <!-- ART'I'FACTS - début\r\n******************************************************* --> */}\r\n            <section className=\"center-col mt-c mb-d\">\r\n\r\n                <div className=\"RandomQuickFactBox cont-l-w mb-d\">\r\n\r\n                    <div>\r\n                        <h2>Art'I'Facts</h2>\r\n                        <h3>le Caravage</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col artistPortrait\" style={{ background: `url(${lecar})` }}>\r\n                        <p>Le Caravage, craie sur papier par Ottavio Leoni, vers 1621, Florence, bibliothèque Marucelliana</p>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <h4>Célèbre peintre... et criminel notoire</h4>\r\n                        <p>Michelangelo Merisi da Caravaggio, francisé Caravage ou le Caravage, est un peintre italien, né le 29 septembre 1571 à Milan et mort le 18 juillet 1610 à Porto Ercole.<br /><br />Son œuvre puissante et novatrice révolutionne la peinture du xviie siècle par son caractère naturaliste, son réalisme parfois brutal et l'emploi appuyé de la technique du clair-obscur allant jusqu'au ténébrisme. Il connaît la célébrité de son vivant et influence nombre de grands peintres après lui, comme en témoigne l'apparition du caravagisme.<br /><br />Après une longue période d'oubli critique, il faut attendre le début du xxe siècle pour que le génie de Caravage soit pleinement reconnu, indépendamment de sa réputation sulfureuse.</p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </section>\r\n            {/* <!-- ART'I'FACTS - fin --> */}\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/HomePage/RandomInfo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "RandomInfo",
    "memberof": "src/component/HomePage/RandomInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/HomePage/RandomInfo.js~RandomInfo",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/HomePage/RandomInfo.js",
    "importStyle": "RandomInfo",
    "description": "This component display random quick facts about famous color, painting, artist, style,...",
    "lineNumber": 16,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "src/component/HomePage/SearchArtist.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Fav from \"../general/Fav\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { render } from 'react-dom';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { toast } from \"react-toastify\";\r\n\r\n/**\r\n * This component display a random artist and allow to search other artists\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @emits - paintingEntity/byArtist/${value.artistId}/0 : get artist paintings\r\n * @emits - artistSearch/findByPrefix?occurence=${inputValue} : search artist\r\n\r\n */\r\n\r\nexport default function SearchArtist({ user, setUser, isLogged }) {\r\n  // //Declaration des variables globales\r\n  // const { register, formState: { errors }, handleSubmit, watch, } = useForm({ mode: \"onChange\" });\r\n\r\n  // const [error, setError] = useState(null);\r\n  // const [isLoaded, setIsLoaded] = useState(false);\r\n  // const [rngPaintArtist, setRngPaintArtist] = useState([]);\r\n  // const [refreshKey, setRefreshKey] = useState(0);\r\n  // const [width, setWidth] = useState(window.innerWidth);\r\n  // const [coefWidth, setCoefWidth] = useState();\r\n  // const watchOccurence = watch();\r\n  // const [inputValue, setValue] = useState('');\r\n  // const [selectedValue, setSelectedValue] = useState(null);\r\n\r\n\r\n\r\n\r\n  // // //parametres carousel//\r\n  // const responsive = {\r\n  //   superLargeDesktop: {\r\n  //     // the naming can be any, depends on you.\r\n  //     breakpoint: { max: 4000, min: 3000 },\r\n  //     items: 5,\r\n  //     slidesToSlide: 2.85714286\r\n  //   },\r\n  //   desktop: {\r\n  //     breakpoint: { max: 3000, min: 1024 },\r\n  //     items: 5\r\n  //   },\r\n  //   tablet: {\r\n  //     breakpoint: { max: 1024, min: 464 },\r\n  //     items: 3\r\n  //   },\r\n  //   mobile: {\r\n  //     breakpoint: { max: 464, min: 0 },\r\n  //     items: 2\r\n  //   }\r\n  // };\r\n\r\n\r\n  // // handle input change event for artist search\r\n  // const handleInputChange = value => {\r\n  //   setValue(value);\r\n  // };\r\n\r\n  // // handle selection for async dropdown\r\n  // const handleChange = value => {\r\n  //   setSelectedValue(value);\r\n  //   console.log(value)\r\n  //   //send the selected artist to the api \r\n  //   axios\r\n  //     .get(URLDayl + `paintingEntity/byArtist/${value.artistId}/0`\r\n  //     )\r\n  //     .then((response) => {\r\n  //       console.log(response.data)\r\n  //       if (response.data.length > 0) {\r\n  //         setRngPaintArtist(response.data)\r\n\r\n  //       }\r\n  //       else {\r\n  //         toast.warning(\"Nous n'avons pas trouvé d'oeuvres pour cet artiste!\", {\r\n  //           position: \"top-right\",\r\n  //           autoClose: 3000,\r\n  //           hideProgressBar: false,\r\n  //           closeOnClick: true,\r\n  //           pauseOnHover: true,\r\n  //           draggable: true,\r\n  //           progress: undefined,\r\n  //         });\r\n  //       }\r\n\r\n  //     });\r\n  // }\r\n  // // //style barre de recherche\r\n  // // const customStyles = {\r\n  // //   control: (_, { selectProps: {  }}) => ({\r\n  // //     height: 45\r\n  // //   }),\r\n  // //   // placeholder: (_, { selectProps: {  }}) => ({\r\n  // //   //   bottom: 35\r\n  // //   // }),\r\n\r\n  // // }\r\n\r\n  // // load options using API call\r\n  // const loadOptions = (inputValue) => {\r\n  //   return fetch(\r\n  //     URLDayl + `artistSearch/findByPrefix?occurence=${inputValue}`\r\n  //   ).then((res) => res.json());\r\n  // };\r\n\r\n\r\n  // //update user\r\n  // useEffect(() => {\r\n  //   if (user)\r\n  //     axios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n  //     ).then((response) => { setUser(response.data) });\r\n\r\n\r\n  // }, [refreshKey]);\r\n\r\n\r\n  // //Get Random Artist//\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get(URLDayl + \"paintingFront/randomArtistAndGet20Paintings\"\r\n  //     )\r\n  //     .then((response) => {\r\n  //       setRngPaintArtist(response.data);\r\n\r\n  //       const boolArray = response.data.map((el) => { return { ...el, bool: false } });\r\n\r\n  //       setRngPaintArtist(boolArray)\r\n  //       getItemWidth()\r\n\r\n  //     });\r\n  // }, []);\r\n\r\n\r\n  // //get la largeur d'un item carrousel\r\n  // function getItemWidth() {\r\n  //   let el = document.querySelector('.react-multi-carousel-item.itemOne')\r\n  //   //on convertis la valeur en int\r\n\r\n  //   if (el) {\r\n  //     let element = parseInt(el.style.width.slice(0, 3))\r\n  //     let coef = 2 * (270 / element);\r\n  //     setCoefWidth(coef)\r\n  //   }\r\n\r\n  // }\r\n  // //get la largeur de la fenetre\r\n  // const handleResize = () => {\r\n  //   setWidth(window.innerWidth)\r\n  // }\r\n  // useEffect(() => {\r\n  //   window.addEventListener(\"resize\", handleResize, false);\r\n  // }, []);\r\n\r\n\r\n  // //update la largeur d'un item quand la largeur de la fenetre change\r\n  // useEffect(() => {\r\n\r\n  //   getItemWidth();\r\n  // }, [width]);\r\n\r\n  // if (rngPaintArtist.length === 0) {\r\n  //   return (\r\n  //     <div>\r\n\r\n  //     </div>\r\n  //   )\r\n  // }\r\n  // return (\r\n  //   <div className=\"SearchArtist\">\r\n  //     {/* <!-- ******************************************************\r\n\t// \t\tSECTION CHOISISSEZ UN ARTISTE - début\r\n\t// \t\t****************************************************** --> */}\r\n  //     <section className=\"center-col cont-sty-2\">\r\n  //       {/* <!-- informations et actions - début --> */}\r\n  //       <div className=\"cont-l-w center-row\">\r\n  //         <div className=\"cont-fl-l\">\r\n  //           <h2>Choisissez un artiste</h2>\r\n\r\n  //           <ol className=\"artistBc\">\r\n  //             <li>Peintre</li>\r\n  //             <li>\r\n  //               <h3>\r\n  //                 <Link to={`../../view/ArtistDetailPage.js/${rngPaintArtist[0].id}`} state={rngPaintArtist[0].artistId} >\r\n  //                   {rngPaintArtist.length > 0 && rngPaintArtist[0].artisteName}\r\n  //                 </Link>\r\n  //               </h3>\r\n  //             </li>\r\n  //           </ol>\r\n  //         </div>\r\n  //         <div className=\"cont-fl-r\">\r\n  //           <ul>\r\n  //             {/* <li>\r\n  //               <div>\r\n  //                 <select className=\"searchFilter\" id=\"triArtist\" name=\"triArtist\" >\r\n  //                   <option value=\"Décembre 2021\" selected>Décembre 2021</option>\r\n  //                   <option value=\"Novembre 2021\">Novembre 2021</option>\r\n  //                   <option value=\"Octobre 2021\">Octobre 2021</option>\r\n  //                   <option value=\"Septembre 2021\">Septembre 2021</option>\r\n  //                 </select>\r\n  //               </div>\r\n  //             </li> */}\r\n  //             <li>\r\n  //               {/* <!-- Champ de recherche artiste - début --> */}\r\n  //               <div>\r\n\r\n  //                 <form id=\"chooseArtistSearch\">\r\n  //                   <AsyncSelect\r\n  //                     className=\"searchString\"\r\n  //                     style={{ borderWidth: \"0\" }}\r\n  //                     cacheOptions\r\n  //                     defaultOptions\r\n  //                     value={selectedValue}\r\n  //                     getOptionLabel={e => (e.lastName + \" \" + e.firstName)}\r\n  //                     getOptionValue={e => e.artisteId}\r\n  //                     loadOptions={loadOptions}\r\n  //                     onInputChange={handleInputChange}\r\n  //                     onChange={handleChange}\r\n  //                     placeholder={\"\"}\r\n  //                   /></form>\r\n  //               </div>\r\n  //               {/* <!-- Champ de recherche artiste - fin --> */}\r\n  //             </li>\r\n\r\n  //           </ul>\r\n  //         </div>\r\n  //       </div>\r\n  //       {/* <!-- informations et actions - fin --> */}\r\n\r\n  //       {/* <!-- carousel - début --> */}\r\n  //       <div className=\"cont-l-w\">\r\n  //         <Carousel responsive={responsive}\r\n  //           infinite={true}\r\n  //           shouldResetAutoplay={false}\r\n  //           itemClass=\"itemOne\"\r\n  //           rewind={false}\r\n  //           slidesToSlide={coefWidth}\r\n  //           rewindWithAnimation={false}\r\n  //         >\r\n  //           {rngPaintArtist.length > 0 &&\r\n  //             rngPaintArtist.map((rngPaint, index) => (\r\n  //               <div className=\"sliderOne owl-loaded\" style={{ marginRight: \"20px\" }}>\r\n  //                 <div className=\"item\">\r\n  //                   <Fav user={user} isLogged={isLogged} favPaint={rngPaint} />\r\n  //                   <div className=\"img-wrapper\">\r\n  //                     <div className=\"bt-wrapper\">\r\n  //                       <div className=\"titre\">\r\n  //                         {rngPaint.name}\r\n  //                         <div className=\"date\">{rngPaint.year}</div>\r\n  //                       </div>\r\n  //                       <div className=\"container-action\">\r\n  //                         <Link className=\"bt-action voir\" to={`../../view/OpusPage.js/${rngPaint.id}`} state={rngPaint.id}>\r\n\r\n  //                           voir\r\n\r\n  //                         </Link>\r\n  //                         <Link className=\"bt-action match\" to={`../../view/MatchingPage.js/${rngPaint.id}`} state={rngPaint.id}>\r\n  //                           match\r\n  //                         </Link>\r\n  //                       </div>\r\n  //                     </div>\r\n  //                     <img\r\n  //                       className=\"owl-lazy\"\r\n  //                       src={URLDayl + `images/content/mini/${rngPaint.artistId}/${rngPaint.urlImage}`}\r\n  //                       alt=\"Titre de l'oeuvre\"\r\n  //                     />\r\n  //                   </div>\r\n  //                   <div className=\"name\"></div>\r\n  //                 </div>\r\n  //               </div>\r\n  //             ))}\r\n  //         </Carousel>\r\n  //       </div>\r\n  //       {/* <!-- carousel - fin --> */}\r\n  //     </section>\r\n  //     {/* <!-- SECTION CHOISISSEZ UN ARTISTE - fin --> */}\r\n  //   </div>\r\n  // );\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/HomePage/SearchArtist.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "SearchArtist",
    "memberof": "src/component/HomePage/SearchArtist.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/HomePage/SearchArtist.js~SearchArtist",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/HomePage/SearchArtist.js",
    "importStyle": "SearchArtist",
    "description": "This component display a random artist and allow to search other artists",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/byArtist/${value.artistId}/0 : get artist paintings"
      },
      {
        "types": [
          "*"
        ],
        "description": "artistSearch/findByPrefix?occurence=${inputValue} : search artist"
      }
    ],
    "return": null
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/component/HomePage/SearchBar.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport truncate from \"truncate\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n/**\r\n * This component display 30 random paintings and allow you to make specific research with different filters\r\n * @param {object} user - user object from api\r\n * @emits - paintingEntity/randomPaintings30 : get 30 random paintings\r\n * @emits - paintingFront/listStyles(listOrigins) (listGenres) : get list of filter\r\n * @emits - paintingSearch/findPaintingBySearchDto : get search result\r\n\r\n */\r\n\r\nexport default function SearchBar({ user }) {\r\n  //Declaration des variables globales\r\n\r\n\r\n  const [searchPainting, setSearchPainting] = useState([]);\r\n  const [search, setSearch] = useState([]);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [coefWidth, setCoefWidth] = useState();\r\n  const [listStyles, setListStyles] = useState([]);\r\n  const [listOrigins, setListOrigins] = useState([]);\r\n  const [listGenres, setListGenres] = useState([]);\r\n  const { register, handleSubmit, formState: { errors }, reset } = useForm();\r\n  // //parametres carousel//\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 9\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 9\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 5\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 2\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const responsive2 = {\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 1,\r\n      paritialVisibilityGutter: 0\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 1,\r\n      paritialVisibilityGutter: 0\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n      paritialVisibilityGutter: 0\r\n    }\r\n  };\r\n\r\n  // get 30 random Paint //\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(URLDayl + \"paintingEntity/randomPaintings30\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n      .then((response) => {\r\n        setSearchPainting(response.data);\r\n        getItemWidth();\r\n      });\r\n  }, []);\r\n\r\n\r\n  // get filter //\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(URLDayl + \"paintingFront/listStyles\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n      .then((response) => {\r\n        setListStyles(response.data);\r\n      });\r\n    axios\r\n      .get(URLDayl + \"paintingFront/listOrigins\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n      .then((response) => {\r\n        setListOrigins(response.data);\r\n      });\r\n    axios\r\n      .get(URLDayl + \"paintingFront/listGenres\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n      .then((response) => {\r\n        setListGenres(response.data);\r\n      });\r\n  }, []);\r\n\r\n\r\n  // send search //\r\n\r\n  const sendSearch =  async (data) =>  {\r\n  \r\nconsole.log(data)\r\n    axios.post(URLDayl + \"paintingSearch/findPaintingBySearchDto\", {\r\n      license: data.license, style: data.style, genre: data.genre, nationality: data.nationality,\r\n      freeSearch: data.freeSearch, year: data.year, decade: data.decade\r\n    },\r\n      { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": \"0\" } }\r\n    )\r\n      .then((response) => {\r\n\r\n        setSearchPainting(response.data);\r\n\r\n      });\r\n\r\n  }\r\n\r\n  //get la largeur d'un item carrousel\r\n  function getItemWidth() {\r\n    let el = document.querySelector('.react-multi-carousel-item.itemTwo')\r\n    //on convertis la valeur en int\r\n\r\n\r\n    if (el) {\r\n      let element = parseInt(el.style.width.slice(0, 3))\r\n      let coef = 2 * (203 / element);\r\n      setCoefWidth(coef)\r\n    }\r\n\r\n  }\r\n  //get la largeur de la fenetre\r\n  const handleResize = () => {\r\n    setWidth(window.innerWidth)\r\n  }\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize, false);\r\n  }, []);\r\n\r\n\r\n  //update la largeur d'un item quand la largeur de la fenetre change\r\n  useEffect(() => {\r\n\r\n    getItemWidth();\r\n  }, [width]);\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"SearchBar\">\r\n\r\n      {/* <!-- ******************************************************\r\n\t\t\tTOP BOX - TITRE & BG - début\r\n\t\t\t******************************************************* --> */}\r\n      <section className=\"center-col\">\r\n\r\n        <div className=\"cont-f-w startPageBg\" style={{ backgroundImage: `url(${URLDayl}images/content/${searchPainting.length > 0 && searchPainting[0].artistId}/${searchPainting.length > 0 && searchPainting[0].urlImage})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\", height: \"400px\" }}></div>\r\n\r\n        <div className=\"cont-n-w center-col exploPageTop\" >\r\n          <h1 className=\"goRed\">Discover <span>Art</span> You <span>Love</span></h1>\r\n          < div style={{ width: \"700px\" }}>\r\n            <Carousel\r\n              itemClass=\"image-item\"\r\n              responsive={responsive2}\r\n              arrows={false}\r\n              showDots={true}\r\n              autoPlay={true}\r\n              infinite={true}\r\n            >\r\n              <div style={{ width: \"650px\", margin: \"25px\", marginBottom: \"50px\" }}> <p>Dayl offre, via les technologies IA, <span>un pont entre l’histoire de l’art et les artistes contemporains</span> à travers une navigation inédite et le « matching » des peintures</p></div>\r\n              <div style={{ width: \"650px\", margin: \"25px\", marginBottom: \"50px\" }}> <p>Dayl, une plateforme ouverte <span>au partage, à l’échange, aux rencontres et à la promotion</span> d’une vision pédagogique des œuvres d’art, à travers les âges</p></div>\r\n              <div style={{ width: \"650px\", margin: \"25px\", marginBottom: \"50px\" }}> <p>Dayl fait le pari de la valorisation des supports numériques artistiques en mode <span>Haute Définition</span></p></div>\r\n            </Carousel></div>\r\n\r\n        </div>\r\n\r\n\r\n      </section>\r\n\r\n      {/* <!-- ******************************************************\r\nTOP BOX - TITRE & BG - fin --> */}\r\n\r\n\r\n\r\n      {/* <!-- ******************************************************\r\n\t\t\tMENU DE RECHERCHE DES OEUVRES - début\r\n\t\t\t(blocks.css - code relatif ligne 54 -> 55 + dropdown menus ligne 61 -> 72)\r\n\t\t\t****************************************************** --> */}\r\n\r\n      <section className=\"center-col bgc-a mt-b\">\r\n\r\n        <h1 class=\"explorerTitleH\">Rechercher et Explorer</h1>\r\n        <form id=\"fineSearch\" className=\"fineSearch\" onSubmit={handleSubmit(sendSearch)} >\r\n          {/* <!-- Choisir un type de licence concernant les oeuvres - début --> */}\r\n          <div >\r\n            <select className=\"searchFilter\" {...register(\"license\")}>\r\n              <option value=\"\" selected>Licence</option>state\r\n              <option value=\"Domaine public\">Domaine public</option>\r\n              <option value=\"protected\">Oeuvres protégées</option>\r\n            </select>\r\n          </div>\r\n          {/* <!-- Choisir un type de licence concernant les oeuvres - fin --> */}\r\n\r\n          {/* <!-- Choisir un style d'oeuvre - début --> */}\r\n          <div>\r\n            <select className=\"searchFilter\" id=\"style\" name=\"style\" {...register(\"style\")}>\r\n              <option value=\"\" selected>Style</option>\r\n              {listStyles.length > 0 && listStyles.map((style, index) => (\r\n                <option value={style.code}>{style.name}</option>\r\n              ))}\r\n\r\n\r\n            </select>\r\n          </div>\r\n          {/* <!-- Choisir un style d'oeuvre - fin --> */}\r\n\r\n          {/* <!-- Choisir un genre d'oeuvre - début --> */}\r\n          <div >\r\n            <select className=\"searchFilter\" id=\"genre\" name=\"genre\" {...register(\"genre\")}>\r\n              <option value=\"\" selected>Genre</option>\r\n              {listGenres.length > 0 && listGenres.map((genre, index) => (\r\n                <option value={genre.code}>{genre.name}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* <!-- Choisir un genre d'oeuvre - fin --> */}\r\n\r\n          {/* <!-- Choisir une nationalité de l'oeuvre - début --> */}\r\n          <div>\r\n            <select className=\"searchFilter\" id=\"nationalite\" name=\"nationalite\" {...register(\"nationality\")}>\r\n              <option value=\"\" selected>Nationalité</option>\r\n              {listOrigins.length > 0 && listOrigins.map((origin, index) => (\r\n                <option value={origin.code}>{origin.name}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          {/* <!-- Choisir une nationalité de l'oeuvre - fin --> */}\r\n\r\n          {/* <!-- Champ de recherche texte - début --> */}\r\n          <div>\r\n            <input\r\n              {...register(\"freeSearch\")}\r\n              type=\"text\"\r\n              className=\"searchString explorer\"\r\n              placeholder=\"Artiste, mot-clé...\"\r\n            />\r\n          </div>\r\n          {/* <!-- Champ de recherche texte - fin --> */}\r\n\r\n          {/* <!-- Année de l'oeuvre - début --> */}\r\n          <div>\r\n            <input\r\n             {...register(\"year\")}\r\n              type=\"text\"\r\n              className=\"date\"\r\n              placeholder=\"Année\"\r\n            />\r\n          </div>\r\n          {/* <!-- Année de l'oeuvre - fin --> */}\r\n\r\n          {/* <!-- Décennie de l'oeuvre - début --> */}\r\n          <div>\r\n            <input\r\n              {...register(\"decade\")}\r\n              type=\"text\"\r\n              className=\"date\"\r\n              placeholder=\"Décennie\"\r\n            />\r\n          </div>\r\n          {/* <!-- Décennie de l'oeuvre - fin --> */}\r\n\r\n          {/* <!-- Bouton de lancement de recherche - début --> */}\r\n          <div data-tooltip=\"Lancer la recherche\">\r\n            <input type=\"submit\" /* onClick={handleSubmit} */  className=\"squareSub\" value=\"\"/>\r\n           \r\n          </div> \r\n          <div data-tooltip=\"Reset les filtres\">\r\n          <input  onClick={(e) => reset()}  className=\"squareReset\" value=\"\"/>\r\n          </div>\r\n          {/* <!-- Bouton de lancement de recherche - fin -->\r\n\r\n\t\t\t\t\t<!-- Lien matching à la volée - début --> */}\r\n          {/* <div data-tooltip=\"Matching à la volée\">\r\n            <Link href=\"matching-image.html\" to=\"../../view/MatchingImage.js\" className=\"squareMatch\"></Link>\r\n          </div> */}\r\n          {/* <!-- Lien matching à la volée - fin --> */}\r\n        </form>\r\n      </section>\r\n      {/* <!-- MENU DE RECHERCHE DES OEUVRES - fin -->\r\n\r\n\r\n\t\t\t<!-- ******************************************************\r\n\t\t\tCAROUSEL PLEINE LARGEUR - début\r\n\t\t\t(carousels.css)\r\n\t\t\t****************************************************** --> */}\r\n      <section className=\"center-col\">\r\n        {/* <!-- Résultats carousel - début --> */}\r\n        <div className=\"cont-l-slider\">\r\n          <Carousel responsive={responsive}\r\n            infinite={true}\r\n            shouldResetAutoplay={false}\r\n            itemClass=\"itemTwo\"\r\n            rewind={false}\r\n            slidesToSlide={coefWidth}\r\n            rewindWithAnimation={false}\r\n          >\r\n\r\n            {searchPainting.length / 2 > 0 &&\r\n              searchPainting.map(function (searchPaint, index) {\r\n                if (index % 2 == 0) return (\r\n                  <div className=\"sliderTwo\" >\r\n\r\n                    <div className=\"item\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${(searchPaint && searchPaint.hasOwnProperty(\"artistId\")) && searchPaint.artistId}/${searchPaint.urlImage && searchPaint.urlImage})`, backgroundSize: \"cover\", backgroundPosition: \"center center\" }}>\r\n                      <div className=\"img-wrapper\" >\r\n                        <div className=\"bt-wrapper\">\r\n                          <div className=\"name\">{searchPaint.artisteName && searchPaint.artisteName}</div>\r\n                          <div className=\"titre\">\r\n                            {searchPaint.name && searchPaint.name}\r\n                            <div className=\"date\">{searchPaint.year && searchPaint.year}</div>\r\n                          </div>\r\n                          <div className=\"container-action\">\r\n                            <Link className=\"bt-action voir\" to={`../../view/OpusPage.js/${searchPaint.id && searchPaint.id}`} state={searchPaint.id && searchPaint.id}>\r\n\r\n                              voir\r\n\r\n                            </Link>\r\n                            <Link className=\"bt-action match\" to={`../../view/MatchingPage.js/${searchPaint.id && searchPaint.id}`} state={searchPaint.id && searchPaint.id}>\r\n                              match\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                        {/* <img\r\n                          className=\"owl-lazy\"\r\n                          src={`https://art.novagen.tech/medias/artist/${searchPaint.artistId}/_mini/${searchPaint.urlImage}`}\r\n                          alt=\"Titre de l'oeuvre\"\r\n                        /> */}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"item\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"artistId\")) && searchPainting[index + 1].artistId}/${(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"urlImage\")) && searchPainting[index + 1].urlImage})`, backgroundSize: \"cover\", backgroundPosition: \"center center\" }}>\r\n                      <div className=\"img-wrapper\" >\r\n                        <div className=\"bt-wrapper\">\r\n                          <div className=\"name\">{(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"name\")) && searchPainting[index + 1].artisteName}</div>\r\n                          <div className=\"titre\">\r\n                            {(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"name\")) && searchPainting[index + 1].name}\r\n                            <div className=\"date\">{(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"year\")) && searchPainting[index + 1].year}</div>\r\n                          </div>\r\n                          <div className=\"container-action\">\r\n                            <Link className=\"bt-action voir\" to={`../../view/OpusPage.js/${(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"id\")) && searchPainting[index + 1].id}`} state={(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"id\")) && searchPainting[index + 1].id}>\r\n\r\n                              voir\r\n\r\n                            </Link>\r\n                            <Link className=\"bt-action match\" to={`../../view/MatchingPage.js/${(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"id\")) && searchPainting[index + 1].id}`} state={(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"id\")) && searchPainting[index + 1].id}>\r\n                              match\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                        {/* <img\r\n                          className=\"owl-lazy\"\r\n                          src={`https://art.novagen.tech/medias/artist/${searchPainting[index+1].artistId}/_mini/${searchPainting[index+1].urlImage}`}\r\n                          alt=\"Titre de l'oeuvre\"\r\n                        /> */}\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                )\r\n\r\n\r\n              })}\r\n\r\n          </Carousel>\r\n        </div>\r\n\r\n        {/* <!-- Résultats carousel - fin --> */}\r\n\r\n\r\n\r\n        {searchPainting.length < 1 && <div className=\"cont-l-w noContentResult\">\r\n          <img src=\"img/icons/ico_noresult_1.svg\" alt=\"Aucun résultat\" />\r\n          <p>Aucun résultat.</p>\r\n        </div>}\r\n\r\n\r\n      </section>\r\n      {/* <!-- CAROUSEL PLEINE LARGEUR - fin --> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/HomePage/SearchBar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "SearchBar",
    "memberof": "src/component/HomePage/SearchBar.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/HomePage/SearchBar.js~SearchBar",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/HomePage/SearchBar.js",
    "importStyle": "SearchBar",
    "description": "This component display 30 random paintings and allow you to make specific research with different filters",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/randomPaintings30 : get 30 random paintings"
      },
      {
        "types": [
          "*"
        ],
        "description": "paintingFront/listStyles(listOrigins) (listGenres) : get list of filter"
      },
      {
        "types": [
          "*"
        ],
        "description": "paintingSearch/findPaintingBySearchDto : get search result"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/component/HomePage/SearchColor.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport axios from \"axios\";\r\nimport { ColorPicker, useColor } from \"react-color-palette\";\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n// import ColorPicker from \"../general/ColorPicker\"\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Fav from \"../general/Fav\";\r\n\r\n/**\r\n * This component display a color Picker and allow you to find paitings with the selected color\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @emits - users/${user.id} : update user informations\r\n * @emits - paintingSearch/findByColor : get list of paintings by selected color\r\n\r\n\r\n */\r\n\r\nexport default function SearchColor({ user, setUser, isLogged }) {\r\n  // //Declaration des variables globales\r\n\r\n  // const [allColor, setAllColor] = useState();\r\n  // const [paintingByColor, setPaintingByColor] = useState([]);\r\n  // const [refreshKey, setRefreshKey] = useState(0);\r\n  // // const [color, setColor] = useState([]);\r\n  // const [width, setWidth] = useState(window.innerWidth);\r\n  // const [coefWidth, setCoefWidth] = useState();\r\n  // const [color, setColor] = useColor(\"hex\", \"#\" + Math.floor(Math.random() * 16777215).toString(16));\r\n\r\n\r\n  // // //parametres carousel//\r\n  // const responsive = {\r\n  //   superLargeDesktop: {\r\n  //     // the naming can be any, depends on you.\r\n  //     breakpoint: { max: 4000, min: 3000 },\r\n  //     items: 5\r\n  //   },\r\n  //   desktop: {\r\n  //     breakpoint: { max: 3000, min: 1024 },\r\n  //     items: 5\r\n  //   },\r\n  //   tablet: {\r\n  //     breakpoint: { max: 1024, min: 464 },\r\n  //     items: 3\r\n  //   },\r\n  //   mobile: {\r\n  //     breakpoint: { max: 464, min: 0 },\r\n  //     items: 2\r\n  //   }\r\n  // };\r\n\r\n\r\n\r\n\r\n  // //update user\r\n  // useEffect(() => {\r\n  //   if (user)\r\n  //     axios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n  //     ).then((response) => { setUser(response.data) });\r\n\r\n\r\n  // }, [refreshKey]);\r\n\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n\r\n\r\n  //   axios.post(\r\n\r\n  //     URLDayl + `paintingSearch/findByColor`, { colorCode: color.hex, sortOrder: \"ASC\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n  //   )\r\n  //     .then((response) => {\r\n\r\n  //       setPaintingByColor(response.data);\r\n\r\n  //     });\r\n\r\n  // }\r\n\r\n  // const handleChange = color => setColor(color);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   // setColor({ hex: \"#050655\", rgb: { r: 5, g: 6, b: 85 } })\r\n  //   console.log(color)\r\n  //   axios\r\n  //     .post(\r\n  //       URLDayl + `paintingSearch/findByColor`, { colorCode: color.hex, sortOrder: \"ASC\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n  //     )\r\n  //     .then((response) => {\r\n\r\n  //       setPaintingByColor(response.data);\r\n\r\n  //       const boolArray = response.data.map((el) => { return { ...el, bool: false } });\r\n\r\n\r\n  //       setPaintingByColor(boolArray)\r\n  //       getItemWidth();\r\n  //     });\r\n  // }, [color]);\r\n\r\n  // // Call Jquery script\r\n  // // useEffect(() => {\r\n  // //   const loadFile = async () => {\r\n  // //     const { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n\r\n  // //     modal();\r\n  // //   };\r\n  // //   loadFile();\r\n  // // }, []);\r\n\r\n  // //get la largeur d'un item carrousel\r\n  // function getItemWidth() {\r\n  //   let el = document.querySelector('.react-multi-carousel-item.itemOne')\r\n  //   //on convertis la valeur en int\r\n\r\n  //   if (el) {\r\n  //     let element = parseInt(el.style.width.slice(0, 3))\r\n  //     let coef = 2 * (270 / element);\r\n  //     setCoefWidth(coef)\r\n  //   }\r\n\r\n  // }\r\n  // //get la largeur de la fenetre\r\n  // const handleResize = () => {\r\n  //   setWidth(window.innerWidth)\r\n  // }\r\n  // useEffect(() => {\r\n  //   window.addEventListener(\"resize\", handleResize, false);\r\n  // }, []);\r\n\r\n\r\n  // //update la largeur d'un item quand la largeur de la fenetre change\r\n  // useEffect(() => {\r\n\r\n  //   getItemWidth();\r\n  // }, [width]);\r\n  // console.log(color)\r\n  // return (\r\n  //   <div className=\"SearchColor\">\r\n  //     {/* <!-- ******************************************************\r\n\t// \t\tSECTION CHOISISSEZ VOTRE THÉMATIQUE COULEUR - début\r\n\t// \t\t****************************************************** --> */}\r\n  //     <section className=\"center-col cont-sty-1 matchingTryBox\" style={{ gap: \"0\" }}>\r\n  //       {/* <!-- informations et actions - début --> */}\r\n  //       <div className=\"cont-l-w center-row\">\r\n  //         <div className=\"cont-fl-l\" style={{paddingTop: \"20px\"}}>\r\n  //           <h2>Choisissez votre thématique couleur</h2>\r\n  //         </div>\r\n  //         <div className=\"cont-fl-r\">\r\n  //           <ul>\r\n  //             <li>\r\n  //               {/* <!-- Modal \"choisir une couleur\" - début --> */}\r\n  //               {/* <div className=\"smart-modal\">\r\n  //                 <a data-target=\"modal01\" className=\"smart-modal-open\">\r\n  //                   <span id=\"color_show_D\" style={{ background: `${color.hex}` }}></span>Choisir une couleur\r\n  //                 </a>\r\n\r\n  //                 <div id=\"modal01\" className=\"smart-modal-content\" style={{width: \"295px\"}}>\r\n  //                   <h3>Choisir une couleur</h3>\r\n  //                   <a className=\"smart-modal-close\">\r\n  //                     <img\r\n  //                       className=\"img-left\"\r\n  //                       src=\"img/icons/ico_close_2.svg\"\r\n  //                       alt=\"Trier\"\r\n  //                     />\r\n  //                   </a>\r\n  //                   <ColorPicker width={250} height={228} color={color} onChange={setColor} hideHSV hideRGB />\r\n  //                   <div style={{ border: '2px solid #0000001a', borderRadius: '50%', width: \"50px\", height: \"50px\", position: \"absolute\", bottom: \"112px\", left: \"35px\", background: color.hex }}></div>\r\n\r\n  //                   <form onSubmit={handleSubmit}>\r\n  //                     <button type=\"submit\" className=\"colorPickerSub modalClose\" value=\"Choisir cette couleur\" >Choisir cette couleur</button>\r\n  //                   </form>\r\n\r\n  //                 </div>\r\n  //               </div> */}\r\n  //               {/* <!-- Modal \"choisir une couleur\" - fin --> */}\r\n  //             </li>\r\n\r\n  //             {/* <li>\r\n  //               <div>\r\n  //                 <select className=\"searchFilter\" id=\"colorSort\" name=\"colorSort\">\r\n  //                   <option value=\"Tri couleur #1\" selected>Tri couleur #1</option>\r\n  //                   <option value=\"Tri couleur #2\">Tri couleur #2</option>\r\n  //                   <option value=\"Tri couleur #3\">Tri couleur #3</option>\r\n  //                   <option value=\"Tri couleur #4\">Tri couleur #4</option>\r\n  //                 </select>\r\n  //               </div>\r\n  //             </li> */}\r\n\r\n  //             <li>\r\n  //               {/* <!-- CTA page matching couleur - début --> */}\r\n  //               <div>\r\n  //                 <form id=\"getColorMatch\" method=\"post\" action=\"#\">\r\n  //                   <input\r\n  //                     id=\"colorRGB\"\r\n  //                     name=\"colorRGB\"\r\n  //                     type=\"hidden\"\r\n  //                     value=\"#RGB_CODE\"\r\n  //                   />\r\n  //                   <input\r\n  //                     id=\"filterValue\"\r\n  //                     name=\"filterValue\"\r\n  //                     type=\"hidden\"\r\n  //                     value=\"#FILTER_VALUE\"\r\n  //                   />\r\n  //                   {/* <input\r\n  //                     type=\"submit\"\r\n  //                     className=\"itemEmotion\"\r\n  //                     value=\"Voir +\"\r\n  //                   />  */}\r\n\r\n  //                 </form>\r\n  //               </div>\r\n  //               {/* <!-- CTA page matching couleur - fin --> */}\r\n  //             </li>\r\n  //           </ul>\r\n  //         </div>\r\n  //       </div>\r\n  //       {/* <!-- informations et actions - fin --> */}\r\n\r\n  //       <div className=\"duoTry mt-b mb-b\">\r\n  //         <div className=\"col-l\">\r\n  //           <div>\r\n  //             <ColorPicker width={250} height={228} color={color} onChange={handleChange} hideHSV hideRGB style={{backgroundColor: \"#F3F3F3\"}}/>\r\n  //             <div style={{ border: '2px solid #0000001a', borderRadius: '50%', width: \"50px\", height: \"50px\", position: \"absolute\", bottom: \"42px\", left: \"25px\", background: color.hex }}></div>\r\n  //           </div>\r\n  //           <Link className=\"itemEmotion mt-a\" to={`../../view/MatchingColor.js`} state={color} style={{width: \"250px\"}}>\r\n\r\n  //             Voir +\r\n\r\n  //           </Link>\r\n  //         </div>\r\n  //         <div className=\"col-r\">\r\n  //           {/* <!-- Modal artistes matchés & filtrer le matching - début --> */}\r\n  //           <div className=\"cont-l-w\" style={{ width: \"1000px\" }}>\r\n  //             <div className=\"itemGallery mt-a\">\r\n  //               <div className=\"gridContent items\">\r\n  //                 {paintingByColor.length > 0 &&\r\n  //                   paintingByColor.slice(0, 6).map((match, index) => (\r\n\r\n  //                     <div className=\"item\" style={{ width: \"220px\", height: \"220px\" }}>\r\n  //                       <div className=\"base\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${match.artistId}/${match.urlImage})` }}>\r\n  //                         {/* <button id=\"itemCommentState\" className=\"comment yes\" type=\"button\" value=\"notComment\"></button> */}\r\n  //                         <Fav user={user} isLogged={isLogged} favPaint={match} />\r\n  //                         {/* <ListModal user={user} isLogged={isLogged} listPaint={match} /> */}\r\n  //                       </div>\r\n  //                       <div className=\"hidden\">\r\n  //                         <div className=\"revealShadow\"></div>\r\n  //                         <h3 className=\"itemArtist\">{match.artisteName}</h3>\r\n  //                         <h4 className=\"itemName\">{match.name}</h4>\r\n  //                         <div className=\"itemYear\">{match.year}</div>\r\n  //                         <ul className=\"hListGridItem\">\r\n  //                           <li>\r\n  //                             <Link className=\"GridviewItem\" to={`../../view/OpusPage.js/${match.id}`} state={match.id} >\r\n  //                               Voir\r\n  //                             </Link>\r\n  //                           </li>\r\n  //                           <li>\r\n  //                             <Link className=\"GridmakeMatch\" to={`../../view/MatchingPage.js/${match.id}`} state={match.id} >\r\n  //                               match\r\n  //                             </Link>\r\n  //                           </li>\r\n  //                         </ul>\r\n\r\n  //                       </div>\r\n\r\n  //                       {/*<!-- oeuvre - fin --> */}\r\n  //                     </div>\r\n  //                   ))}\r\n  //               </div>\r\n  //             </div>\r\n  //             {/* <!-- items row - fin --> */}\r\n  //           </div>\r\n  //         </div>\r\n  //       </div>\r\n  //       {/* <!-- carousel - fin --> */}\r\n\r\n  //     </section>\r\n  //     {/* <!-- SECTION CHOISISSEZ VOTRE THÉMATIQUE COULEUR - fin --> */}\r\n  //   </div>\r\n  // );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/HomePage/SearchColor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "SearchColor",
    "memberof": "src/component/HomePage/SearchColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/HomePage/SearchColor.js~SearchColor",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/HomePage/SearchColor.js",
    "importStyle": "SearchColor",
    "description": "This component display a color Picker and allow you to find paitings with the selected color",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "users/${user.id} : update user informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "paintingSearch/findByColor : get list of paintings by selected color"
      }
    ],
    "return": null
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "src/component/ListeAmateurPage/ DisplayInfoList.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport edit from \"../../webapp/img/icons/ico_pen_2.svg\";\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\n\r\n\r\n/**\r\n * This component display informations about this list\r\n * @param {object} user - user object from api\r\n * @param {number} paintID - id of the list\r\n * @emits - userLists/detailByListId?listId=${paintId} : get list informations\r\n * @emits - userLists/update : update list informations\r\n */\r\n\r\n\r\n\r\n\r\nexport default function DisplayInfoList({ paintId, user }) {\r\n\r\n    // const [listInfo, setListInfo] = useState([]);\r\n    // const [templistInfo, setTempListInfo] = useState([]);\r\n    // const [refreshKey, setRefreshKey] = useState(0);\r\n\r\n    // //get List info//\r\n    // useEffect(() => {\r\n    //     axios.get(URLDayl + `userLists/detailByListId?listId=${paintId}`).then((response) => {\r\n    //         setListInfo(response.data.userListDTO);\r\n    //         setTempListInfo(response.data.userListDTO)\r\n    //         console.log(response.data.userListDTO);\r\n    //     });\r\n    // }, [refreshKey]);\r\n\r\n    // // Call Jquery script\r\n    // useEffect(() => {\r\n    //     const loadFile = async () => {\r\n    //         const { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n\r\n    //         modal();\r\n    //     };\r\n    //     loadFile();\r\n    // }, []);\r\n\r\n    // //TODO\r\n    // const postListInfo = (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     axios.post(URLDayl + \"userLists/update\", { id: paintId, listName: templistInfo.listName, detail: templistInfo.detail },\r\n    //         { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n    //     )\r\n    //         .then((response) => {\r\n    //             setRefreshKey(oldKey => oldKey + 1);\r\n\r\n    //         });\r\n\r\n    // }\r\n\r\n\r\n    // return (\r\n    //     <div className=\"DisplayInfoList\">\r\n    //         {/* <!-- SECTION PRESENTATION DE LA LISTE - début --> */}\r\n    //         <div className=\"cont-sty-5\" style={{paddingBottom: \"0\"}}>\r\n    //             <section className=\"center-col\">\r\n    //                 <div className=\"cont-l-w mt-b mb-b center-col memberList\">\r\n    //                     <h1 className=\"mb-a\">{listInfo.listName}</h1>\r\n    //                     <p className=\"mb-a\">{listInfo.detail}</p>\r\n\r\n    //                     {/* <!-- Modal modification de la liste - début --> */}\r\n    //                     <div className=\"smart-modal\">\r\n    //                         <a className=\" smart-modal-open modifyList\" data-target=\"modifyList\" rel=\"nofollow\">\r\n    //                             <img src={edit} alt=\"Éditer mon profil\" />\r\n    //                         </a>\r\n\r\n    //                         <div id=\"modifyList\" className=\"smart-modal-content scrollAuto\">\r\n    //                             <h3>Modifier la liste</h3>\r\n    //                             <a className=\"smart-modal-close\"><img className=\"img-left\" src={close} alt=\"Trier\" /></a>\r\n    //                             <form className=\"modalForm\" onSubmit={postListInfo}>\r\n    //                                 <label for=\"listName\" className=\"mt-b\">Nom de la liste</label>\r\n    //                                 <input type=\"text\" id=\"listName\" size=\"35\" value={templistInfo?.listName} onChange={e => setTempListInfo({ ...templistInfo, listName: e.target.value })} required />\r\n    //                                 <label for=\"listDesc\">Description de la liste</label>\r\n    //                                 <textarea id=\"listDesc\" className=\"mb-b\" maxlength=\"255\" value={templistInfo?.detail} onChange={e => setTempListInfo({ ...templistInfo, detail: e.target.value })} />\r\n    //                                 <input type=\"submit\" className=\"submit mt-b smart-modal-close\" value=\"Enregistrer les modifications\" style={{ position: \"relative\", right: \"0\", top: \"0\" }} />\r\n    //                             </form>\r\n    //                         </div>\r\n\r\n    //                     </div>\r\n    //                     {/* <!-- Modal modification de la liste - fin --> */}\r\n\r\n    //                 </div>\r\n    //             </section>\r\n    //         </div>\r\n    //         {/* <!-- SECTION PRESENTATION DE LA LISTE - fin --> */}\r\n\r\n    //     </div>\r\n    // );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/ListeAmateurPage/ DisplayInfoList.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "DisplayInfoList",
    "memberof": "src/component/ListeAmateurPage/ DisplayInfoList.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/ListeAmateurPage/ DisplayInfoList.js~DisplayInfoList",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/ListeAmateurPage/ DisplayInfoList.js",
    "importStyle": "DisplayInfoList",
    "description": "This component display informations about this list",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintID",
        "description": "id of the list"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "userLists/detailByListId?listId=${paintId} : get list informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "userLists/update : update list informations"
      }
    ],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "src/component/ListeAmateurPage/DisplayList.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport artist from \"../../webapp/img/icons/ico_artists_2.svg\"\r\nimport filter from \"../../webapp/img/icons/ico_filters_3.svg\"\r\nimport { Link } from \"react-router-dom\"\r\nimport ListModal from \"../general/ListModal\";\r\nimport Fav from \"../general/Fav\";\r\n\r\n/**\r\n * This component display the list of paintings\r\n * @param {object} user - user object from api\r\n * @param {number} paintId - list id\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @emits - userLists/detailByListId?listId=${paintId} : get list of paintings\r\n */\r\n\r\nexport default function DisplayList({ paintId, user, isLogged }) {\r\n\r\n\r\n    // const [listDetail, setListDetail] = useState([]);\r\n    // const [listArtist, setListArtist] = useState([]);\r\n    // const [boolModalArtist, setBoolModalArtist] = useState(false);\r\n    // const [boolAllArtist, setBoolAllArtist] = useState(true);\r\n    // const [orderDate, setOrderDate] = useState(0);\r\n    // const [tempList, setTempList] = useState([]);\r\n\r\n    // // Call Jquery script\r\n    // useEffect(() => {\r\n    //     const loadFile = async () => {\r\n    //         const { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n    //         const { init } = await import(\"../../webapp/js/js_source/colorPicker\");\r\n    //         const { grid } = await import(\"../../webapp/js/gridActions.min.js\");\r\n    //         var curColor = \"rgba(255,0,0,1)\";\r\n\r\n    //         init(curColor);\r\n    //         modal();\r\n    //         grid();\r\n    //     };\r\n    //     loadFile();\r\n    // }, []);\r\n\r\n\r\n    // //get List info//\r\n    // useEffect(() => {\r\n    //     axios.get(URLDayl + `userLists/detailByListId?listId=${paintId}`).then((response) => {\r\n    //         const boolArray = response.data.listPaintings.map((el) => { return { ...el, boolVis: true } });\r\n\r\n    //         setListDetail(boolArray);\r\n    //         setTempList(boolArray)\r\n\r\n    //         let tempListArtist = response.data.listPaintings.filter((v, i) => {\r\n    //             return response.data.listPaintings.map((match) => match.artist_idtf_intern).indexOf(v.artist_idtf_intern) === i\r\n    //         })\r\n    //         tempListArtist = tempListArtist.map((el) => { return { ...el, boolList: true } });\r\n\r\n\r\n    //         setListArtist([...tempListArtist])\r\n    //     });\r\n    // }, []);\r\n    // console.log(listDetail)\r\n\r\n    // //Choisis les artistes à trier\r\n    // function setTriArtist(index) {\r\n\r\n    //     let tempList = [...listArtist];\r\n    //     let tempListDetail = [...listDetail];\r\n\r\n    //     if (tempList[index].boolList === true) {\r\n    //         tempList[index].boolList = false;\r\n    //         tempListDetail.map((list) => {\r\n    //             if (list.artist_idtf_intern === tempList[index].artist_idtf_intern) {\r\n    //                 list.boolVis = false\r\n    //             }\r\n    //         })\r\n    //     }\r\n    //     else {\r\n    //         tempList[index].boolList = true;\r\n    //         tempListDetail.map((list) => {\r\n    //             if (list.artist_idtf_intern === tempList[index].artist_idtf_intern) {\r\n    //                 list.boolVis = true\r\n    //             }\r\n    //         })\r\n    //     }\r\n    //     setListArtist([...tempList])\r\n    //     setListDetail([...tempListDetail])\r\n\r\n    //     testAllArtists();\r\n\r\n    // };\r\n    // //Test si tt les artistes sont selectionnés\r\n    // function testAllArtists() {\r\n    //     let count = 0;\r\n\r\n    //     listArtist.map((artist) => {\r\n    //         if (artist.boolList === true) {\r\n    //             count++;\r\n    //         }\r\n\r\n    //     })\r\n\r\n    //     if (count === listArtist.length) {\r\n\r\n    //         setBoolAllArtist(true)\r\n\r\n\r\n    //     }\r\n    //     else {\r\n\r\n\r\n    //         setBoolAllArtist(false)\r\n    //     }\r\n\r\n\r\n    // }\r\n    // //OnClick bouton \"Tous\"\r\n    // function allArtists() {\r\n\r\n    //     let tempList = [...listArtist];\r\n    //     let tempListDetail = [...listDetail];\r\n\r\n    //     if (boolAllArtist === true) {\r\n    //         for (let i = 0; i < tempList.length; i++)\r\n    //             tempList[i].boolList = false;\r\n    //         for (let i = 0; i < tempListDetail.length; i++)\r\n    //             tempListDetail[i].boolVis = false;\r\n    //         setBoolAllArtist(false)\r\n    //     }\r\n    //     else {\r\n    //         for (let i = 0; i < tempList.length; i++)\r\n    //             tempList[i].boolList = true;\r\n    //         for (let i = 0; i < tempListDetail.length; i++)\r\n    //             tempListDetail[i].boolVis = true;\r\n    //         setBoolAllArtist(true)\r\n    //     }\r\n    //     setListArtist([...tempList])\r\n    //     setListDetail([...tempListDetail])\r\n\r\n    // }\r\n\r\n    // //Ouvre la modale de tri artiste\r\n    // function openModalArtist() {\r\n\r\n    //     if (boolModalArtist === true) {\r\n    //         setBoolModalArtist(false)\r\n    //     }\r\n    //     else {\r\n    //         setBoolModalArtist(true)\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n    // //fonction de tri par date\r\n    // function handleOrderDate() {\r\n    //     let bufferOrder;\r\n    //     let bufferOrder2;\r\n    //     if (orderDate === 0) {\r\n    //         //tri ordre decroissant\r\n    //         setListDetail(listDetail.sort((a, b) => b.aw_year - a.aw_year));\r\n\r\n    //         setOrderDate(1);\r\n    //     }\r\n    //     else if (orderDate === 1) {\r\n    //         //on stock les oeuvres dont la date = 0 ou null\r\n    //         bufferOrder = listDetail.filter(function (paint) { return paint.aw_year === null || paint.aw_year === 0; })\r\n\r\n    //         //tri ordre croissant sans les 0 et null\r\n    //         bufferOrder2 = listDetail.filter(function (paint) { return paint.aw_year > 0; }).sort((a, b) => a.aw_year - b.aw_year);\r\n    //         console.log(bufferOrder2)\r\n    //         //on rajoute les oeuvres trié au tableau de 0\r\n    //         bufferOrder.unshift(...bufferOrder2)\r\n\r\n    //         setListDetail(bufferOrder)\r\n    //         setOrderDate(1);\r\n\r\n    //         setOrderDate(2);\r\n    //     }\r\n    //     else if (orderDate === 2) {\r\n    //         setListDetail(tempList);\r\n    //         setOrderDate(0);\r\n    //     }\r\n    // }\r\n\r\n    // return (\r\n    //     <div className=\"DisplayList\">\r\n\r\n    //         {/* <!-- ******************************************************\r\n    //     OEUVRES DANS CETTE LISTE - début\r\n    //     ****************************************************** --> */}\r\n    //         <section className=\"center-col\">\r\n\r\n    //             <div className=\"orderingBox\">\r\n    //                 {/* <!-- Bouton matching par année (+ ancien au + récent) - début --> */}\r\n    //                 <button className={orderDate === 0 ? \"orderByDate\" : orderDate === 1 ? \"orderByDateDown\" : \"orderByDateUp\"} onClick={handleOrderDate} style={{ backgroundColor: \"#F3F3F3\" }}>{orderDate === 0 ?\"Tri par date\" : orderDate === 1 ? \"Tri croissant\" : \"Tri décroissant\"}</button>\r\n    //                 {/* <!-- Bouton matching par année (+ ancien au + récent) - fin --> */}\r\n\r\n    //                 {/* <!-- Bouton matching par artistes - début --> */}\r\n    //                 <button className=\"orderByArtist\" onClick={openModalArtist} style={{ backgroundColor: \"#F3F3F3\" }}>Choisir vos artiste(s) </button>\r\n    //                 {boolModalArtist === true &&\r\n    //                     <div>\r\n    //                         <div className=\"smart-modal-overlay\" style={{ display: \"block\" }}></div>\r\n    //                         <div id=\"1777\" className=\"smart-modal-content scrollAuto\" style={{ display: \"block\", transform: \"translate(-50%,-50%)\", top: \"50%\", left: \"50%\" }}>\r\n\r\n    //                             <h3>Artistes</h3>\r\n    //                             <a className=\"smart-modal-close\" onClick={openModalArtist}><img className=\"img-left\" src={close} alt=\"Trier\" /></a>\r\n\r\n    //                             {/* <!-- checkbox artiste matché - début --> */}\r\n    //                             <div className=\"checkLister all\">\r\n    //                                 <button className={boolAllArtist === true ? \"checkbox checked\" : \"checkbox \"} onClick={allArtists}></button>\r\n    //                                 <span>Tous</span>\r\n    //                             </div>\r\n    //                             {/* <!-- checkbox artiste matché - fin -->\r\n\t// \t\t\t\t\t\t\t\t\t\t<!-- checkbox artiste matché - début --> */}\r\n    //                             {listArtist.length > 0 &&\r\n    //                                 listArtist.map((artist, index) => {\r\n    //                                     return (\r\n    //                                         <div className=\"checkLister\" >\r\n\r\n    //                                             <div className={artist.boolList === true ? \"checkbox checked\" : \"checkbox\"} onClick={() => setTriArtist(index)}></div>\r\n    //                                             <span>{artist.artist_name_tot}</span>\r\n    //                                         </div>\r\n    //                                     )\r\n    //                                 })}\r\n\r\n    //                             {/* <!-- checkbox artiste matché - fin -->*/}\r\n\r\n    //                         </div>\r\n    //                     </div>\r\n    //                 }\r\n\r\n    //                 {/* <!-- Bouton matching par artistes - fin --> */}\r\n    //             </div>\r\n\r\n    //             {/* <!-- GRILLE OEUVRES DE CETTE LISTE - début --> */}\r\n\r\n\r\n    //             <div className=\"cont-l-w\">\r\n    //                 <div className=\"itemGallery mt-a\">\r\n    //                     <div className=\"gridContent items\" >\r\n    //                         {/* <!-- oeuvre - début --> */}\r\n    //                         {listDetail.length > 0 &&\r\n    //                             listDetail.filter(filter => filter.boolVis === true).map((paint, index) => {\r\n\r\n    //                                 // if (listArtist[index] && listArtist[index].boolList === true)\r\n    //                                 return (\r\n    //                                     <div className=\"item\" >\r\n    //                                         <div className=\"base\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${paint.artist_idtf_intern}/${paint.generatedId})` }}>\r\n    //                                             <button id=\"itemCommentState\" className=\"comment yes\" type=\"button\" value=\"notComment\"></button>\r\n    //                                             <Fav user={user} isLogged={isLogged} favPaint={paint} />\r\n    //                                             <ListModal user={user} isLogged={isLogged} listPaint={paint} />\r\n    //                                         </div>\r\n    //                                         <div className=\"hidden\">\r\n    //                                             <div className=\"revealShadow\"></div>\r\n    //                                             <h3 className=\"itemArtist\">{paint.artist_name_tot}</h3>\r\n    //                                             <h4 className=\"itemName\">{paint.aw_title_Origin}</h4>\r\n    //                                             <div className=\"itemYear\">{paint.aw_year}</div>\r\n    //                                             <ul className=\"hListGridItem\">\r\n    //                                                 <li>\r\n    //                                                     <div className=\"smart-modal\">\r\n    //                                                         <Link className=\"GridviewItem\" to={`../../view/OpusPage.js/${paint.id}`} state={paint.id} >\r\n    //                                                             Voir\r\n    //                                                         </Link>\r\n    //                                                     </div>\r\n    //                                                 </li>\r\n    //                                                 <li>\r\n    //                                                     <Link className=\"GridmakeMatch\" to={`../../view/MatchingPage.js/${paint.id}`} state={paint.id} >\r\n    //                                                         match\r\n    //                                                     </Link>\r\n    //                                                 </li>\r\n    //                                             </ul>\r\n\r\n    //                                         </div>\r\n    //                                         <div className=\"name\">\r\n    //                                             <a>{paint.artist_name_tot}</a>\r\n    //                                         </div>\r\n\r\n\r\n\r\n    //                                     </div>)\r\n    //                             })}\r\n    //                         {/* <!-- oeuvre - fin --> */}\r\n    //                     </div>\r\n    //                 </div>\r\n    //             </div>\r\n    //             {/* <!--                <div className=\"cont-l-w center-tex\"  wicket:id=\"moreImageZone\">-->\r\n    //         <!--                    <a className=\"viewMore\" wicket:id=\"loadMoreImages\">Voir plus</a>-->\r\n    //         <!--                </div>--> */}\r\n    //         </section>\r\n    //         {/* <!--                <div className=\"cont-l-w center-tex\"  wicket:id=\"moreImageZone\">-->\r\n    //     <!--                    <a className=\"viewMore\" wicket:id=\"loadMoreImages\">Voir plus</a>-->\r\n    //     <!--                </div>-->\r\n    //     <!-- GRILLE OEUVRES DE CETTE LISTE - fin --> */}\r\n\r\n\r\n\r\n    //     </div>\r\n    // );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/ListeAmateurPage/DisplayList.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "DisplayList",
    "memberof": "src/component/ListeAmateurPage/DisplayList.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/ListeAmateurPage/DisplayList.js~DisplayList",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/ListeAmateurPage/DisplayList.js",
    "importStyle": "DisplayList",
    "description": "This component display the list of paintings",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "list id"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "userLists/detailByListId?listId=${paintId} : get list of paintings"
      }
    ],
    "return": null
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/component/MatchingColor/ColorChooser.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport ResultMatchingColor from \"./ResultMatchingColor\";\r\nimport { ColorPicker, useColor } from \"react-color-palette\";\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport { EmailShareButton, FacebookShareButton, PinterestShareButton, TwitterShareButton, } from \"react-share\";\r\nimport { FacebookIcon, TwitterIcon, PinterestIcon, EmailIcon } from \"react-share\";\r\n\r\n/**\r\n * This component display a color Picker\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @param {string} color - contain the hex code of the chosed color\r\n *  @param {string} setColor - color setter\r\n *  @emits - paintingSearch/findByColor : get list of paintings by selected color\r\n */\r\n\r\nexport default function ColorChooser({ color, setColor, user, setUser, isLogged }) {\r\n\r\n\r\n\tconst [painting, setPainting] = useState([]);\r\n\tconst [listMatch, setListMatch] = useState([]);\r\n\tconst [shareUrlFb, setShareUrlFb] = useState(window.location.href);\r\n\t// const [color, setColor] = useState([]);\r\n\r\n\r\n\t// // Call Jquery script\r\n\t// useEffect(() => {\r\n\t// \tconst loadFile = async () => {\r\n\t// \t\tconst { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n\r\n\t// \t\tmodal();\r\n\t// \t};\r\n\t// \tloadFile();\r\n\t// }, []);\r\n\r\n\r\n\tconst handleChange = color => setColor(color);\r\n\r\n\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\r\n\t\taxios.post(\r\n\t\t\tURLDayl + `paintingSearch/findByColor`, { colorCode: color.hex, sortOrder: \"ASC\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n\t\t)\r\n\t\t\t.then((response) => {\r\n\r\n\t\t\t\tsetListMatch(response.data);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\taxios.post(\r\n\t\t\tURLDayl + `paintingSearch/findByColor`, { colorCode: color.hex, sortOrder: \"ASC\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n\t\t)\r\n\t\t\t.then((response) => {\r\n\r\n\t\t\t\tsetListMatch(response.data);\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"ColorChooser\">\r\n\t\t\t{/* <!-- ******************************************************\r\n\t\t\tSECTION MATCHING COULEUR - début\r\n\t\t\t****************************************************** --> */}\r\n\t\t\t<section className=\"center-col cont-sty-2\">\r\n\t\t\t\t<div className=\"cont-l-w\">\r\n\t\t\t\t\t<div className=\"matchingColorTop\" style={{ background: `${color.hex && color.hex}` }}>\r\n\t\t\t\t\t\t<p><span>HEX : {color.hex && color.hex}</span>|<span>RGB : {color.rgb && color.rgb.r}, {color.rgb && color.rgb.g}, {color.rgb && color.rgb.b}</span></p>\r\n\r\n\t\t\t\t\t\t{/* <!-- Modal \"choisir une couleur\" - début --> */}\r\n\t\t\t\t\t\t<div className=\"smart-modal\" >\r\n\t\t\t\t\t\t\t<a data-target=\"modalColorMatch\" className=\"smart-modal-open-2 selectOtherColor mt-a\">Choisir une autre couleur</a>\r\n\r\n\t\t\t\t\t\t\t<div id=\"modalColorMatch\" className=\"smart-modal-content\"style={{width: \"295px\"}}>\r\n\t\t\t\t\t\t\t\t<h3>Choisir une couleur</h3>\r\n\t\t\t\t\t\t\t\t<a className=\"smart-modal-close\"><img className=\"img-left\" src={close} alt=\"Trier\" /></a>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"color-picker-box\">\r\n\r\n\t\t\t\t\t\t\t\t\t<ColorPicker width={250} height={228} color={color} onChange={setColor} hideHSV hideRGB />\r\n\t\t\t\t\t\t\t\t\t<div style={{ border: '2px solid #0000001a', borderRadius: '50%', width: \"50px\", height: \"50px\", position: \"absolute\", bottom: \"92px\", left: \"25px\", background: color.hex }}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"colorPickerSub modalClose\" value=\"Choisir cette couleur\" >Choisir cette couleur</button>\r\n\t\t\t\t\t\t\t\t\t</form>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* <!-- Modal \"choisir une couleur\" - fin --> */}\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* <!-- Enregistrer & partager le matching - début --> */}\r\n\t\t\t\t\t<ul className=\"hListC mt-b\">\r\n\r\n\t\t\t\t\t\t<li style={{marginRight: \"20px\"}}>\r\n\t\t\t\t\t\t\t{/* <!-- Modal \"partager cette oeuvre\" - début --> */}\r\n\t\t\t\t\t\t\t<FacebookShareButton url={shareUrlFb} quote={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n                                    <FacebookIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n                                </FacebookShareButton>\r\n                                <TwitterShareButton url={shareUrlFb} title={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n                                    <TwitterIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n                                </TwitterShareButton>\r\n                                <PinterestShareButton url={shareUrlFb} description={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n                                    <PinterestIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n                                </PinterestShareButton>\r\n                                <EmailShareButton url={shareUrlFb} body={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n                                    <EmailIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n                                </EmailShareButton>\r\n                                {/* <!-- Modal \"partager cette oeuvre\" - fin --> */}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button className=\"matchSave\" type=\"button\">Enregistrer</button>\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t{/* <!-- Enregistrer & partager le matching - fin --> */}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t{/* <!-- SECTION MATCHING COULEUR - fin --> */}\r\n\r\n\t\t\t\r\n\r\n\r\n\t\t</div>\r\n\t);\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/MatchingColor/ColorChooser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "ColorChooser",
    "memberof": "src/component/MatchingColor/ColorChooser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/MatchingColor/ColorChooser.js~ColorChooser",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/MatchingColor/ColorChooser.js",
    "importStyle": "ColorChooser",
    "description": "This component display a color Picker",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "contain the hex code of the chosed color"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setColor",
        "description": "color setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingSearch/findByColor : get list of paintings by selected color"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "src/component/MatchingColor/ResultMatchingColor.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport filter from \"../../webapp/img/icons/ico_filters_3.svg\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport artist from \"../../webapp/img/icons/ico_artists_2.svg\"\r\nimport { Link } from \"react-router-dom\";\r\nimport ListModal from \"../general/ListModal\";\r\nimport Fav from \"../general/Fav\";\r\n\r\n/**\r\n * This component display the matched painting (by color)\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {boolean} isLogged - test if the user is logged\r\n * @param {string} color - contain the hex code of the chosed color\r\n *  @emits - paintingSearch/findByColor : get list of paintings by selected color\r\n */\r\n\r\nexport default function ResultMatchingColor({ color, setUser, user, isLogged }) {\r\n\r\n\r\n\t// const [listMatch, setListMatch] = useState([]);\r\n\t// const [refreshKey, setRefreshKey] = useState(0);\r\n\r\n\t\r\n\t// useEffect(() => {\r\n\t// \tif(color.hex !== \"#121212\") //à changer, comportement très bizzare\r\n\t// \taxios\r\n\t// \t\t.post(\r\n\t// \t\t\tURLDayl + `paintingSearch/findByColor`, { colorCode: color.hex, sortOrder: \"ASC\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n\t// \t\t)\r\n\t// \t\t.then((response) => {\r\n\r\n\t// \t\t\tsetListMatch(response.data);\r\n\t// \t\t\tconst boolArray = response.data.map((el) => { return { ...el, bool: false, boolList: false } });\r\n\r\n\r\n\t// \t\t\tsetListMatch(boolArray)\r\n\t// \t\t});\r\n\t// }, [color]);\r\n\r\n\r\n\t// //update user\r\n\t// useEffect(() => {\r\n\t// \tif (user)\r\n\t// \t\taxios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n\t// \t\t).then((response) => { setUser(response.data) });\r\n\r\n\r\n\t// }, [refreshKey]);\r\n\r\n\t// // Call Jquery script\r\n\t// useEffect(() => {\r\n\t// \tconst loadFile = async () => {\r\n\t// \t\tconst { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n\r\n\t// \t\tconst { grid } = await import(\"../../webapp/js/gridActions.min.js\");\r\n\r\n\t// \t\tmodal();\r\n\t// \t\tgrid();\r\n\t// \t};\r\n\t// \tloadFile();\r\n\t// }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// return (\r\n\t// \t<div className=\"ResultMatchingColor\">\r\n\t// \t\t<section className=\"center-col\">\r\n\r\n\t// \t\t\t<div className=\"cont-l-w rowSpaceBetween\" style={{ marginTop: \"40px\", alignItems: \"flex-start\" }}>\r\n\t// \t\t\t\t<div>\r\n\t// \t\t\t\t</div>\r\n\r\n\t// \t\t\t\t{/* <!-- Choix du type de grille - début --> */}\r\n\t// \t\t\t\t<ul className=\"gridColsType\">\r\n\t// \t\t\t\t\t<li><button type=\"button\" className=\"go2Cols\">2</button></li>\r\n\t// \t\t\t\t\t<li><button type=\"button\" className=\"go4Cols\">4</button></li>\r\n\t// \t\t\t\t\t<li><button type=\"button\" className=\"go6Cols\">6</button></li>\r\n\t// \t\t\t\t\t<li>colonnes par ligne</li>\r\n\t// \t\t\t\t</ul>\r\n\t// \t\t\t\t{/* <!-- Choix du type de grille - début --> */}\r\n\r\n\t// \t\t\t\t<div>\r\n\t// \t\t\t\t\t<ul>\r\n\t// \t\t\t\t\t\t<li>\r\n\r\n\t// \t\t\t\t\t\t\t{/* <!-- Modal filtrer matching - début --> */}\r\n\t// \t\t\t\t\t\t\t{/* <div className=\"smart-modal\">\r\n\t// \t\t\t\t\t\t\t\t<a data-target=\"modalFiltrer\" className=\"smart-modal-open\"><img className=\"img-left\" src={filter} alt=\"Trier\" /><span>Filtrer</span></a>\r\n\r\n\t// \t\t\t\t\t\t\t\t<div id=\"modalFiltrer\" className=\"smart-modal-content scrollAuto\">\r\n\t// \t\t\t\t\t\t\t\t\t<h3>Filtres disponibles</h3>\r\n\t// \t\t\t\t\t\t\t\t\t<a className=\"smart-modal-close\"><img className=\"img-left\" src={close} alt=\"Trier\" /></a>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t// \t\t\t\t\t\t\t\t\t<div>\r\n\t// \t\t\t\t\t\t\t\t\t\t<form id=\"fineMatching\" className=\"fineMatching\" method=\"post\" action=\"#\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<select id=\"licence\" name=\"licence\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Licence</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Domaine public\">Domaine public</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"saab\">Oeuvres protégées</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t// \t\t\t\t\t\t\t\t\t\t</form>\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t// \t\t\t\t\t\t\t\t\t<div>\r\n\t// \t\t\t\t\t\t\t\t\t\t<form id=\"fineMatching\" className=\"fineMatching\" method=\"post\" action=\"#\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<select id=\"style\" name=\"style\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Style</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Pointillism\">Pointillism</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Renaissance\">Renaissance</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Symbolism\">Symbolism</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Assemblage\">Assemblage</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t// \t\t\t\t\t\t\t\t\t\t</form>\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t// \t\t\t\t\t\t\t\t\t<div>\r\n\t// \t\t\t\t\t\t\t\t\t\t<form id=\"fineMatching\" className=\"fineMatching mb-a\" method=\"post\" action=\"#\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<select id=\"genre\" name=\"genre\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Genre</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Transport and industry\">Transport and industry</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Fashion and costume\">Fashion and costume</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Natural world\">Natural world</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Science and knowledge\">Science and knowledge</option>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t// \t\t\t\t\t\t\t\t\t\t</form>\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t// \t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t</div> */}\r\n\t// \t\t\t\t\t\t\t{/* <!-- Modal filtrer matching - fin --> */}\r\n\r\n\t// \t\t\t\t\t\t</li>\r\n\r\n\t// \t\t\t\t\t</ul>\r\n\t// \t\t\t\t</div>\r\n\t// \t\t\t</div>\r\n\r\n\t// \t\t\t{/* <!-- Modal artistes matchés & filtrer le matching - début --> */}\r\n\t// \t\t\t<div className=\"cont-l-w\">\r\n\t// \t\t\t\t<div className=\"itemGallery mt-a\">\r\n\t// \t\t\t\t\t<div className=\"gridContent items\">\r\n\r\n\r\n\r\n\r\n\t// \t\t\t\t\t\t{listMatch.length > 0 &&\r\n\t// \t\t\t\t\t\t\tlistMatch.map((listPaint, index) => {\r\n\t// \t\t\t\t\t\t\t\treturn (\r\n\r\n\t// \t\t\t\t\t\t\t\t\t<div className=\"item\">\r\n\t// \t\t\t\t\t\t\t\t\t\t<div className=\"base\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${listPaint.artistId}/${listPaint.urlImage})` }}>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<button id=\"itemCommentState\" className=\"comment yes\" type=\"button\" value=\"notComment\"></button>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<Fav user={user} isLogged={isLogged} favPaint={listPaint} />\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<ListModal user={user} isLogged={isLogged} listPaint={listPaint} />\r\n\t// \t\t\t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t\t\t\t<div className=\"hidden\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<div className=\"revealShadow\"></div>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<h3 className=\"itemArtist\">{listPaint.artisteName}</h3>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<h4 className=\"itemName\">{listPaint.name}</h4>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<div className=\"itemYear\">{listPaint.year}</div>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<ul className=\"hListGridItem\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"smart-modal\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"GridviewItem\" to={`../../view/OpusPage.js/${listPaint.id}`} state={listPaint.id} >\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tVoir\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"GridmakeMatch\" to=\"../view/MatchingPage.js\" state={listPaint.id} >\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\tmatch\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\r\n\t// \t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t// \t\t\t\t\t\t\t\t\t\t{/* <!-- oeuvre - fin --> */}\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t\t)\r\n\t// \t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\r\n\t// \t\t\t\t\t</div>\r\n\t// \t\t\t\t</div>\r\n\t// \t\t\t\t{/* <!-- items row - fin --> */}\r\n\t// \t\t\t</div>\r\n\r\n\t// \t\t\t<div className=\"cont-l-w center-tex\">\r\n\t// \t\t\t\t<a className=\"viewMore\">Voir plus</a>\r\n\t// \t\t\t</div>\r\n\r\n\t// \t\t</section>\r\n\r\n\r\n\r\n\t// \t</div>\r\n\t// );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/MatchingColor/ResultMatchingColor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "ResultMatchingColor",
    "memberof": "src/component/MatchingColor/ResultMatchingColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/MatchingColor/ResultMatchingColor.js~ResultMatchingColor",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/MatchingColor/ResultMatchingColor.js",
    "importStyle": "ResultMatchingColor",
    "description": "This component display the matched painting (by color)",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "contain the hex code of the chosed color"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingSearch/findByColor : get list of paintings by selected color"
      }
    ],
    "return": null
  },
  {
    "__docId__": 130,
    "kind": "file",
    "name": "src/component/MatchingResult/PaintingToMatch.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState, useLayoutEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport PrismaZoom from 'react-prismazoom'\r\nimport { Link } from \"react-router-dom\";\r\nimport SaveMatch from \"../general/SaveMatch\";\r\nimport { toast } from \"react-toastify\"\r\nimport { EmailShareButton, FacebookShareButton, PinterestShareButton, TwitterShareButton, } from \"react-share\";\r\nimport { FacebookIcon, TwitterIcon, PinterestIcon, EmailIcon } from \"react-share\";\r\nimport ReactLoading from 'react-loading';\r\n\r\n/**\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @param {string} matchingType - type of matcing used\r\n *  @param {string} setMatchingType - matchingType setter\r\n * @emits - paintingEntity/${paintId} : get painting informations\r\n * @emits - paintingEntity/numberFavorite/${paintId} : get number of likes\r\n */\r\n\r\n\r\nexport default function PaintingToMatch({ user, setUser, paintId, isLogged, matchingType, setMatchingType }) {\r\n\r\n\r\n    // const [painting, setPainting] = useState([]);\r\n    // const [zoomBool, setZoomBool] = useState(false);\r\n    // const [boolFav, setBoolFav] = useState(false);\r\n    // const [testSelect, setTestSelect] = useState(false);\r\n    // const [shareUrlFb, setShareUrlFb] = useState(window.location.href);\r\n    // const [nLike, setNLike] = useState(0)\r\n\t// const [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n\r\n\r\n    // //afficher image zoom//\r\n    // const handleZoomTrue = () => {\r\n    //     setZoomBool(false)\r\n    // }\r\n    // const handleZoomFalse = () => {\r\n    //     setZoomBool(true)\r\n    // }\r\n\r\n\r\n\r\n\r\n    // //get Painting info//\r\n    // useEffect(() => {\r\n    //     axios.get(URLDayl + `paintingEntity/${paintId}`).then((response) => {\r\n    //         setIsLoading(true);\r\n\r\n    //         setPainting(response.data);\r\n    //         console.log(response.data);\r\n\r\n    //         //Get number like\r\n    //         axios.get(URLDayl + `paintingEntity/numberFavorite/${paintId}`).then((response2) => {\r\n    //             setNLike(response2.data);\r\n\r\n    //         });\r\n    //     });\r\n\r\n    //     //Test painting liké par l'utilisateur\r\n    //     if (user)\r\n    //         user.paintingLiked.map((like) => {\r\n    //             paintId === like && setBoolFav(true)\r\n    //         })\r\n    // }, [paintId]);\r\n\r\n    // function updateLike() {\r\n    //     //update Nombres de like//\r\n    //     axios.get(URLDayl + `paintingEntity/numberFavorite/${paintId}`).then((response) => {\r\n    //         setNLike(response.data);\r\n    //         console.log(response.data)\r\n\r\n    //     });\r\n    // }\r\n\r\n    // // Call Jquery script\r\n    // useEffect(() => {\r\n    //     const loadFile = async () => {\r\n    //         const { select } = await import(\"../../webapp/js/customFormElements.min\");\r\n\r\n    //         select();\r\n    //         setTestSelect(true);\r\n\r\n    //     };\r\n    //     loadFile();\r\n\r\n    // }, []);\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n    // return (\r\n    //     <div className=\"PaintingToMatch\">\r\n    //         {/* <!-- ******************************************************\r\n\t// \t\tSECTION MATCHING OEUVRE UPLOADÉE - début\r\n\t// \t\t****************************************************** --> */}\r\n    //         <section className=\"center-col cont-sty-1\">\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\t\tBREADCRUMBS - début\r\n\t// \t\t\t****************************************************** --> */}\r\n    //             <ol className=\"topBc\" style={{marginTop: \"20px\"}}>\r\n    //                 <li><Link to=\"../../\">Accueil</Link></li>\r\n    //                 {/* <li className=\"#\"><a>Artistes</a></li> */}\r\n    //                 <li className=\"#\"><Link to={`../../view/ArtistDetailPage.js/${painting.artist_idtf_intern}`} state={painting.artist_idtf_intern} >{painting.artist_name_tot}</Link></li>\r\n    //                 {/* <li className=\"#\"><a >Oeuvres</a></li> */}\r\n    //                 <li className=\"#\">{painting.aw_title_Origin}</li>\r\n    //             </ol>\r\n    //             {/* <!-- Breadcrumbs - fin --> */}\r\n\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\t\tDETAILS DE L'OEUVRE - début\r\n\t// \t\t\t****************************************************** --> */}\r\n    //             <div className=\"oeuvreTopMatching\">\r\n\r\n\r\n    //                 <div className=\"itemImage\">\r\n\r\n    //                     {/* <!-- Lancer un matching avec cette oeuvre - début --> */}\r\n    //                     <form id=\"matchThisItem\" className=\"matchSubAlt\" method=\"post\" action=\"\">\r\n    //                     {isLoading === true && <div style={{marginBottom: \"20px\"}}><ReactLoading color={\"#E9573F\"} type={\"spin\"} height={\"40px\"} width={\"40px\"}  /></div>}\r\n\r\n    //                         <Link to={`../../view/OpusPage.js/${paintId}`} state={paintId} > <input type=\"submit\" value=\"Voir\" /></Link>\r\n    //                     </form>\r\n    //                     {/* <!-- Lancer un matching avec cette oeuvre - fin --> */}\r\n\r\n    //                     {/* <!-- Lightbox image avec fonction agrandir/réduire - début --> */}\r\n\r\n    //                     <a className=\"zoomOpen\" onClick={handleZoomFalse} data-modal=\"imgBox\"><img  onLoad={e => setIsLoading(false)} className=\"show\" src={URLDayl + `images/content/${painting.artist_idtf_intern}/${painting.generatedId}`} alt=\"Nom de l'oeuvre\" /></a>\r\n    //                     {/*<!-- Trigger Modal. --> */}\r\n    //                     {zoomBool === true &&\r\n    //                         <div className=\"zoomBox\" id=\"imgBox\" style={{ overflowY: \"hidden\" }}>\r\n    //                             <button className=\"zoomCloseBtn\" onClick={handleZoomTrue} type=\"button\">x</button>\r\n\r\n    //                             <div className=\"modal-sandbox\"></div>\r\n    //                             <PrismaZoom allowPan={true} allowZoom={true}>\r\n    //                                 <img id=\"resizeMe\" style={{ height: \"auto \", maxWidth: \"70% \" }} src={URLDayl + `images/content/${painting.artist_idtf_intern}/${painting.generatedId}`} draggable=\"true\" alt=\"Nom de l'oeuvre\" />\r\n    //                             </PrismaZoom>\r\n    //                         </div>\r\n\r\n    //                     }\r\n\r\n\r\n    //                     {/* <!-- Lightbox image avec fonction agrandir/réduire - fin --> */}\r\n\r\n    //                 </div>\r\n\r\n\r\n    //                 <div className=\"itemDetails\">\r\n    //                     <h1>{painting.aw_title_Origin}, {painting.aw_year}</h1>\r\n    //                     <h2><Link to={`../../view/ArtistDetailPage.js/${painting.artist_idtf_intern}`} state={painting.artist_idtf_intern} href=\"artiste.html\">{painting.artist_name_tot}</Link></h2>\r\n\r\n    //                     <ul className=\"hList mt-b\">\r\n\r\n    //                         {/* <!-- BOUTONS LIKES - début --> */}\r\n    //                         {/* <li>\r\n\r\n    //                             <input type=\"submit\" id=\"submit\" className={boolFav ? \"itemLikeItYes\" : \"itemLikeIt\"} onClick={() => handleClick()} value={nLike} />\r\n\r\n    //                         </li> */}\r\n    //                         {/* <!-- BOUTONS LIKES - début --> */}\r\n\r\n\r\n\r\n    //                         <li>\r\n    //                             <SaveMatch user={user} isLogged={isLogged} matchPaint={painting} />\r\n    //                         </li>\r\n    //                         <li>\r\n    //                             {/* <!-- Modal \"partager cette oeuvre\" - début --> */}\r\n    //                             <FacebookShareButton url={shareUrlFb} quote={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n    //                                 <FacebookIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n    //                             </FacebookShareButton>\r\n    //                             <TwitterShareButton url={shareUrlFb} title={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n    //                                 <TwitterIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n    //                             </TwitterShareButton>\r\n    //                             <PinterestShareButton url={shareUrlFb} description={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n    //                                 <PinterestIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n    //                             </PinterestShareButton>\r\n    //                             <EmailShareButton url={shareUrlFb} body={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n    //                                 <EmailIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n    //                             </EmailShareButton>\r\n    //                             {/* <!-- Modal \"partager cette oeuvre\" - fin --> */}\r\n    //                         </li>\r\n\r\n    //                     </ul>\r\n    //                     <div class=\"matchingTypes\">\r\n    //                         {/* <!-- Dropdown type de matching - début --> */}\r\n    //                         <div data-tooltip=\"Mixez les filtres pour obtenir un matching encore plus précis!\">\r\n    //                             <select className=\"searchFilterUnderlined\" id=\"type\" name=\"type\" value={matchingType?.value} onChange={(e) => setMatchingType({ ...matchingType, value: e.target.value, text: e.target.options[e.target.selectedIndex].text })} >\r\n    //                                 <option value=\"STYLE\" selected>Style</option>\r\n    //                                 <option value=\"COLOR\">Couleur</option>\r\n    //                                 <option value=\"CONTENT\">Forme</option>\r\n    //                                 <option value=\"COLOR_AND_STYLE\">Style + Couleur</option>\r\n    //                                 <option value=\"CONTENT_AND_STYLE\">Style + Forme</option>\r\n    //                                 <option value=\"COLOR_AND_CONTENT\">Forme + Couleur</option>\r\n    //                             </select>\r\n    //                         </div>\r\n    //                         {/* <!-- Dropdown type de matching - fin --> */}\r\n    //                         {/* <!-- Choix du type de grille - début --> */}\r\n    //                         <ul class=\"gridColsTypeMatch\">\r\n    //                             <li><button type=\"button\" class=\"go2Cols\">2</button></li>\r\n    //                             <li><button type=\"button\" class=\"go4Cols\">4</button></li>\r\n    //                             <li><button type=\"button\" class=\"go6Cols\">6</button></li>\r\n    //                             <li>éléments par ligne</li>\r\n    //                         </ul>\r\n    //                         {/* <!-- Choix du type de grille - début --> */}\r\n    //                     </div>\r\n\r\n    //                 </div>\r\n\r\n    //                 <div className=\"oeuvreTop\"></div >\r\n    //             </div>\r\n    //             {/* <!-- Détails de l'oeuvre - fin --> */}\r\n\r\n\r\n    //         </section>\r\n    //         {/* <!-- SECTION MATCHING OEUVRE UPLOADÉE - fin --> */}\r\n\r\n    //     </div>);\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/MatchingResult/PaintingToMatch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "PaintingToMatch",
    "memberof": "src/component/MatchingResult/PaintingToMatch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/MatchingResult/PaintingToMatch.js~PaintingToMatch",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/MatchingResult/PaintingToMatch.js",
    "importStyle": "PaintingToMatch",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "matchingType",
        "description": "type of matcing used"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setMatchingType",
        "description": "matchingType setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/${paintId} : get painting informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/numberFavorite/${paintId} : get number of likes"
      }
    ],
    "return": null
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/component/MatchingResult/ResultMatch.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport artist from \"../../webapp/img/icons/ico_artists_2.svg\"\r\nimport filter from \"../../webapp/img/icons/ico_filters_3.svg\"\r\nimport { Link } from \"react-router-dom\";\r\nimport ListModal from \"../general/ListModal\";\r\nimport Fav from \"../general/Fav\";\r\nimport { event } from \"jquery\";\r\n\r\n/**\r\n * This component display the matched paintings\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @param {string} matchingType - type of matcing used\r\n *  @param {string} setMatchingType - matchingType setter\r\n * @emits - paintingEntity/${paintId} : get painting informations\r\n * @emits - matchingSearch/findMatchForSource/${matchingType.value}/${response.data.aw_idtf_intern}/true : get list of match\r\n\r\n */\r\n\r\nexport default function ResultMatch({ user, paintId, isLogged, matchingType, setMatchingType }) {\r\n\r\n\r\n\t// const [painting, setPainting] = useState([]);\r\n\t// const [matchList, setMatchList] = useState([]);\r\n\t// const [listArtist, setListArtist] = useState([]);\r\n\t// const [boolModalArtist, setBoolModalArtist] = useState(false);\r\n\t// const [boolAllArtist, setBoolAllArtist] = useState(true);\r\n\t// const [orderDate, setOrderDate] = useState(0);\r\n\t// const [tempList, setTempList] = useState([]);\r\n\r\n\t// //get Painting Match//\r\n\t// useEffect(() => {\r\n\r\n\t// \taxios.get(URLDayl + `paintingEntity/${paintId}`).then((response) => {\r\n\t// \t\tsetPainting(response.data);\r\n\t// \t\taxios.get(URLDayl + `matchingSearch/findMatchForSource/${matchingType.value}/${response.data.aw_idtf_intern}/true`).then((response2) => {\r\n\r\n\t// \t\t\tconst boolArray = Object.values(response2.data).map((el) => { return { ...el, boolVis: true } });\r\n\t// \t\t\tsetMatchList(boolArray);\r\n\t// \t\t\t//liste temporaire pour le tri par date\r\n\t// \t\t\tsetTempList(boolArray);\r\n\r\n\t// \t\t\t//on recupère tous les artistes\r\n\t// \t\t\tlet tempListArtist = boolArray.filter((v, i) => {\r\n\t// \t\t\t\treturn boolArray.map((match) => match.artistId).indexOf(v.artistId) == i\r\n\t// \t\t\t})\r\n\t// \t\t\ttempListArtist = tempListArtist.map((el) => { return { ...el, boolList: true } });\r\n\r\n\r\n\t// \t\t\tsetListArtist([...tempListArtist])\r\n\t// \t\t});\r\n\r\n\t// \t});\r\n\r\n\t// }, [paintId, matchingType]);\r\n\r\n\r\n\r\n\r\n\t// //Choisis les artistes à trier\r\n\t// function setTriArtist(index) {\r\n\r\n\t// \tlet tempList = [...listArtist];\r\n\t// \tlet tempMatch = [...matchList];\r\n\r\n\t// \tif (tempList[index].boolList === true) {\r\n\t// \t\ttempList[index].boolList = false;\r\n\t// \t\ttempMatch.map((match) => {\r\n\t// \t\t\tif (match.artistId === tempList[index].artistId) match.boolVis = false\r\n\t// \t\t})\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\ttempList[index].boolList = true;\r\n\t// \t\ttempMatch.map((match) => {\r\n\t// \t\t\tif (match.artistId === tempList[index].artistId) match.boolVis = true\r\n\t// \t\t})\r\n\t// \t}\r\n\t// \tsetListArtist([...tempList])\r\n\t// \tsetMatchList([...tempMatch])\r\n\r\n\t// \ttestAllArtists();\r\n\r\n\t// };\r\n\t// //Test si tt les artistes sont selectionnés\r\n\t// function testAllArtists() {\r\n\t// \tlet count = 0;\r\n\r\n\t// \tlistArtist.map((artist) => {\r\n\t// \t\tif (artist.boolList === true) {\r\n\t// \t\t\tcount++;\r\n\t// \t\t}\r\n\r\n\t// \t})\r\n\r\n\t// \tif (count === listArtist.length) {\r\n\r\n\t// \t\tsetBoolAllArtist(true)\r\n\r\n\r\n\t// \t}\r\n\t// \telse {\r\n\r\n\r\n\t// \t\tsetBoolAllArtist(false)\r\n\t// \t}\r\n\r\n\r\n\t// }\r\n\t// //OnClick bouton \"Tous\"\r\n\t// function allArtists() {\r\n\r\n\t// \tlet tempList = [...listArtist];\r\n\r\n\t// \tif (boolAllArtist === true) {\r\n\t// \t\tfor (let i = 0; i < tempList.length; i++)\r\n\t// \t\t\ttempList[i].boolList = false;\r\n\t// \t\tfor (let i = 0; i < matchList.length; i++)\r\n\t// \t\t\tmatchList[i].boolVis = false;\r\n\t// \t\tsetBoolAllArtist(false)\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\tfor (let i = 0; i < tempList.length; i++)\r\n\t// \t\t\ttempList[i].boolList = true;\r\n\t// \t\tfor (let i = 0; i < matchList.length; i++)\r\n\t// \t\t\tmatchList[i].boolVis = true;\r\n\t// \t\tsetBoolAllArtist(true)\r\n\t// \t}\r\n\t// \tsetListArtist([...tempList])\r\n\r\n\t// }\r\n\r\n\t// //Ouvre la modale de tri artiste\r\n\t// function openModalArtist() {\r\n\r\n\t// \tif (boolModalArtist === true) {\r\n\t// \t\tsetBoolModalArtist(false)\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\tsetBoolModalArtist(true)\r\n\t// \t}\r\n\r\n\r\n\t// }\r\n\r\n\t// //fonction de tri par date\r\n\t// function handleOrderDate() {\r\n\t// \tlet bufferOrder;\r\n\t// \tlet bufferOrder2;\r\n\t// \tif (orderDate === 0) {\r\n\t// \t\t//tri ordre decroissant\r\n\t// \t\tsetMatchList(matchList.sort((a, b) => b.year - a.year));\r\n\r\n\t// \t\tsetOrderDate(1);\r\n\t// \t}\r\n\t// \telse if (orderDate === 1) {\r\n\t// \t\t//on stock les oeuvres dont la date = 0 ou null\r\n\t// \t\tbufferOrder = matchList.filter(function (paint) { return paint.year === null || paint.year === 0; })\r\n\r\n\t// \t\t//tri ordre croissant sans les 0 et null\r\n\t// \t\tbufferOrder2 = matchList.filter(function (paint) { return paint.year > 0; }).sort((a, b) => a.year - b.year);\r\n\t// \t\tconsole.log(bufferOrder2)\r\n\r\n\t// \t\t//on rajoute les oauvres trié au tableau de 0\r\n\t// \t\tbufferOrder.unshift(...bufferOrder2)\r\n\r\n\t// \t\tsetMatchList(bufferOrder)\r\n\t// \t\tsetOrderDate(1);\r\n\r\n\t// \t\tsetOrderDate(2);\r\n\t// \t}\r\n\t// \telse if (orderDate === 2) {\r\n\t// \t\tsetMatchList(tempList);\r\n\t// \t\tsetOrderDate(0);\r\n\t// \t}\r\n\t// }\r\n\r\n\t// // Call Jquery script\r\n\t// useEffect(() => {\r\n\t// \tconst loadFile = async () => {\r\n\t// \t\t// const { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n\t// \t\tconst { grid } = await import(\"../../webapp/js/gridActions.min.js\");\r\n\t// \t\tconst { checkBox } = await import(\"../../webapp/js/js_source/checkLister\");\r\n\r\n\r\n\r\n\t// \t\t// modal();\r\n\t// \t\tgrid();\r\n\t// \t\tcheckBox();\r\n\t// \t};\r\n\t// \tloadFile();\r\n\t// }, []);\r\n\t// console.log(matchList)\r\n\t// return (\r\n\t// \t<div className=\"ResultMatch\">\r\n\r\n\t// \t\t<section className=\"center-col cont-sty-1\" style={{ paddingTop: '0' }}>\r\n\t// \t\t\t<div className=\"cont-l-w center-row\">\r\n\r\n\t// \t\t\t\t<div className=\"orderingBox\">\r\n\t// \t\t\t\t\t{/* <!-- Bouton matching par année (+ ancien au + récent) - début --> */}\r\n\t// \t\t\t\t\t<button className={orderDate === 0 ? \"orderByDate\" : orderDate === 1 ? \"orderByDateDown\" : \"orderByDateUp\"} onClick={handleOrderDate} >{orderDate === 0 ?\"Tri par date\" : orderDate === 1 ? \"Tri croissant\" : \"Tri décroissant\"}</button>\r\n\t// \t\t\t\t\t{/* <!-- Bouton matching par année (+ ancien au + récent) - fin --> */}\r\n\t// \t\t\t\t\t<h2 className=\"center-tex goRed\">Matching <span>{matchingType.text}</span></h2>\r\n\t// \t\t\t\t\t{/* <!-- Bouton matching par artistes - début --> */}\r\n\t// \t\t\t\t\t<button className=\"orderByArtist\" onClick={openModalArtist}>Choisir vos artiste(s) </button>\r\n\t// \t\t\t\t\t{boolModalArtist === true &&\r\n\t// \t\t\t\t\t\t<div>\r\n\t// \t\t\t\t\t\t\t<div className=\"smart-modal-overlay\" style={{ display: \"block\" }}></div>\r\n\t// \t\t\t\t\t\t\t<div id=\"1777\" className=\"smart-modal-content scrollAuto\" style={{ display: \"block\", transform: \"translate(-50%,-50%)\", top: \"50%\", left: \"50%\" }}>\r\n\t// \t\t\t\t\t\t\t\t<h3 >Artistes</h3>\r\n\t// \t\t\t\t\t\t\t\t<a className=\"smart-modal-close\" onClick={openModalArtist}><img className=\"img-left\" src={close} alt=\"Trier\" /></a>\r\n\t// \t\t\t\t\t\t\t\t{/* <!-- checkbox artiste matché - début --> */}\r\n\t// \t\t\t\t\t\t\t\t<div className=\"checkLister all\">\r\n\t// \t\t\t\t\t\t\t\t\t<button className={boolAllArtist === true ? \"checkbox checked\" : \"checkbox \"} onClick={allArtists}></button>\r\n\t// \t\t\t\t\t\t\t\t\t<span>Tous</span>\r\n\t// \t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t\t{/* <!-- checkbox artiste matché - fin -->\r\n\t// \t\t\t\t\t\t\t\t\t\t<!-- checkbox artiste matché - début --> */}\r\n\t// \t\t\t\t\t\t\t\t{listArtist.length > 0 &&\r\n\t// \t\t\t\t\t\t\t\t\tlistArtist.map((artist, index) => {\r\n\t// \t\t\t\t\t\t\t\t\t\treturn (\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<div className=\"checkLister\" >\r\n\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<div className={artist.boolList === true ? \"checkbox checked\" : \"checkbox\"} onClick={(e) => setTriArtist(index)}></div>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<span>{artist.artisteName}</span>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t\t\t\t)\r\n\t// \t\t\t\t\t\t\t\t\t})}\r\n\r\n\t// \t\t\t\t\t\t\t\t{/* <!-- checkbox ar tiste matché - fin -->*/}\r\n\r\n\t// \t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t}\r\n\r\n\t// \t\t\t\t\t{/* <!-- Bouton matching par artistes - fin --> */}\r\n\t// \t\t\t\t</div>\r\n\r\n\t// \t\t\t\t{/* <form id=\"fineSearch\" className=\"fineSearch\" method=\"post\">\r\n\t// \t\t\t\t\t\t<div className=\"\">\r\n\t// \t\t\t\t\t\t\t<select id=\"type\" name=\"type\" value={matchingType} onChange={(e) => setMatchingType(e.target.value)} >\r\n\t// \t\t\t\t\t\t\t\t<option value=\"STYLE\">Style</option>\r\n\t// \t\t\t\t\t\t\t\t<option value=\"COLOR\">Couleur</option>\r\n\t// \t\t\t\t\t\t\t\t<option value=\"CONTENT\">Contenu</option>\r\n\t// \t\t\t\t\t\t\t\t<option value=\"COLOR_AND_CONTENT\">couleur et contenu</option>\r\n\t// \t\t\t\t\t\t\t\t<option value=\"COLOR_AND_STYLE\">couleur et style</option>\r\n\t// \t\t\t\t\t\t\t\t<option value=\"CONTENT_AND_STYLE\">contenu et style</option>\r\n\t// \t\t\t\t\t\t\t</select>\r\n\t// \t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t</form> */}\r\n\r\n\r\n\t// \t\t\t</div>\r\n\r\n\t// \t\t\t{/* <!-- Modal artistes matchés & filtrer le matching - début --> */}\r\n\t// \t\t\t<div className=\"cont-l-w\">\r\n\t// \t\t\t\t<div className=\"itemGallery mt-a\">\r\n\t// \t\t\t\t\t<div className=\"gridContent items\">\r\n\t// \t\t\t\t\t\t{matchList.length > 0 &&\r\n\t// \t\t\t\t\t\t\tmatchList.filter(filter => filter.boolVis === true).map((match, index) => {\r\n\r\n\t// \t\t\t\t\t\t\t\t// if (match.boolVis === true)\r\n\t// \t\t\t\t\t\t\t\treturn (\r\n\r\n\t// \t\t\t\t\t\t\t\t\t<div className=\"item\" >\r\n\t// \t\t\t\t\t\t\t\t\t\t<div className=\"base\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${match.artistId}/${match.urlImage})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\" }}>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<button id=\"itemCommentState\" className=\"comment yes\" type=\"button\" value=\"notComment\"></button>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<Fav user={user} isLogged={isLogged} favPaint={match} />\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<ListModal user={user} isLogged={isLogged} listPaint={match} />\r\n\t// \t\t\t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t\t\t\t<div className=\"hidden\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<div className=\"revealShadow\"></div>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<h3 className=\"itemArtist\">{match.artisteName}</h3>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<h4 className=\"itemName\">{match.name}</h4>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<div className=\"itemYear\">{match.year}</div>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t<ul className=\"hListGridItem\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"smart-modal\">\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"GridviewItem\" to={`../../view/OpusPage.js/${match.id}`} state={match.id} >\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tVoir\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"GridmakeMatch\" to={`../../view/MatchingPage.js/${match.id}`} state={match.id} >\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t\tmatch\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t// \t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\r\n\t// \t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t// \t\t\t\t\t\t\t\t\t\t{/* <!-- oeuvre - fin --> */}\r\n\t// \t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t// \t\t\t\t\t\t\t\t)\r\n\r\n\t// \t\t\t\t\t\t\t})}\r\n\r\n\r\n\t// \t\t\t\t\t</div>\r\n\t// \t\t\t\t</div>\r\n\t// \t\t\t\t{/* <!-- items row - fin --> */}\r\n\t// \t\t\t</div>\r\n\r\n\t// \t\t\t<div className=\"cont-l-w center-tex\">\r\n\t// \t\t\t\t<a className=\"viewMore\">Voir plus</a>\r\n\t// \t\t\t</div>\r\n\r\n\t// \t\t</section>\r\n\r\n\t// \t</div>\r\n\t// );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/MatchingResult/ResultMatch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "ResultMatch",
    "memberof": "src/component/MatchingResult/ResultMatch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/MatchingResult/ResultMatch.js~ResultMatch",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/MatchingResult/ResultMatch.js",
    "importStyle": "ResultMatch",
    "description": "This component display the matched paintings",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "matchingType",
        "description": "type of matcing used"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setMatchingType",
        "description": "matchingType setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/${paintId} : get painting informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "matchingSearch/findMatchForSource/${matchingType.value}/${response.data.aw_idtf_intern}/true : get list of match"
      }
    ],
    "return": null
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "src/component/OpusPage/Painting.js",
    "content": "import React from \"react\";\r\nimport { useRef, useEffect, useState, Suspense } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport PrismaZoom from 'react-prismazoom'\r\nimport { Link } from \"react-router-dom\";\r\nimport { accordion } from \"../../webapp/js/js_source/accordion\"\r\nimport ListModal2 from \"../general/ListModal2\";\r\nimport { EmailShareButton, FacebookShareButton, PinterestShareButton, TwitterShareButton, } from \"react-share\";\r\nimport { FacebookIcon, TwitterIcon, PinterestIcon, EmailIcon } from \"react-share\";\r\nimport { toast } from \"react-toastify\"\r\nimport ReactLoading from 'react-loading';\r\nimport down from \"../../webapp/img/icons/ico_arrow-down_2.svg\"\r\n\r\n/**\r\n * This component display informations about a specific painting\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {boolean} isLogged - test if the user is logged\r\n * @param {number} paintId - selected paint Id\r\n * @emits - paintingEntity/${paintId} : get painting informations\r\n * @emits - paintingEntity/numberFavorite/${paintId} : get number of likes\r\n * @emits - api/painting_comment/save : post new comment\r\n * @emits - users/updateFavoritePainting : like/unlike painting\r\n */\r\n\r\nexport default function Painting({ user, setUser, paintId, isLogged }) {\r\n\r\n\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [Painting, setPainting] = useState([]);\r\n\tconst [zoomBool, setZoomBool] = useState(false);\r\n\tconst [refreshKey, setRefreshKey] = useState(0);\r\n\tconst [boolFav, setBoolFav] = useState(false);\r\n\tconst [commentText, setCommentText] = useState(\"\");\r\n\tconst [shareUrlFb, setShareUrlFb] = useState(window.location.href);\r\n\tconst [showKeyword, setShowKeyword] = useState(false)\r\n\tconst [nLike, setNLike] = useState(0)\r\n\tconst [boolAccordion, setBoolAccordion] = useState(false);\r\n\r\n\r\n\taccordion();\r\n\r\n\tfunction handleAccordion() {\r\n\r\n\t\tif (boolAccordion === true) {\r\n\t\t\tsetBoolAccordion(false)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetBoolAccordion(true);\r\n\t\t}\r\n\t}\r\n\r\n\t//get Painting info//\r\n\tuseEffect(() => {\r\n\r\n\t\taxios.get(URLDayl + `paintingEntity/${paintId}`).then((response) => {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tsetPainting(response.data);\r\n\t\t\tconsole.log(response.data)\r\n\t\t\tconst tempResponse = response.data;\r\n\t\t\t//retrive keywords from string to array\r\n\r\n\t\t\ttempResponse.boolList = false;\r\n\t\t\ttempResponse.aw_keyw_ai = tempResponse.aw_keyw_ai.slice(1, -1)\r\n\t\t\ttempResponse.aw_keyw_ai = tempResponse.aw_keyw_ai.split(\",\")\r\n\t\t\tsetPainting(tempResponse)\r\n\t\t\tsetShowKeyword(true)\r\n\t\t\t//Get number like\r\n\t\t\taxios.get(URLDayl + `paintingEntity/numberFavorite/${paintId}`).then((response2) => {\r\n\t\t\t\tsetNLike(response2.data);\r\n\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t\t//Test painting liké par l'utilisateur\r\n\t\tif (user)\r\n\t\t\tuser.paintingLiked.map((like) => {\r\n\t\t\t\tpaintId === like && setBoolFav(true)\r\n\t\t\t})\r\n\r\n\t}, [paintId]);\r\n\r\n\r\n\r\n\t////////Add fav////////\r\n\tfunction handleClick() {\r\n\t\tconst tempUser = user;\r\n\t\tif (isLogged === true) {\r\n\t\t\tif (boolFav === true) {\r\n\t\t\t\tsetBoolFav(false);\r\n\t\t\t\t//delete a favorite painting\r\n\t\t\t\taxios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: paintId, operation: \"remove\" },\r\n\t\t\t\t\t{ headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\r\n\t\t\t\t)\r\n\t\t\t\t\t.then((response) => {\r\n\r\n\t\t\t\t\t\tconst removeIndex = tempUser.paintingLiked.indexOf(paintId);\r\n\t\t\t\t\t\ttempUser.paintingLiked.splice(removeIndex, 1);\r\n\t\t\t\t\t\tsetUser(tempUser);\r\n\t\t\t\t\t\tupdateLike()\r\n\t\t\t\t\t\ttoast.success(\"Supprimée des favoris!\", {\r\n\t\t\t\t\t\t\tposition: \"top-right\",\r\n\t\t\t\t\t\t\tautoClose: 3000,\r\n\t\t\t\t\t\t\thideProgressBar: false,\r\n\t\t\t\t\t\t\tcloseOnClick: true,\r\n\t\t\t\t\t\t\tpauseOnHover: true,\r\n\t\t\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\t\t\tprogress: undefined,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsetBoolFav(true);\r\n\t\t\t\t//add a favorite painting\r\n\t\t\t\taxios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: paintId, operation: \"add\" },\r\n\t\t\t\t\t{ headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\r\n\t\t\t\t)\r\n\t\t\t\t\t.then((response) => {\r\n\r\n\r\n\r\n\t\t\t\t\t\ttempUser.paintingLiked.push(paintId)\r\n\t\t\t\t\t\tsetUser(tempUser)\r\n\t\t\t\t\t\tupdateLike()\r\n\t\t\t\t\t\ttoast.success(\"Ajoutée aux favoris!\", {\r\n\t\t\t\t\t\t\tposition: \"top-right\",\r\n\t\t\t\t\t\t\tautoClose: 3000,\r\n\t\t\t\t\t\t\thideProgressBar: false,\r\n\t\t\t\t\t\t\tcloseOnClick: true,\r\n\t\t\t\t\t\t\tpauseOnHover: true,\r\n\t\t\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\t\t\tprogress: undefined,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tfunction updateLike() {\r\n\t\t//update Nombres de like//\r\n\t\taxios.get(URLDayl + `paintingEntity/numberFavorite/${paintId}`).then((response) => {\r\n\t\t\tsetNLike(response.data);\r\n\t\t\tconsole.log(response.data)\r\n\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t// Call Jquery script\r\n\tuseEffect(() => {\r\n\t\tconst loadFile = async () => {\r\n\t\t\t// const { modal } = await import(\"../../webapp/js/modalBox.min.js\");\r\n\r\n\t\t\t// modal();\r\n\t\t};\r\n\t\tloadFile();\r\n\t}, []);\r\n\r\n\t//afficher image zoom//\r\n\tconst handleZoomTrue = () => {\r\n\t\tsetZoomBool(false)\r\n\t}\r\n\tconst handleZoomFalse = () => {\r\n\t\tsetZoomBool(true)\r\n\t}\r\n\r\n\r\n\t//post comment//\r\n\tconst handleSubmit = (e) => {\r\n\r\n\t\te.preventDefault();\r\n\t\tif (isLogged === true) {\r\n\t\t\taxios.post(URLDayl + \"api/painting_comment/save\",\r\n\t\t\t\t{ userId: user.id, paintingId: paintId, content: commentText, statusComment: \"ACTIVE\", visibility: \"PUBLIC\" },\r\n\t\t\t\t{ headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n\t\t\t)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tsetRefreshKey(oldKey => oldKey + 1);\r\n\r\n\t\t\t\t\ttoast.success(\"Commentaire posté!\", {\r\n\t\t\t\t\t\tposition: \"top-right\",\r\n\t\t\t\t\t\tautoClose: 3000,\r\n\t\t\t\t\t\thideProgressBar: false,\r\n\t\t\t\t\t\tcloseOnClick: true,\r\n\t\t\t\t\t\tpauseOnHover: true,\r\n\t\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\t\tprogress: undefined,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttoast.warn(\"Connectez vous pour poster un commentaire!\", {\r\n\t\t\t\tposition: \"top-right\",\r\n\t\t\t\tautoClose: 3000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: true,\r\n\t\t\t\tdraggable: true,\r\n\t\t\t\tprogress: undefined,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"Painting\">\r\n\t\t\t{/* <!-- ******************************************************\r\n\t\t\tSECTION PRÉSENTATION DE L'OEUVRE - début\r\n\t\t\t****************************************************** --> */}\r\n\t\t\t<section className=\"center-col cont-sty-1\" style={{paddingBottom: \"150px\"}}>\r\n\r\n\t\t\t\t{/* <!-- ******************************************************\r\n\t\t\t\tBREADCRUMBS - début\r\n\t\t\t\t****************************************************** --> */}\r\n\t\t\t\t<ol className=\"topBc\" style={{marginTop: \"20px\"}}>\r\n\t\t\t\t\t<li><Link to=\"../../\">Accueil</Link></li>\r\n\t\t\t\t\t{/* <li className=\"#\"><a>Artistes</a></li> */}\r\n\t\t\t\t\t<li className=\"#\"><Link to={`../../view/ArtistDetailPage.js/${Painting.artist_idtf_intern}`} state={Painting.artist_idtf_intern} href=\"artiste.html\">{Painting.artist_name_tot}</Link></li>\r\n\t\t\t\t\t{/* <li className=\"#\"><a>Oeuvres</a></li> */}\r\n\t\t\t\t\t<li className=\"#\">{Painting.aw_title_Origin}</li>\r\n\t\t\t\t</ol>\r\n\t\t\t\t{/* <!-- Breadcrumbs - fin --> */}\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"oeuvreTop\">\r\n\r\n\t\t\t\t\t<div className=\"itemImage\" style={{height: \"400px\"}}>\r\n\r\n\t\t\t\t\t\t{/* <!-- Lancer un matching avec cette oeuvre - début --> */}\r\n\t\t\t\t\t\t<form id=\"matchThisItem\" className=\"matchSubAlt\" method=\"post\" action=\"\">\r\n\t\t\t\t\t\t{isLoading === true && <div style={{marginBottom: \"20px\"}}><ReactLoading color={\"#E9573F\"} type={\"spin\"} height={\"40px\"} width={\"40px\"}  /></div>}\r\n\t\t\t\t\t\t\t<Link to={`../../view/MatchingPage.js/${paintId}`} state={paintId} ><input type=\"submit\" value=\"Match\" /></Link>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t{/* <!-- Lancer un matching avec cette oeuvre - fin --> */}\r\n\r\n\t\t\t\t\t\t{/* <!-- Lightbox image avec fonction agrandir/réduire - début --> */}\r\n\r\n\t\t\t\t\t\t<a className=\"zoomOpen\" onClick={handleZoomFalse} data-modal=\"imgBox\">\r\n\t\t\t\t\t\t\t<img style={{maxHeight: \"400px\"}} onLoad={e => setIsLoading(false)} className=\"show\" src={URLDayl + `images/content/${Painting.artist_idtf_intern}/${Painting.generatedId}`} alt=\"Nom de l'oeuvre\" />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t{/*<!-- Trigger Modal. --> */}\r\n\r\n\r\n\t\t\t\t\t\t{zoomBool === true &&\r\n\t\t\t\t\t\t\t<div className=\"zoomBox\" id=\"imgBox\" style={{ overflowY: \"hidden\" }}>\r\n\t\t\t\t\t\t\t\t<button className=\"zoomCloseBtn\" onClick={handleZoomTrue} type=\"button\">x</button>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"modal-sandbox\"></div>\r\n\t\t\t\t\t\t\t\t<PrismaZoom allowPan={true} allowZoom={true} >\r\n\r\n\t\t\t\t\t\t\t\t\t<img id=\"resizeMe\" style={{ height: \"auto \", maxWidth: \"70vh\"}} src={URLDayl + `images/content/${Painting.artist_idtf_intern}/${Painting.generatedId}`} draggable=\"true\" alt=\"Nom de l'oeuvre\" />\r\n\t\t\t\t\t\t\t\t</PrismaZoom>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{/* <!-- Lightbox image avec fonction agrandir/réduire - fin --> */}\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"itemDetails\">\r\n\t\t\t\t\t\t<h1>{Painting.aw_title_Origin}, {Painting.aw_year}</h1>\r\n\t\t\t\t\t\t<h2><Link to={`../../view/ArtistDetailPage.js/${Painting.artist_idtf_intern}`} state={Painting.artist_idtf_intern} href=\"artiste.html\">{Painting.artist_name_tot}</Link></h2>\r\n\r\n\t\t\t\t\t\t{/* <!-- LIEN PLUS D'INFOS SUR CETTE OEUVRE (WIKIART...) - début --> */}\r\n\t\t\t\t\t\t<a className=\"itemExtData\" href={Painting.aw_link_ext} target=\"_blank\">Plus d’informations sur {Painting.aw_desc_basic_source_1}</a>\r\n\t\t\t\t\t\t{/* <!-- LIEN PLUS D'INFOS SUR CETTE OEUVRE (WIKIART...) - fin --> */}\r\n\r\n\t\t\t\t\t\t{/* <!-- ENREGISTRER & PARTAGER LE MATCHING - début --> */}\r\n\t\t\t\t\t\t<ul className=\"hList\">\r\n\r\n\t\t\t\t\t\t\t{/* <!-- BOUTONS LIKES - début --> */}\r\n\t\t\t\t\t\t\t<li>\r\n\r\n\t\t\t\t\t\t\t\t<input type=\"submit\" id=\"submit\" className={boolFav ? \"itemLikeItYes\" : \"itemLikeIt\"} onClick={() => handleClick()} value={nLike} />{/*<!-- Le membre n'aime pas déjà cette oeuvre --> */}\r\n\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t{/* <!-- BOUTONS LIKES - début --> */}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t{/* <!-- Modal \"ajouter à une liste\" - début --> */}\r\n\t\t\t\t\t\t\t\t<ListModal2 user={user} isLogged={isLogged} listPaint={Painting} />\r\n\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t{/* <!-- Modal \"partager cette oeuvre\" - début --> */}\r\n\t\t\t\t\t\t\t\t<FacebookShareButton url={shareUrlFb} quote={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n\t\t\t\t\t\t\t\t\t<FacebookIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n\t\t\t\t\t\t\t\t</FacebookShareButton>\r\n\t\t\t\t\t\t\t\t<TwitterShareButton url={shareUrlFb} title={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n\t\t\t\t\t\t\t\t\t<TwitterIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n\t\t\t\t\t\t\t\t</TwitterShareButton>\r\n\t\t\t\t\t\t\t\t<PinterestShareButton url={shareUrlFb} description={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n\t\t\t\t\t\t\t\t\t<PinterestIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n\t\t\t\t\t\t\t\t</PinterestShareButton>\r\n\t\t\t\t\t\t\t\t<EmailShareButton url={shareUrlFb} body={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\r\n\t\t\t\t\t\t\t\t\t<EmailIcon size={32} round style={{ marginRight: \"1px\" }} />\r\n\t\t\t\t\t\t\t\t</EmailShareButton>\r\n\t\t\t\t\t\t\t\t{/* <!-- Modal \"partager cette oeuvre\" - fin --> */}\r\n\t\t\t\t\t\t\t\t{/* <div className=\"smart-modal\">\r\n\t\t\t\t\t\t\t\t\t<a data-target=\"shareThis\" className=\"smart-modal-open-2\"><span className=\"matchShare\">Partager</span></a>\r\n\r\n\t\t\t\t\t\t\t\t\t<div id=\"shareThis\" className=\"smart-modal-content\">\r\n\t\t\t\t\t\t\t\t\t\t<h3>Partager cette oeuvre</h3>\r\n\t\t\t\t\t\t\t\t\t\t<a className=\"smart-modal-close\"><img className=\"img-left\" src=\"img/icons/ico_close_2.svg\" alt=\"Trier\" /></a>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"entrySocial\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"fb\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a data-gtm-share-link=\"Facebook\">Facebook</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"twitter\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"http://twitter.com/intent/tweet?text=Ajouter le tire de la page;url=medias/hd/m/a/amedeo-modigliani/1918_Femme-assise-robe-bleue.jpg\" onClick=\"window.open(this.href, 'Partager sur Twitter', 'menubar=no,toolbar=no,resizable=yes,scrollbars=no,height=600,width=600'); return false;\" data-gtm-share-link=\"Twitter\">Twitter</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"pinterest\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"https://www.pinterest.com/pin/create/button/?url=http%3A////www.domaine.com/url-complete-de-la-page;description=Ajouter le texte de la description de l'artiste;media=medias/hd/m/a/amedeo-modigliani/1918_Femme-assise-robe-bleue.jpg\" onClick=\"window.open(this.href, 'Épingler sur Pinterest', 'menubar=no,toolbar=no,resizable=yes,scrollbars=no,height=600,width=600'); return false;\" data-gtm-share-link=\"Pinterest\">Pinterest</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"email\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"mailto:stephane@novagen.tech?subject=#&body=#\" data-gtm-share-link=\"email\">par Email</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t{/* <!-- Modal \"partager cette oeuvre\" - fin --> */}\r\n\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t{/* <!-- Enregistrer & partager le matching - fin -->\r\n\r\n\r\n\t\t\t\t\t\t\t<!-- ******************************************************\r\n\t\t\t\t\t\t\tPARTAGER UNE ÉMOTION - début\r\n\t\t\t\t\t\t\t****************************************************** --> */}\r\n\t\t\t\t\t\t<form method=\"post\" onSubmit={handleSubmit} className=\"addUserThought mt-b\" >\r\n\t\t\t\t\t\t\t<textarea name=\"textarea\" onChange={(e) => setCommentText(e.target.value)} value={commentText} minLength=\"10\" maxLength=\"255\" placeholder=\"Publier une émotion ou un avis sur cette oeuvre...\"></textarea>\r\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"\" />\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t{/* <!-- PARTAGER UNE ÉMOTION - fin --> */}\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t{/* <!-- SECTION PRÉSENTATION DE L'OEUVRE - fin --> */}\r\n\r\n\r\n\t\t\t<div className=\"cont-sty-3 mb-b\">\r\n\t\t\t\t{/* \r\n\t\t\t\t\t<!-- ******************************************************\r\n\t\t\t\t\tSECTION DONNÉES TECHNIQUES DE L'OEUVRE ET MOTS-CLES - début\r\n\t\t\t\t\t****************************************************** --> */}\r\n\t\t\t\t<section className=\"center-col\">\r\n\t\t\t\t\t<div className=\"cont-l-w mt-a flexResp\">\r\n\r\n\t\t\t\t\t\t{/* <!-- Données techniques - début --> */}\r\n\t\t\t\t\t\t<div className=\"row70\">\r\n\t\t\t\t\t\t\t<h2 className=\"mb-a\">Données techniques <img src={down} style={{ width: \"20px\", height: \"20px\", top: \"4px\", left: \"10px\" }} onClick={handleAccordion}></img></h2>\r\n\t\t\t\t\t\t\t{boolAccordion === true && <div className=\"toLeftDataList\">\r\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Style</span><span className=\"dataValue\">{Painting.aw_style_import}</span></div>\r\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Genre</span><span className=\"dataValue\">{Painting.aw_genre_import}</span></div>\r\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Support</span><span className=\"dataValue\">{Painting.aw_medium}</span></div>\r\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Dimensions</span><span className=\"dataValue\">{Painting.aw_dim_width}{Painting.aw_dim_width && \"x\"}{Painting.aw_dim_height}{Painting.aw_dim_width && \"cm\"}</span></div>\r\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Lieu</span><span className=\"dataValue\">{Painting.aw_locate}</span></div>\r\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Source</span><span className=\"dataValue\">{Painting.aw_desc_basic_source_1}</span></div>\r\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Droits</span><span className=\"dataValue\">{Painting.aw_beneficiaries}</span></div>\r\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Crédits</span><span className=\"dataValue\"></span></div>\r\n\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* <!-- Données techniques - fin --> */}\r\n\r\n\t\t\t\t\t\t{/* <!-- Mots-clés - début --> */}\r\n\t\t\t\t\t\t<div className=\"row30 tagList\">\r\n\t\t\t\t\t\t\t<h2 className=\"mb-a\">Mots-clés</h2>\r\n\t\t\t\t\t\t\t{/* {displayKeywords()}\t */}\r\n\t\t\t\t\t\t\t{showKeyword && typeof Painting.aw_keyw_ai === \"object\" && Painting.aw_keyw_ai.map((keyword, index) => {\r\n\t\t\t\t\t\t\t\tif (keyword !== \" \" && keyword !== \"\")\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<a key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t{keyword}\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* <!-- Mots-clés - fin --> */}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* {Painting.length > 0 &&\r\n\t\t\t\t\t\t\tPainting.keywords.map((keyword) => (<a href=\"/#\">{keyword}</a>))} */}\r\n\r\n\r\n\t\t</div>\r\n\t);\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/OpusPage/Painting.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "Painting",
    "memberof": "src/component/OpusPage/Painting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/OpusPage/Painting.js~Painting",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/OpusPage/Painting.js",
    "importStyle": "Painting",
    "description": "This component display informations about a specific painting",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "selected paint Id"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/${paintId} : get painting informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/numberFavorite/${paintId} : get number of likes"
      },
      {
        "types": [
          "*"
        ],
        "description": "api/painting_comment/save : post new comment"
      },
      {
        "types": [
          "*"
        ],
        "description": "users/updateFavoritePainting : like/unlike painting"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "src/component/OpusPage/SimilarPaint.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { URLDayl } from \"../../services/constantes\"\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport artist from \"../../webapp/img/icons/ico_artists_2.svg\"\r\nimport filter from \"../../webapp/img/icons/ico_filters_3.svg\"\r\nimport { Link } from \"react-router-dom\";\r\nimport ListModal from \"../general/ListModal\";\r\nimport Fav from \"../general/Fav\";\r\n\r\n/**\r\n * This component display paintings of the same artist\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {boolean} isLogged - test if the user is logged\r\n * @param {number} paintId - selected paint Id\r\n * @emits - paintingEntity/${paintId} : get painting informations\r\n * @emits - paintingEntity/byArtist/${response.data.artist_idtf_intern}/0 : get list of artist paint\r\n * @emits - users/${user.id} : update user informations\r\n */\r\n\r\n\r\nexport default function ListPaintArtist({ user, setUser, paintId, isLogged }) {\r\n\r\n  // const [userSession, setUserSession] = useState([user]);\r\n  // const [painting, setPainting] = useState([]);\r\n  // const [matchList, setMatchList] = useState([]);\r\n  // const [refreshKey, setRefreshKey] = useState(0);\r\n  // const [orderDate, setOrderDate] = useState(0);\r\n\t// const [tempList, setTempList] = useState([]);\r\n\r\n\r\n  // // Call Jquery script\r\n  // useEffect(() => {\r\n  //   const loadFile = async () => {\r\n  //     // const { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n  //     const { grid } = await import(\"../../webapp/js/gridActions.min.js\");\r\n\r\n  //     // modal();\r\n  //     grid();\r\n  //   };\r\n  //   loadFile();\r\n  // }, []);\r\n\r\n\r\n\r\n  // //get Painting of artist//\r\n  // useEffect(() => {\r\n\r\n  //   axios.get(URLDayl + `paintingEntity/${paintId}`).then((response) => {\r\n  //     setPainting(response.data);\r\n\r\n  //     axios.get(URLDayl + `paintingEntity/byArtist/${response.data.artist_idtf_intern}/0`).then((response2) => {\r\n  //       setMatchList(response2.data);\r\n\r\n  //       const boolArray = response2.data.map((el) => { return { ...el, bool: false, boolList: false } });\r\n  //       setMatchList(boolArray)\r\n  //       setTempList(boolArray)\r\n  //     });\r\n\r\n  //   });\r\n\r\n\r\n  // }, [paintId]);\r\n\r\n\r\n\r\n  // //update user\r\n  // useEffect(() => {\r\n  //   if (user)\r\n  //     axios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n  //     ).then((response) => { setUser(response.data) });\r\n\r\n\r\n  // }, [refreshKey]);\r\n\r\n\r\n  // //fonction de tri par date\r\n\t// function handleOrderDate() {\r\n\t// \tlet bufferOrder;\r\n\t// \tlet bufferOrder2;\r\n\t// \tif (orderDate === 0) {\r\n\t// \t\t//tri ordre decroissant\r\n\t// \t\tsetMatchList(matchList.sort((a, b) => b.year - a.year));\r\n\r\n\t// \t\tsetOrderDate(1);\r\n\t// \t}\r\n\t// \telse if (orderDate === 1) {\r\n\t// \t\t//on stock les oeuvres dont la date = 0 ou null\r\n\t// \t\tbufferOrder = matchList.filter(function (paint) { return paint.year === null || paint.year === 0; })\r\n\r\n\t// \t\t//tri ordre croissant sans les 0 et null\r\n\t// \t\tbufferOrder2 = matchList.filter(function (paint) { return paint.year > 0; }).sort((a, b) => a.year - b.year);\r\n\t// \t\tconsole.log(bufferOrder2)\r\n\r\n\t// \t\t//on rajoute les oauvres trié au tableau de 0\r\n\t// \t\tbufferOrder.unshift(...bufferOrder2)\r\n\r\n\t// \t\tsetMatchList(bufferOrder)\r\n\t// \t\tsetOrderDate(1);\r\n\r\n\t// \t\tsetOrderDate(2);\r\n\t// \t}\r\n\t// \telse if (orderDate === 2) {\r\n\t// \t\tsetMatchList(tempList);\r\n\t// \t\tsetOrderDate(0);\r\n\t// \t}\r\n\t// }\r\n\r\n  // return (\r\n  //   <div className=\"SimilarPaint\">\r\n  //     {/* \r\n\t// \t\t\t<!-- ******************************************************\r\n\t// \t\t\tGRILLE AUTRES OEUVRES DE CETTE ARTISTE - début\r\n\t// \t\t\t****************************************************** --> */}\r\n  //     <section className=\"center-col\">\r\n  //       <div className=\"cont-l-w rowSpaceBetween\" style={{ marginTop: \"20px\", alignItems: \"flex-start\" }}>\r\n  //         <div>\r\n  //           <h2>Oeuvres de {matchList.length > 0 && matchList[0].artisteName} : </h2></div>\r\n  //           <button className={orderDate === 0 ? \"orderByDate\" : orderDate === 1 ? \"orderByDateDown\" : \"orderByDateUp\"} onClick={handleOrderDate}>Tri par date</button>\r\n\r\n  //         {/* <!-- Choix du type de grille - début --> */}\r\n  //         <ul className=\"gridColsType\">\r\n  //           <li><button type=\"button\" className=\"go2Cols\">2</button></li>\r\n  //           <li><button type=\"button\" className=\"go4Cols\">4</button></li>\r\n  //           <li><button type=\"button\" className=\"go6Cols\">6</button></li>\r\n  //           <li>colonnes par ligne</li>\r\n  //         </ul>\r\n  //         {/* <!-- Choix du type de grille - début --> */}\r\n\r\n  //         <div>\r\n  //           <ul>\r\n  //             <li>\r\n\r\n               \r\n  //               {/* <div className=\"smart-modal\">\r\n  //                 <a data-target=\"modalFiltrer\" className=\"smart-modal-open\"><img className=\"img-left\" src={filter} alt=\"Trier\" /><span>Filtrer</span></a>\r\n\r\n  //                 <div id=\"modalFiltrer\" className=\"smart-modal-content scrollAuto\">\r\n  //                   <h3>Filtres disponibles</h3>\r\n  //                   <a className=\"smart-modal-close\"><img className=\"img-left\" src={close} alt=\"Trier\" /></a>\r\n\r\n                   \r\n  //                   <div>\r\n  //                     <form id=\"fineMatching\" className=\"fineMatching\" method=\"post\" action=\"#\">\r\n  //                       <select id=\"licence\" name=\"licence\">\r\n  //                         <option value=\"\">Licence</option>\r\n  //                         <option value=\"Domaine public\">Domaine public</option>\r\n  //                         <option value=\"saab\">Oeuvres protégées</option>\r\n  //                       </select>\r\n  //                     </form>\r\n  //                   </div>\r\n                   \r\n  //                   <div>\r\n  //                     <form id=\"fineMatching\" className=\"fineMatching\" method=\"post\" action=\"#\">\r\n  //                       <select id=\"style\" name=\"style\">\r\n  //                         <option value=\"\">Style</option>\r\n  //                         <option value=\"Pointillism\">Pointillism</option>\r\n  //                         <option value=\"Renaissance\">Renaissance</option>\r\n  //                         <option value=\"Symbolism\">Symbolism</option>\r\n  //                         <option value=\"Assemblage\">Assemblage</option>\r\n  //                       </select>\r\n  //                     </form>\r\n  //                   </div>\r\n                  \r\n  //                   <div>\r\n  //                     <form id=\"fineMatching\" className=\"fineMatching mb-a\" method=\"post\" action=\"#\">\r\n  //                       <select id=\"genre\" name=\"genre\">\r\n  //                         <option value=\"\">Genre</option>\r\n  //                         <option value=\"Transport and industry\">Transport and industry</option>\r\n  //                         <option value=\"Fashion and costume\">Fashion and costume</option>\r\n  //                         <option value=\"Natural world\">Natural world</option>\r\n  //                         <option value=\"Science and knowledge\">Science and knowledge</option>\r\n  //                       </select>\r\n  //                     </form>\r\n  //                   </div>\r\n                   \r\n\r\n  //                 </div>\r\n  //               </div> */}\r\n  //               {/* <!-- Modal filtrer matching - fin --> */}\r\n\r\n  //             </li>\r\n\r\n  //           </ul>\r\n  //         </div>\r\n  //       </div>\r\n\r\n  //       {/* <!-- Modal artistes matchés & filtrer le matching - début --> */}\r\n  //       <div className=\"cont-l-w\">\r\n  //         <div className=\"itemGallery mt-a\">\r\n  //           <div className=\"gridContent items\">\r\n  //             {matchList.length > 0 &&\r\n  //               matchList.map((match, index) => (\r\n\r\n  //                 <div className=\"item\">\r\n  //                   <div className=\"base\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${match.artistId}/${match.urlImage})` }}>\r\n  //                     <button id=\"itemCommentState\" className=\"comment yes\" type=\"button\" value=\"notComment\"></button>\r\n  //                     <Fav user={user} isLogged={isLogged} favPaint={match} />\r\n  //                     <ListModal user={user} isLogged={isLogged} listPaint={match} />\r\n  //                   </div>\r\n  //                   <div className=\"hidden\">\r\n  //                     <div className=\"revealShadow\"></div>\r\n  //                     <h3 className=\"itemArtist\">{match.artisteName}</h3>\r\n  //                     <h4 className=\"itemName\">{match.name}</h4>\r\n  //                     <div className=\"itemYear\">{match.year}</div>\r\n  //                     <ul className=\"hListGridItem\">\r\n  //                       <li>\r\n  //                         <Link className=\"GridviewItem\" to={`../../view/OpusPage.js/${match.id}`} state={match.id} >\r\n  //                           Voir\r\n  //                         </Link>\r\n  //                       </li>\r\n  //                       <li>\r\n  //                         <Link className=\"GridmakeMatch\" to={`../../view/MatchingPage.js/${match.id}`} state={match.id} >\r\n  //                           match\r\n  //                         </Link>\r\n  //                       </li>\r\n  //                     </ul>\r\n\r\n  //                   </div>\r\n\r\n  //                   {/*<!-- oeuvre - fin --> */}\r\n  //                 </div>\r\n  //               ))}\r\n  //           </div>\r\n  //         </div>\r\n  //         {/* <!-- items row - fin --> */}\r\n  //       </div>\r\n\r\n  //       <div className=\"cont-l-w center-tex\">\r\n  //         <a className=\"viewMore\" >\r\n  //           Voir plus\r\n  //         </a>\r\n  //       </div>\r\n  //     </section >\r\n  //     {/* <!-- GRILLE AUTRES OEUVRES DE CET.TE ARTISTE - fin --> */}\r\n  //   </div >\r\n  // );\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/OpusPage/SimilarPaint.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "ListPaintArtist",
    "memberof": "src/component/OpusPage/SimilarPaint.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/OpusPage/SimilarPaint.js~ListPaintArtist",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/OpusPage/SimilarPaint.js",
    "importStyle": "ListPaintArtist",
    "description": "This component display paintings of the same artist",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "selected paint Id"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/${paintId} : get painting informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/byArtist/${response.data.artist_idtf_intern}/0 : get list of artist paint"
      },
      {
        "types": [
          "*"
        ],
        "description": "users/${user.id} : update user informations"
      }
    ],
    "return": null
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "src/component/UserInfo/AmateurInfo.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\r\nimport pen from \"../../webapp/img/icons/ico_pen_1.svg\"\r\nimport pen2 from \"../../webapp/img/icons/ico_pen_2.svg\"\r\nimport { URLDayl } from \"../../services/constantes\";\r\nimport defaultBg from \"../../webapp/img/bg/bg_default.jpg\"\r\nimport defaultLogo from \"../../webapp/img/icons/ico_mod_profile_1.svg\"\r\nimport { toast } from \"react-toastify\"\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * This component is used to update your informations\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @emits - users/update : edit user information\r\n * @emits - images/uploadUserIcon?userId=${user.id} :edit profil picture\r\n * @emits - users/${user.id} : update user informations \r\n */\r\n\r\nexport default function AmateurInfo({ user, setUser}) {\r\n\r\n    // const [boolExpert, setBoolExpert] = useState(false);\r\n    // const [boolCrea, setBoolCrea] = useState(false);\r\n    // const { register, handleSubmit, formState: { errors }, setValue, getValues } = useForm();\r\n    // const [fileName, setFileName] = useState(\"Glissez/déposez votre fichier ici\");\r\n    // const [title, setTitle] = useState(\"Glissez/déposez votre fichier ici\");\r\n    // const [count1, setCount1] = useState(0);\r\n    // const [count2, setCount2] = useState(0);\r\n    // const [count3, setCount3] = useState(0);\r\n\r\n    // console.log(user)\r\n\r\n    // //Post user info//\r\n    // const postUserInfo = async (data) => {\r\n\r\n    //     axios.post(URLDayl + \"users/update\",\r\n    //         {\r\n    //             id: user.id, firstName: data.firstName, lastName: data.lastName, biography: data.biography,\r\n    //             linkedinAccount: data.linkedinAccount, instragramAccount: data.instragramAccount, facebookAccount: data.facebookAccount\r\n    //             , pinterestAccount: data.pinterestAccount, twitterAccount: data.twitterAccount, city: data.city, country: data.country\r\n    //         },\r\n    //         { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n    //     )\r\n    //         .then((response) => {\r\n\r\n    //             toast.success(\"Nouvelles informations enregistrées!\", {\r\n    //                 position: \"top-right\",\r\n    //                 autoClose: 3000,\r\n    //                 hideProgressBar: false,\r\n    //                 closeOnClick: true,\r\n    //                 pauseOnHover: true,\r\n    //                 draggable: true,\r\n    //                 progress: undefined,\r\n\r\n    //             });\r\n    //             updateUser();\r\n\r\n\r\n\r\n    //         });\r\n\r\n\r\n\r\n    // }\r\n\r\n    // //      //envoie de la banniere à l'api\r\n    // //   const onSubmitBg = async (data) => {\r\n\r\n    // //     var file = await data.fileBg[0];\r\n    // //     var formdata = new FormData();\r\n    // //     formdata.append('image', file);\r\n\r\n\r\n    // //     var xhr = new XMLHttpRequest();\r\n    // //     xhr.open('POST', URLDayl + `images/uploadUserBackgroundIcon?userId=${user.id}`);\r\n    // //     //xhr.setRequestHeader('Content-Type', 'multipart/form-data');\r\n    // //     xhr.send(formdata);\r\n\r\n    // //     xhr.onreadystatechange = function () {\r\n    // //       if (xhr.readyState != 4) return;\r\n    // //       if (xhr.status != 200) {\r\n    // //         toast.warning(\"Un problème est survenu dans l'enregistrement de votre bannière!\", {\r\n    // //           position: \"top-right\",\r\n    // //           autoClose: 3000,\r\n    // //           hideProgressBar: false,\r\n    // //           closeOnClick: true,\r\n    // //           pauseOnHover: true,\r\n    // //           draggable: true,\r\n    // //           progress: undefined,\r\n    // //         });\r\n    // //       } else {\r\n    // //         updateUser();\r\n    // //         toast.success(\"Nouvelle bannière enregistrée!\", {\r\n    // //           position: \"top-right\",\r\n    // //           autoClose: 3000,\r\n    // //           hideProgressBar: false,\r\n    // //           closeOnClick: true,\r\n    // //           pauseOnHover: true,\r\n    // //           draggable: true,\r\n    // //           progress: undefined,\r\n    // //         });\r\n    // //       }\r\n    // //     };\r\n\r\n    // //   }\r\n\r\n    // const postProfilPicture = async (data) => {\r\n    //     var file = await data.file[0];\r\n    //     var formdata = new FormData();\r\n    //     formdata.append('image', file);\r\n    //     console.log(data.file[0])\r\n    //     if (data.file[0]) {\r\n    //         var xhr = new XMLHttpRequest();\r\n    //         xhr.open('POST', URLDayl + `images/uploadUserIcon?userId=${user.id}`);\r\n    //         xhr.send(formdata);\r\n    //         xhr.onreadystatechange = function () {\r\n\r\n    //             if (xhr.readyState != 4) return;\r\n    //             if (xhr.status != 200) {\r\n    //                 toast.warning(\"Un problème est survenu dans l'enregistrement de votre bannière!\", {\r\n    //                     position: \"top-right\",\r\n    //                     autoClose: 3000,\r\n    //                     hideProgressBar: false,\r\n    //                     closeOnClick: true,\r\n    //                     pauseOnHover: true,\r\n    //                     draggable: true,\r\n    //                     progress: undefined,\r\n    //                 });\r\n    //             } else {\r\n\r\n    //                 toast.success(\"Nouvelle photo de profile   enregistrée!\", {\r\n    //                     position: \"top-right\",\r\n    //                     autoClose: 3000,\r\n    //                     hideProgressBar: false,\r\n    //                     closeOnClick: true,\r\n    //                     pauseOnHover: true,\r\n    //                     draggable: true,\r\n    //                     progress: undefined,\r\n    //                 });\r\n    //             }\r\n    //             updateUser()\r\n    //         };\r\n    //     }\r\n    //     else {\r\n    //     }\r\n\r\n    // }\r\n\r\n    // //update User\r\n    // const updateUser = async () => {\r\n\r\n    //     axios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n    //     ).then((response) => {\r\n    //         setUser(response.data);\r\n\r\n    //     });\r\n\r\n    // }\r\n\r\n\r\n    // // Call Jquery script\r\n    // useEffect(() => {\r\n    //     const loadFile = async () => {\r\n    //         const { modal } = await import(\"../../webapp/js/js_source/modalBox\");\r\n\r\n    //         modal();\r\n    //     };\r\n    //     loadFile();\r\n    // }, []);\r\n\r\n\r\n    // return (\r\n    //     <div className=\"AmateurInfo\">\r\n\r\n    //         <body>\r\n\r\n    //             <div class=\"enthusiastHeader\">\r\n    //                 {/* <!-- BLOC AVATAR TOP - début --> */}\r\n    //                 <div class=\"enthusiastTop\">\r\n    //                     <div class=\"userTop pb-b\">\r\n    //                         <form onChange={handleSubmit(postProfilPicture)}>\r\n    //                             <div className=\"userImg userAvatar\" style={user.iconImage ? { backgroundImage: `url(${URLDayl}images/contentUser/${user.id}/${user.iconImage})` } : { backgroundImage: `url(${defaultLogo})` }} >\r\n    //                                 <div className=\"uploadBtn absBR\" style={{ width: \"36px\", height: \"36px\" }} >\r\n    //                                     <button style={{ width: \"36px\", height: \"36px\", padding: \"0\", border: \"2px solid #4B4B4B\" }} className=\"btn\" /* onClick={() => handleBool1()} */ > <img style={{ width: \"16px\", height: \"16px\" }} src={pen2} alt=\"Modifier l'image\" /></button>\r\n    //                                     <input style={{ width: \"36px\", height: \"36px\" }} name=\"fileUploadField\" type=\"file\" className=\"fileUploadField\" id=\"formIcon\"  {...register(\"file\")} />\r\n    //                                 </div>\r\n    //                             </div>\r\n    //                         </form>\r\n    //                         <h1>{user.firstName} {user.lastName}</h1>\r\n    //                         <p>Mes informations</p>\r\n    //                     </div>\r\n    //                 </div>\r\n    //                 {/* <!-- BLOC AVATAR TOP - fin --> */}\r\n    //             </div>\r\n\r\n    //             {/* <!-- **************************************************\r\n\t// \tBLOC CONTENU DE LA PAGE - début\r\n\t// \t**************************************************** --> */}\r\n    //             <main className=\"enthusiastMain\">\r\n\r\n    //                 {/* <!-- SECTION A PROPOS DE MOI - début --> */}\r\n    //                 <section>\r\n    //                     <form className=\"formCompact\" onSubmit={handleSubmit(postUserInfo)}>\r\n    //                         <h3 className=\"mt-a\">Mes informations personnelles</h3>\r\n    //                         <div className=\"inputInline\">\r\n    //                             <div>\r\n    //                                 <input type=\"text\" size=\"55\" placeholder=\"Nom\" {...register(\"lastName\", { value: user.lastName })} required />\r\n    //                                 <span className=\"required\">*</span>\r\n    //                             </div>\r\n    //                             <div>\r\n    //                                 <input type=\"text\" size=\"55\" placeholder=\"Prénom\" {...register(\"firstName\", { value: user.firstName })} required />\r\n    //                                 <span className=\"required\">*</span>\r\n    //                             </div>\r\n    //                         </div>\r\n    //                         <div className=\"inputInline\">\r\n    //                             <div>\r\n    //                                 <input type=\"text\" size=\"55\" placeholder=\"Votre pseudo\" {...register(\"pseudo\", { value: user.pseudo })} />\r\n    //                             </div>\r\n    //                             <div>\r\n    //                                 <p className=\"legend\">Souhaitez vous que votre pseudo soit repris sur votre profil et dans toutes vos publications ? (dans le cas contraire, votre nom et prénom seront affichés).</p>\r\n    //                                 <span className=\"selectLine\">\r\n    //                                     <input type=\"radio\" name=\"pseudo\" value=\"true\"  {...register(\"visPseudo\", { value: user.visPseudo })} />\r\n    //                                     <label for=\"radio\">oui</label>\r\n    //                                     <input type=\"radio\" name=\"pseudo\" value=\"false\"  {...register(\"visPseudo\", { value: user.visPseudo })} defaultChecked={true} />\r\n    //                                     <label for=\"radio\">non</label>\r\n    //                                 </span>\r\n    //                             </div>\r\n    //                         </div>\r\n\r\n    //                         <div className=\"inputInline\">\r\n    //                             <div>\r\n    //                                 <input type=\"text\" size=\"55\" placeholder=\"Année de naissance\" {...register(\"birthdate\", { value: user.birthdate })} required />\r\n    //                                 <span className=\"required\">*</span>\r\n    //                             </div>\r\n    //                             <div>\r\n    //                                 <input type=\"text\" size=\"55\" placeholder=\"Origine, nationalité\" {...register(\"origin\", { value: user.country })} required />\r\n\r\n    //                             </div>\r\n    //                         </div>\r\n\r\n    //                         <div className=\"inputInline mb-b\">\r\n    //                         <div>\r\n    //                                 <input type=\"text\" size=\"55\" placeholder=\"N° de téléphone\" {...register(\"phone\", { value: user.phone })} />\r\n    //                             </div>\r\n    //                             <div>\r\n    //                                 <input type=\"text\" size=\"55\" placeholder=\"Ville de résidence\" {...register(\"city\", { value: user.city })} />\r\n    //                             </div>\r\n    //                         </div>\r\n\r\n                           \r\n\r\n\r\n    //                         <div className=\"inputInline\">\r\n    //                             <div>\r\n    //                                 <select name=\"année\" {...register(\"language\", { value: user.language })}>\r\n    //                                     <option value=\"\">Langue de référence</option>\r\n    //                                     <option value=\"1\">Français</option>\r\n    //                                     <option value=\"2\">Anglais</option>\r\n    //                                     <option value=\"3\">Espagnol</option>\r\n    //                                 </select>\r\n    //                                 <span className=\"required\">*</span>\r\n    //                             </div>\r\n    //                             <div>\r\n    //                                 <p className=\"legend\">Choisissez votre langue habituelle pour l'affichage du contenu et des fonctionnalités Dayl.</p>\r\n    //                             </div>\r\n    //                         </div>\r\n\r\n\r\n    //                         {/* <h3 className=\"mt-b\">Ma bannière</h3>\r\n    //                         <div className=\"userBanner\" style={user.backgroundImage ? { backgroundImage: `url(${URLDayl}images/contentUser/${user.id}/${user.backgroundImage})` } : { backgroundImage: `url(${defaultBg})` }}>\r\n    //                             <a className=\"openModalNow smart-modal-open topAccountBg\" data-target=\"topAccountBg\" rel=\"nofollow\" >\r\n    //                                 <img src={pen} alt=\"Modifier l'arrière-plan\" />\r\n    //                             </a>\r\n\r\n    //                             <div id=\"topAccountBg\" className=\"smart-modal-content scrollAuto\" style={{ width: \"340px\" }}>\r\n    //       <h3>Modifier l'arrière-plan</h3>\r\n    //       <a className=\"smart-modal-close\">\r\n    //         <img className=\"img-left\" src={close} alt=\"Fermer\" />\r\n    //       </a>\r\n\r\n    //       <p className=\"fileRestriction mt-b mb-a\"> Image au format .jpg ou .png <br /> 2Mo maximum </p>\r\n    //       <form className=\"modalForm\" onSubmit={handleSubmit(onSubmitBg)}>\r\n    //         <div className=\"fileUploadInput\" data-text={fileName} >\r\n    //           <input type=\"file\" className=\"fileUploadField\"   {...register(\"fileBg\")} onChange={(e) => setFileName(e.target.files[0].name)} />\r\n    //         </div>\r\n    //         <input type=\"submit\" className=\"submit mt-b smart-modal-close\" value=\"Enregistrer les modifications\" style={{ position: \"relative\", right: \"0\", top: \"0\" }} />\r\n    //       </form>\r\n    //     </div>\r\n    //                         </div> */}\r\n\r\n\r\n    //                         <h3 className=\"mt-c\">Ma présentation</h3>\r\n    //                         <div className=\"inputInline\">\r\n    //                             <div>\r\n    //                                 <textarea name=\"message\" rows=\"5\" cols=\"33\"   {...register(\"biography\", { value: user.biography, onChange: e => setCount1(e.target.value.length) })}> </textarea>\r\n    //                                 <div className=\"charCount\">{count1}/255</div>\r\n    //                             </div>\r\n    //                             <div>\r\n    //                                 <p className=\"legend\">Présentation synthétique qui apparaitra sur votre profil et sera visible par chaque membre de la communauté Dayl.</p>\r\n    //                             </div>\r\n    //                         </div>\r\n\r\n\r\n    //                         <h3 className=\"mt-c\">Mes centres d'intérêts artistiques <span /><a className=\"openModalNow  renameIt\" data-target=\"renameSection\" data-tooltip-2=\"Vous avez la possibilité de modifier le titre de cette section\" rel=\"nofollow\"><img src={pen2} alt=\"Renommer cette section\" /></a></h3>\r\n    //                         {/* <!-- Modal renommer cette section - début --> */}\r\n    //                         <div id=\"renameSection\" className=\"smart-modal-content scrollAuto\" style={{ width: \"380px\" }}>\r\n    //                             <h3>Renommer cette section</h3>\r\n    //                             <a className=\"smart-modal-close\"><img className=\"img-left\" src={close} alt=\"Fermer\" /></a>\r\n    //                             <p className=\"mt-b\">Nouveau nom de cette section:</p>\r\n    //                             <div className=\"simpleModalTextSubmit\">\r\n    //                                 <input type=\"text\" placeholder=\"Nom de la liste\" />\r\n    //                                 <button type=\"submit\">renommer</button>\r\n    //                             </div>\r\n    //                         </div>\r\n    //                         {/* <!-- Modal renommer cette section - fin --> */}\r\n    //                         <div className=\"inputInline\">\r\n    //                             <div>\r\n    //                                 <textarea name=\"message\" rows=\"5\" cols=\"33\"  {...register(\"interest\", { value: user.interest, onChange: e => setCount2(e.target.value.length) })}></textarea>\r\n    //                                 <div className=\"charCount\">{count2}/800</div>\r\n    //                             </div>\r\n    //                             <div>\r\n    //                                 <p className=\"legend\">Présentation synthétique qui apparaitra sur votre profil et sera visible par chaque membre de la communauté Dayl.</p>\r\n    //                             </div>\r\n    //                         </div>\r\n    //                         <h4 className=\"mt-a\">Hashtags associés à vos centres d'intérêts artistiques</h4>\r\n    //                         <input type=\"text\" size=\"55\" placeholder=\"Ex : expressionnisme, surréalisme …\" />\r\n    //                         <div className=\"hashList toLeft\">\r\n    //                             <a href=\"#\">#hashtag</a>\r\n    //                             <a href=\"#\">#hashtag</a>\r\n    //                             <a href=\"#\">#hashtag</a>\r\n    //                             <a href=\"#\">#hashtag</a>\r\n    //                             <a href=\"#\">#hashtag</a>\r\n    //                             <a href=\"#\">#hashtag</a>\r\n    //                             <a href=\"#\">#hashtag</a>\r\n    //                             <a href=\"#\">#hashtag</a>\r\n    //                         </div>\r\n\r\n\r\n    //                         <h3 className=\"mt-c\">Disposez-vous d’une expertise dans le domaine de l’art ?</h3>\r\n    //                         <div className=\"inputInline\">\r\n    //                             <div>\r\n    //                                 <span className=\"selectLine\">\r\n    //                                     <input type=\"radio\" name=\"expert\" value=\"true\" onChange={e => setBoolExpert(true)} />\r\n    //                                     <label for=\"radio\">oui</label>\r\n    //                                     <input type=\"radio\" name=\"expert\" value=\"false\" onChange={e => setBoolExpert(false)} defaultChecked={true} />\r\n    //                                     <label for=\"radio\">non</label>\r\n    //                                 </span>\r\n    //                             </div>\r\n    //                         </div>\r\n    //                         {/* <!-- BLOC INFOS EXPERTISE (apparait lorsque input radio value = oui) - début --> */}\r\n    //                         {boolExpert === true &&\r\n    //                             <div>\r\n    //                                 <div className=\"inputInline\">\r\n    //                                     <div>\r\n    //                                         <textarea name=\"message\" rows=\"5\" cols=\"33\"   {...register(\"expert\", { value: user.expert, onChange: e => setCount3(e.target.value.length) })}></textarea>\r\n    //                                         <div className=\"charCount\">{count3}/255</div>\r\n    //                                     </div>\r\n    //                                     <div>\r\n    //                                         <p className=\"legend\">Présentation synthétique qui apparaitra sur votre profil et sera visible par chaque membre de la communauté Dayl.</p>\r\n    //                                     </div>\r\n    //                                 </div>\r\n    //                                 <h4 className=\"mt-a\">Hashtags associés à votre expertise</h4>\r\n    //                                 <input type=\"text\" size=\"55\" placeholder=\"Ex : expressionnisme, surréalisme …\" />\r\n    //                                 <div className=\"hashList toLeft\">\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                     <a href=\"#\">#hashtag</a>\r\n    //                                 </div>\r\n    //                                 <h4 className=\"mt-a\">Participer à de la création de contenu pourrait vous intéresser ?</h4>\r\n    //                                 <div className=\"inputInline\">\r\n    //                                     <div>\r\n    //                                         <span className=\"selectLine\">\r\n    //                                             <input type=\"radio\" name=\"crea\" value=\"\" onChange={e => setBoolCrea(true)} />\r\n    //                                             <label for=\"radio\">oui</label>\r\n    //                                             <input type=\"radio\" name=\"crea\" value=\"\" onChange={e => setBoolCrea(false)} defaultChecked={true} />\r\n    //                                             <label for=\"radio\">non</label>\r\n    //                                         </span>\r\n    //                                     </div>\r\n    //                                 </div>\r\n    //                                 {boolCrea === true &&\r\n    //                                     <div>\r\n    //                                         <h4 className=\"mt-a\">Hashtags associés à votre création</h4>\r\n    //                                         <input type=\"text\" size=\"55\" placeholder=\"Ex : expressionnisme, surréalisme …\" />\r\n    //                                         <div className=\"hashList toLeft\">\r\n    //                                             <a href=\"#\">#hashtag</a>\r\n    //                                             <a href=\"#\">#hashtag</a>\r\n    //                                             <a href=\"#\">#hashtag</a>\r\n    //                                             <a href=\"#\">#hashtag</a>\r\n    //                                             <a href=\"#\">#hashtag</a>\r\n    //                                             <a href=\"#\">#hashtag</a>\r\n    //                                             <a href=\"#\">#hashtag</a>\r\n    //                                             <a href=\"#\">#hashtag</a>\r\n    //                                         </div>\r\n    //                                     </div>}\r\n    //                             </div>}\r\n    //                         {/* <!-- BLOC INFOS EXPERTISE (apparait lorsque input radio value = oui) - fin --> */}\r\n\r\n\r\n    //                         <h3 className=\"mt-c\">Mes réseaux sociaux</h3>\r\n    //                         <div className=\"inputInline userSN\">\r\n    //                             <input type=\"text\" className=\"userWebsite\" size=\"55\" placeholder=\"Site internet\" {...register(\"webSite\", { value: user.webSite })} />\r\n    //                             <input type=\"text\" className=\"userFacebook\" size=\"55\" placeholder=\"Page Facebook\" {...register(\"facebookAccount\", { value: user.facebookAccount })} />\r\n    //                         </div>\r\n    //                         <div className=\"inputInline userSN\">\r\n    //                             <input type=\"text\" className=\"userInstagram\" size=\"55\" placeholder=\"Page Instagram\" {...register(\"instagramAccount\", { value: user.instragramAccount })} />\r\n    //                             <input type=\"text\" className=\"userPinterest\" size=\"55\" placeholder=\"Page Pinterest\" {...register(\"pinterestAccount\", { value: user.pinterestAccount })} />\r\n    //                         </div>\r\n    //                         <div className=\"inputInline userSN\">\r\n    //                             <input type=\"text\" className=\"userTwitter\" size=\"55\" placeholder=\"Page Twitter\" {...register(\"twitterAccount\", { value: user.twitterAccount })} />\r\n    //                             <input type=\"text\" className=\"userLinkedin\" size=\"55\" placeholder=\"Page LinkedIn\" {...register(\"linkedinAccount\", { value: user.linkedinAccount })} />\r\n    //                         </div>\r\n    //                         <div className=\"inputInline mt-c\">\r\n    //                             <div>\r\n    //                                 <input type=\"reset\" className=\"saveDraftBtn mt-a\" value=\"Sauvegarder comme brouillon\" />\r\n    //                             </div>\r\n    //                             <div>\r\n    //                                 <input type=\"submit\" className=\"submitFormBtn mt-a\" value=\"Enregistrer\" />\r\n    //                             </div>\r\n    //                         </div>\r\n\r\n    //                     </form>\r\n\r\n\r\n    //                 </section>\r\n    //                 {/* <!-- SECTION A PROPOS DE MOI - fin --> */}\r\n\r\n\r\n    //             </main>\r\n    //             {/* <!-- **************************************************\r\n\t// \tBLOC CONTENU DE LA PAGE - fin\r\n\t// \t**************************************************** --> */}\r\n\r\n    //         </body>\r\n    //     </div>\r\n\r\n    // );\r\n}\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/component/UserInfo/AmateurInfo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "AmateurInfo",
    "memberof": "src/component/UserInfo/AmateurInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/UserInfo/AmateurInfo.js~AmateurInfo",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/UserInfo/AmateurInfo.js",
    "importStyle": "AmateurInfo",
    "description": "This component is used to update your informations",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "users/update : edit user information"
      },
      {
        "types": [
          "*"
        ],
        "description": "images/uploadUserIcon?userId=${user.id} :edit profil picture"
      },
      {
        "types": [
          "*"
        ],
        "description": "users/${user.id} : update user informations"
      }
    ],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "file",
    "name": "src/index.js",
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n   document.getElementById('root')\r\n);",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "src/services/Api.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * @ignore\r\n */\r\n\r\nexport default function Api() {\r\n\r\n    const [authToken, setauth] = useState(\"\");\r\n\r\n    headers = {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      };\r\n\r\n      BASE_URL = '/api/dayl';\r\n\r\n\r\n    return ( <div></div>);\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/services/Api.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "Api",
    "memberof": "src/services/Api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/Api.js~Api",
    "access": "public",
    "export": true,
    "importPath": "client/src/services/Api.js",
    "importStyle": "Api",
    "description": "",
    "lineNumber": 8,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "src/services/constantes.js",
    "content": "\r\n/**\r\n * Constant used in the whole website\r\n\r\n */\r\n\r\nexport const SALT = \"PAINTING_NOVAGEN_ETC\";\r\nexport const URLDayl = \"http://162.19.52.131:8088/\"\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/services/constantes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "SALT",
    "memberof": "src/services/constantes.js",
    "static": true,
    "longname": "src/services/constantes.js~SALT",
    "access": "public",
    "export": true,
    "importPath": "client/src/services/constantes.js",
    "importStyle": "{SALT}",
    "description": "Constant used in the whole website",
    "lineNumber": 7,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "URLDayl",
    "memberof": "src/services/constantes.js",
    "static": true,
    "longname": "src/services/constantes.js~URLDayl",
    "access": "public",
    "export": true,
    "importPath": "client/src/services/constantes.js",
    "importStyle": "{URLDayl}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "src/services/ScrollToTop.js",
    "content": "import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n  \r\n\r\n/**\r\n * This function is used to scroll to the top of the page when we render a new page\r\n\r\n */\r\n\r\n\r\nexport default function GoToTop() {\r\n  const routePath = useLocation();\r\n  const onTop = () => {\r\n    window.scrollTo(0, 0);\r\n  }\r\n  useEffect(() => {\r\n    onTop()\r\n  }, [routePath]);\r\n  \r\n  return null;\r\n}",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/services/ScrollToTop.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "GoToTop",
    "memberof": "src/services/ScrollToTop.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/ScrollToTop.js~GoToTop",
    "access": "public",
    "export": true,
    "importPath": "client/src/services/ScrollToTop.js",
    "importStyle": "GoToTop",
    "description": "This function is used to scroll to the top of the page when we render a new page",
    "lineNumber": 11,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "file",
    "name": "src/view/ArtistDetailPage.js",
    "content": "import React from \"react\";\r\nimport Artist from \"../component/ArtistDetailPage/Artist\";\r\nimport ListPaintArtist from \"../component/ArtistDetailPage/ListPaintArtist\";\r\nimport SimilarArtist from \"../component/ArtistDetailPage/SimilarArtist\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\n/**\r\n * This component display artist Page\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @param {number} paintId - selected artist Id\r\n */\r\n\r\nexport default function ArtistDetailpage({user,setUser,paintId, isLogged}) {\r\n\r\n\r\n\r\n    const location = useLocation();\r\n    paintId =location.state;\r\n\r\n\twindow.scrollTo({top: 0});\r\n\r\n    return (\r\n        <div>\r\n            <Artist paintId =  {paintId}  user = {user} setUser={setUser} isLogged={isLogged}/>\r\n          \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/ArtistDetailPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 149,
    "kind": "function",
    "name": "ArtistDetailpage",
    "memberof": "src/view/ArtistDetailPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/ArtistDetailPage.js~ArtistDetailpage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/ArtistDetailPage.js",
    "importStyle": "ArtistDetailpage",
    "description": "This component display artist Page",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "selected artist Id"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "src/view/Atelier.js",
    "content": "import React from \"react\";\r\nimport MenuAtelier from \"../component/Atelier/MenuAtelier\"\r\nimport Accueil from \"../component/Atelier/Accueil\";\r\nimport Biography from \"../component/Atelier/Biography\";\r\n\r\n\r\n/**\r\n * This component display workshop Page\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n *  @param {boolean} isLogged - test if the user is logged\r\n * @param {boolean} setIsLogged - isLogged setter\r\n */\r\n\r\nexport default function Atelier({user,setIsLogged, isLogged,setUser}) {\r\n  return (\r\n\r\n\r\n    <div>\r\n       \r\n      <MenuAtelier user = {user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser}/>\r\n      <Biography user = {user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser}/>\r\n\r\n      \r\n     \r\n     \r\n      {/* <Draft  user = {user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser}/>\r\n      <ListPaintAtelier  user = {user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser}/>*/}\r\n      \r\n    </div> \r\n  );\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/Atelier.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "function",
    "name": "Atelier",
    "memberof": "src/view/Atelier.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/Atelier.js~Atelier",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/Atelier.js",
    "importStyle": "Atelier",
    "description": "This component display workshop Page",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsLogged",
        "description": "isLogged setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "file",
    "name": "src/view/CompteAmateurPage.js",
    "content": "import React from \"react\";\r\nimport DisplayUser from \"../component/CompteAmateurPage/DisplayUser\";\r\nimport TabAmateurs from \"../component/CompteAmateurPage/TabAmateur\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n/**\r\n * This component display the User Page\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {boolean} isLogged - test if the user is logged\r\n * @param {boolean} setIsLogged - isLogged setter\r\n *  @param {number} isActive - tab selection\r\n *  @param {number} setIsActive - isActive setter\r\n */\r\n\r\nexport default function CompteAmateurPage({ setIsLogged, isLogged, isActive, setIsActive, user, setUser}) {\r\n\r\n  // const { state } = useLocation();\r\n  // const [user, setUser] = useState(state);\r\n\r\nif(!user){\r\n  return(<div style={{bottom: \"50%\",left: \"50%\", position: \"absolute\"}}></div>)\r\n}\r\n  return (\r\n\r\n\r\n    <div>\r\n      <DisplayUser isActive={isActive} setIsActive={setIsActive} user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser} />\r\n      <TabAmateurs isActive={isActive} setIsActive={setIsActive} user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser} />\r\n\r\n    </div>\r\n  );\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/CompteAmateurPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "CompteAmateurPage",
    "memberof": "src/view/CompteAmateurPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/CompteAmateurPage.js~CompteAmateurPage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/CompteAmateurPage.js",
    "importStyle": "CompteAmateurPage",
    "description": "This component display the User Page",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsLogged",
        "description": "isLogged setter"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "isActive",
        "description": "tab selection"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsActive",
        "description": "isActive setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "file",
    "name": "src/view/HomePage.js",
    "content": "import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport MostMatched from \"../component/HomePage/MostMatched\";\r\nimport SearchArtist from \"../component/HomePage/SearchArtist\";\r\nimport SearchBar from \"../component/HomePage/SearchBar\";\r\nimport SearchColor from \"../component/HomePage/SearchColor\";\r\nimport MatchingImage from \"../component/HomePage/MatchingImage\";\r\nimport RandomInfo from \"../component/HomePage/RandomInfo\";\r\n\r\n/**\r\n * This component display the Explorer Page (home page)\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {boolean} isLogged - test if the user is logged\r\n */\r\n\r\nexport default function HomePage({user,setUser, isLogged}) {\r\n\r\n\r\n  //   // Call Jquery script\r\n  // useEffect(() => {\r\n  //   const loadFile = async () => {\r\n  //     const { select } = await import(\"../webapp/js/customFormElements.min\");\r\n\r\n\r\n  //     select();\r\n  //   };\r\n  //   loadFile();\r\n  // }, []);\r\n\r\n\r\n  \r\n\r\n  //   return (\r\n  //       <div >\r\n          \r\n  //           <SearchBar user = {user}  isLogged={isLogged} setUser={setUser}/>\r\n  //           <MostMatched user = {user} isLogged={isLogged} setUser={setUser}/>\r\n  //           <SearchArtist user = {user}  isLogged={isLogged} setUser={setUser}/>\r\n  //            <SearchColor user = {user}  isLogged={isLogged} setUser={setUser}/> \r\n  //           <MatchingImage user = {user}  isLogged={isLogged} setUser={setUser}/> \r\n  //            <RandomInfo user = {user}  isLogged={isLogged} setUser={setUser} /> \r\n  //       </div>\r\n\r\n  //   );\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/HomePage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "HomePage",
    "memberof": "src/view/HomePage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/HomePage.js~HomePage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/HomePage.js",
    "importStyle": "HomePage",
    "description": "This component display the Explorer Page (home page)",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "return": null
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "src/view/ListeAmateurPage.js",
    "content": "import React from \"react\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport DisplayInfoList from \"../component/ListeAmateurPage/ DisplayInfoList\";\r\nimport DisplayList from \"../component/ListeAmateurPage/DisplayList\";\r\n\r\n\r\n/**\r\n * This component display the List Page\r\n * @param {object} user - user object from api\r\n * @param {number} paintId - list Id\r\n * @param {boolean} isLogged - test if the user is logged\r\n\r\n */\r\n\r\nexport default function ListeAmateurPage({user,isLogged, paintId}) {\r\n\r\n\r\n\r\n    const location = useLocation();\r\n     paintId = location.state;\r\n\r\n    return (\r\n        <div>\r\n            <DisplayInfoList paintId =  {paintId} user = {user} isLogged = {isLogged}/>\r\n            <DisplayList paintId =  {paintId} user = {user} isLogged = {isLogged} />\r\n          \r\n  \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/ListeAmateurPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "function",
    "name": "ListeAmateurPage",
    "memberof": "src/view/ListeAmateurPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/ListeAmateurPage.js~ListeAmateurPage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/ListeAmateurPage.js",
    "importStyle": "ListeAmateurPage",
    "description": "This component display the List Page",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "list Id"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "src/view/LogIn.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport sha1 from \"sha1\";\r\nimport { SALT, URLDayl } from \"../services/constantes\"\r\nimport { Link } from \"react-router-dom\"\r\nimport useCookie, { getCookie, setCookie } from 'react-use-cookie';\r\nimport { toast } from \"react-toastify\"\r\nimport vis from \"../webapp/img/icons/password_display_1.svg\"\r\nimport unvis from \"../webapp/img/icons/password_hide_1.svg\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n/**\r\n * This component display the Login page\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {boolean} setIsLogged - isLogged setter\r\n * @emits - users/login : connect a user\r\n * @emits - paintingEntity/randomPaintings30 : get a random painting\r\n */\r\n\r\nexport default function LogIn({ user, setUser, setIsLogged}) {\r\n//   const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n//   // const [session, setSession] = useState(null);\r\n//   const [randImg, setRandImg] = useState([]);\r\n//   const [boolVisibility, setBoolVisibility] = useState(false);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n\r\n\r\n//   //Connexion au compte via l'api//\r\n//   const onSubmit = (data, event) => {\r\n//     event.preventDefault();\r\n//     let log = false;\r\n//     axios.post(URLDayl + \"users/login\", { email: data.trueEmail, password: sha1(data.truePassword + SALT /*Encryption sha1 + SALT*/) },\r\n//       { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n//     )\r\n//       .then((response) => {\r\n\r\n//         setUser({ ...user, ...response.data });\r\n// console.log(response.data)\r\n//         if (response.data) {\r\n//           setIsLogged(true);\r\n//           log = true;\r\n//           localStorage.setItem(\"id\", response.data.id)\r\n        \r\n//           //redirection vers la page compte\r\n//           navigate(`../view/CompteAmateurPage.js`, { state: response.data })\r\n//         }\r\n\r\n\r\n//         toast.success(\"Vous êtes connecté!\", {\r\n//           position: \"top-right\",\r\n//           autoClose: 3000,\r\n//           hideProgressBar: false,\r\n//           closeOnClick: true,\r\n//           pauseOnHover: true,\r\n//           draggable: true,\r\n//           progress: undefined,\r\n//         });\r\n\r\n\r\n\r\n//       }).catch((e) => {\r\n//         console.log(e)\r\n//         toast.warning(\"Identifiants ou mot de passe incorrect!\", {\r\n//           position: \"top-right\",\r\n//           autoClose: 3000,\r\n//           hideProgressBar: false,\r\n//           closeOnClick: true,\r\n//           pauseOnHover: true,\r\n//           draggable: true,\r\n//           progress: undefined,\r\n//         });\r\n//       });\r\n\r\n\r\n\r\n//     // setSession({ truePassword: null })\r\n\r\n\r\n\r\n\r\n//   }\r\n//   // get 30 random Paint //\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(URLDayl + \"paintingEntity/randomPaintings30\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n//       .then((response) => {\r\n//         setRandImg(response.data);\r\n\r\n\r\n//       });\r\n//   }, []);\r\n\r\n//   function handleVisibility() {\r\n\r\n//     if (boolVisibility === true) {\r\n//       setBoolVisibility(false)\r\n//     }\r\n//     else {\r\n//       setBoolVisibility(true);\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"LogIn\">\r\n//       <div className=\"accountFront\">\r\n//         {/* <!-- Rangée de gauche (formulaire) - début --> */}\r\n//         <div className=\"splitLeft\">\r\n//           <h1>Connexion</h1>\r\n//           <form className=\"formCompact\" onSubmit={handleSubmit(onSubmit)}>\r\n//             <input  {...register(\"trueEmail\")} /* value={session?.trueEmail} onChange={e => setSession({ ...session, trueEmail: e.target.value })} */ type=\"email\" className=\"name\" size=\"35\" placeholder=\"Email\" required />\r\n//             <img className=\"img-left\" src={boolVisibility === true ? unvis : vis} alt=\"Fermer\" onClick={handleVisibility} style={{ width: \"20px\", height: \"20px\", position: \"absolute\", zIndex: \"99999\", top: \"72px\", right: \"10px\" }} />\r\n//             <input {...register(\"truePassword\")} /* value={session?.truePassword} onChange={e => setSession({ ...session, truePassword: e.target.value })} */ type={boolVisibility === true ? \"\" : \"password\"} className=\"password\" placeholder=\"Mot de passe\" minlength=\"8\" required />\r\n//             <input type=\"submit\" className=\"submit mt-a\" value=\"Connexion\" />\r\n//           </form>\r\n//           <a href=\"compte-mdp.html\" className=\"accountLink mb-a\">Mot de passe oublié ?</a>\r\n//           <p>Vous n'avez pas de compte ? <Link to=\"../view/SignIn.js\" className=\"accountLink\">Inscription</Link></p>\r\n//         </div>\r\n//         {/* <!-- Rangée de gauche (formulaire) - fin --> */}\r\n\r\n//         {/* <!-- Rangée de droite (arrière-plan dynamique) - début --> */}\r\n//         <div className=\"splitRight\" style={{ backgroundImage: `url(${URLDayl}images/content/${randImg.length > 0 && randImg[0].artistId}/${randImg.length > 0 && randImg[0].urlImage})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\" }} >\r\n//           <div>\r\n//             <p className=\"itemArtist\">{randImg.length > 0 && randImg[0].artisteName}</p>\r\n//             <p className=\"itemName\" >{randImg.length > 0 && randImg[0].name}</p>\r\n//             <p className=\"itemYear\">{randImg.length > 0 && randImg[0].year}</p>\r\n//           </div>\r\n//         </div>\r\n//         {/* <!-- Rangée de droite (arrière-plan dynamique) - début --> */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/LogIn.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "LogIn",
    "memberof": "src/view/LogIn.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/LogIn.js~LogIn",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/LogIn.js",
    "importStyle": "LogIn",
    "description": "This component display the Login page",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsLogged",
        "description": "isLogged setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "users/login : connect a user"
      },
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/randomPaintings30 : get a random painting"
      }
    ],
    "return": null
  },
  {
    "__docId__": 160,
    "kind": "file",
    "name": "src/view/MatchingColor.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ColorChooser from \"../component/MatchingColor/ColorChooser\";\r\nimport ResultMatchingColor from \"../component/MatchingColor/ResultMatchingColor\";\r\nimport { ColorPicker, useColor } from \"react-color-palette\";\r\nimport \"react-color-palette/lib/css/styles.css\";\r\n\r\n\r\n/**\r\n * This component display the Matching Color Page\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {boolean} isLogged - test if the user is logged\r\n */\r\n\r\nexport default function MatchingColor({ user, setUser, isLogged }) {\r\n\r\n    const location = useLocation();\r\n    const [color, setColor] = useColor();\r\n\r\n\r\n    useEffect(() => {\r\n        setColor(location.state);\r\n       \r\n    }, []);\r\n    console.log(color)\r\n    return (\r\n        <div className=\"MatchingColor\">\r\n\r\n            <ColorChooser user={user} setUser={setUser} isLogged={isLogged} color={color} setColor={setColor} />\r\n\r\n            <ResultMatchingColor color={color} user={user} setUser={setUser} isLogged={isLogged} />\r\n        </div>\r\n\r\n    );\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/MatchingColor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "MatchingColor",
    "memberof": "src/view/MatchingColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/MatchingColor.js~MatchingColor",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/MatchingColor.js",
    "importStyle": "MatchingColor",
    "description": "This component display the Matching Color Page",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "src/view/MatchingImage.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { URLDayl } from \"../services/constantes\"\r\nimport { Link } from \"react-router-dom\";\r\nimport Fav from \"../component/general/Fav\";\r\nimport ListModal from \"../component/general/ListModal\";\r\nimport close from \"../webapp/img/icons/ico_close_2.svg\"\r\n\r\n/**\r\n * This component display the Matching Page with uploaded image\r\n * @param {object} user - user object from api\r\n * @param {boolean} isLogged - test if the user is logged\r\n * @emits - images/submitImageForMatching?fileName=${data.itemName}&artist=${data.artistName} : submit an image for matching\r\n */\r\n\r\nexport default function MatchingImage({ user, isLogged }) {\r\n\r\n\r\n// \tconst { state } = useLocation();\r\n\r\n// \tconst [result, setResult] = useState(state.result);\r\n// \tconst [styleChoice, setStyleChoice] = useState(\"1\");\r\n// \tconst [listArtist, setListArtist] = useState([]);\r\n// \tconst [boolModalArtist, setBoolModalArtist] = useState(false);\r\n// \tconst [boolAllArtist, setBoolAllArtist] = useState(true);\r\n// \tconst [orderDate, setOrderDate] = useState(0);\r\n// \tconst [tempList, setTempList] = useState([]);\r\n// \tconst [image, setImage] = useState(state.image)\r\n// \tconst [fileName, setFileName] = useState(\"Glissez/déposez votre fichier ici\")\r\n// \tconst { register, handleSubmit } = useForm();\r\n\r\n\r\n\t\r\n\t\r\n\t\r\n\r\n\r\n\r\n// useEffect(() => {\r\n\r\n// \tlet tempListArtist = result.filter((v, i) => {\r\n// \t\treturn result.map((res) => res.artistId).indexOf(v.artistId) == i\r\n// \t})\r\n// \ttempListArtist = tempListArtist.map((el) => { return { ...el, boolList: true } });\r\n\r\n// \tconsole.log(tempListArtist)\r\n\r\n// \tsetListArtist([...tempListArtist])\r\n\r\n// }, []);\r\n\r\n\r\n\r\n// \tfunction onSubmit(data) {\r\n\r\n// \t\tvar file = data.file[0];\r\n// \t\tvar formdata = new FormData();\r\n// \t\tformdata.append('image', file);\r\n// \t\tsetImage(URL.createObjectURL(file));\r\n// \t\tif (!data.itemName) {\r\n// \t\t\tdata.itemName = \" \";\r\n// \t\t}\r\n// \t\tif (!data.artistName) {\r\n// \t\t\tdata.artistName = \" \";\r\n// \t\t}\r\n\r\n// \t\tvar xhr = new XMLHttpRequest();\r\n// \t\txhr.open('POST', URLDayl + `images/submitImageForMatching?fileName=${data.itemName}&artist=${data.artistName}`);\r\n// \t\t//xhr.setRequestHeader('Content-Type', 'multipart/form-data');\r\n// \t\txhr.send(formdata);\r\n\r\n\r\n// \t\txhr.onreadystatechange = function () {\r\n// \t\t\tif (xhr.readyState !== 4) return;\r\n// \t\t\t//si probleme on affiche l'erreur\r\n// \t\t\tif (xhr.status !== 200) {\r\n// \t\t\t\tconsole.log(xhr);\r\n// \t\t\t\t//sinon on affiche les resultats\r\n// \t\t\t} else {\r\n\r\n// \t\t\t\tif (styleChoice === \"1\") {\r\n// \t\t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).style).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).style).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t}\r\n// \t\t\t\tif (styleChoice === \"2\") {\r\n// \t\t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).color).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).color).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t}\r\n// \t\t\t\tif (styleChoice === \"3\") {\r\n// \t\t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).content).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).content).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t}\r\n// \t\t\t\tif (styleChoice === \"4\") {\r\n// \t\t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).color_content).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).color_content).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t}\r\n// \t\t\t\tif (styleChoice === \"5\") {\r\n// \t\t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).color_style).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).color_style).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t}\r\n// \t\t\t\tif (styleChoice === \"6\") {\r\n// \t\t\t\t\tsetResult(Object.values(JSON.parse(xhr.responseText).content_style).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t\tsetTempList(Object.values(JSON.parse(xhr.responseText).content_style).map((el) => { return { ...el, boolVis: true } }));\r\n// \t\t\t\t}\r\n\r\n// \t\t\t\tlet tempListArtist = Object.values(JSON.parse(xhr.responseText).style).filter((v, i) => {\r\n// \t\t\t\t\treturn Object.values(JSON.parse(xhr.responseText).style).map((res) => res.artistId).indexOf(v.artistId) == i\r\n// \t\t\t\t})\r\n// \t\t\t\ttempListArtist = tempListArtist.map((el) => { return { ...el, boolList: true } });\r\n\r\n// \t\t\t\tconsole.log(tempListArtist)\r\n\r\n// \t\t\t\tsetListArtist([...tempListArtist])\r\n\r\n// \t\t\t}\r\n// \t\t}\r\n// \t}\r\n\r\n\r\n// \t//Choisis les artistes à trier\r\n// \tfunction setTriArtist(index) {\r\n\r\n// \t\tlet tempList = [...listArtist];\r\n// \t\tlet tempResult = [...result];\r\n\r\n// \t\tif (tempList[index].boolList === true) {\r\n// \t\t\ttempList[index].boolList = false;\r\n// \t\t\ttempResult.map((res) => {\r\n// \t\t\t\tif (res.artistId === tempList[index].artistId) res.boolVis = false\r\n// \t\t\t})\r\n// \t\t}\r\n// \t\telse {\r\n// \t\t\ttempList[index].boolList = true;\r\n// \t\t\ttempResult.map((res) => {\r\n// \t\t\t\tif (res.artistId === tempList[index].artistId) res.boolVis = true\r\n// \t\t\t})\r\n// \t\t}\r\n// \t\tsetListArtist([...tempList]);\r\n// \t\tsetResult([...tempResult]);\r\n\r\n// \t\ttestAllArtists();\r\n\r\n// \t};\r\n// \t//Test si tt les artistes sont selectionnés\r\n// \tfunction testAllArtists() {\r\n// \t\tlet count = 0;\r\n\r\n// \t\tlistArtist.map((artist) => {\r\n// \t\t\tif (artist.boolList === true) {\r\n// \t\t\t\tcount++;\r\n// \t\t\t}\r\n\r\n// \t\t})\r\n\r\n// \t\tif (count === listArtist.length) {\r\n\r\n// \t\t\tsetBoolAllArtist(true)\r\n\r\n\r\n// \t\t}\r\n// \t\telse {\r\n\r\n\r\n// \t\t\tsetBoolAllArtist(false)\r\n// \t\t}\r\n\r\n\r\n// \t}\r\n// \t//OnClick bouton \"Tous\"\r\n// \tfunction allArtists() {\r\n\r\n// \t\tlet tempList = [...listArtist];\r\n\r\n// \t\tif (boolAllArtist === true) {\r\n// \t\t\tfor (let i = 0; i < tempList.length; i++)\r\n// \t\t\t\ttempList[i].boolList = false;\r\n// \t\t\tfor (let i = 0; i < result.length; i++)\r\n// \t\t\t\tresult[i].boolVis = false;\r\n// \t\t\tsetBoolAllArtist(false)\r\n// \t\t}\r\n// \t\telse {\r\n// \t\t\tfor (let i = 0; i < tempList.length; i++)\r\n// \t\t\t\ttempList[i].boolList = true;\r\n// \t\t\tfor (let i = 0; i < result.length; i++)\r\n// \t\t\t\tresult[i].boolVis = true;\r\n// \t\t\tsetBoolAllArtist(true)\r\n// \t\t}\r\n// \t\tsetListArtist([...tempList])\r\n\r\n// \t}\r\n\r\n// \t//Ouvre la modale de tri artiste\r\n// \tfunction openModalArtist() {\r\n\r\n// \t\tif (boolModalArtist === true) {\r\n// \t\t\tsetBoolModalArtist(false)\r\n// \t\t}\r\n// \t\telse {\r\n// \t\t\tsetBoolModalArtist(true)\r\n// \t\t}\r\n\r\n\r\n// \t}\r\n\r\n// \t//fonction de tri par date\r\n// \tfunction handleOrderDate() {\r\n// \t\tlet bufferOrder;\r\n// \t\tlet bufferOrder2;\r\n// \t\tif (orderDate === 0) {\r\n// \t\t\t//tri ordre decroissant\r\n// \t\t\tsetResult(result.sort((a, b) => b.year - a.year));\r\n\r\n// \t\t\tsetOrderDate(1);\r\n// \t\t}\r\n// \t\telse if (orderDate === 1) {\r\n// \t\t\t//on stock les oeuvres dont la date = 0 ou null\r\n// \t\t\tbufferOrder = result.filter(function (paint) { return paint.year === null || paint.year === 0; })\r\n\r\n// \t\t\t//tri ordre croissant sans les 0 et null\r\n// \t\t\tbufferOrder2 = result.filter(function (paint) { return paint.year > 0; }).sort((a, b) => a.year - b.year);\r\n\r\n// \t\t\t//on rajoute les oauvres trié au tableau de 0\r\n// \t\t\tbufferOrder.unshift(...bufferOrder2)\r\n\r\n// \t\t\tsetResult(bufferOrder)\r\n// \t\t\tsetOrderDate(1);\r\n\r\n// \t\t\tsetOrderDate(2);\r\n// \t\t}\r\n// \t\telse if (orderDate === 2) {\r\n// \t\t\tsetResult(tempList);\r\n// \t\t\tsetOrderDate(0);\r\n// \t\t}\r\n// \t}\r\n\r\n// \treturn (\r\n// \t\t<div className=\"MatchingImage\">\r\n\r\n// \t\t\t{/* <!-- ******************************************************\r\n// \t\t\tSECTION MATCHING IMAGE UPLOAD - début\r\n// \t\t\t****************************************************** --> */}\r\n// \t\t\t<section className=\"center-col\">\r\n// \t\t\t\t<div className=\"cont-f-w\">\r\n\r\n// \t\t\t\t\t{/* <!-- formulaire de matching - début --> */}\r\n// \t\t\t\t\t<div className=\"matchingImgSearch\">\r\n\r\n// \t\t\t\t\t\t<h1>Choisissez une image, une peinture sur votre ordinateur</h1>\r\n// \t\t\t\t\t\t<p className=\"title\">Une de vos oeuvres ? Une peinture en photo ?</p>\r\n\r\n// \t\t\t\t\t\t<form id=\"ImgMatchingSearch\" onSubmit={handleSubmit(onSubmit)}>\r\n// \t\t\t\t\t\t\t<input type=\"text\" id=\"artistName\" {...register(\"artistName\")} /* value={form?.artistName} onChange={e => setForm({ ...form, artistName: e.target.value })} */ placeholder=\"Un nom d’artiste? (facultatif)\" />\r\n// \t\t\t\t\t\t\t<input type=\"text\" id=\"artistItemName\" {...register(\"itemName\")}/* value={form?.itemName} onChange={e => setForm({ ...form, itemName: e.target.value })} */ placeholder=\"Un nom d’oeuvre? (facultatif)\" />\r\n\r\n// \t\t\t\t\t\t\t<div style={{ marginRight: \"15px\", bottom: \"10px\" }}>\r\n// \t\t\t\t\t\t\t\t<select id=\"type\" name=\"type\" className=\"searchFilter\" value={styleChoice} onChange={e => setStyleChoice(e.target.value)} style={{ alignItems: \"center\" }}>\r\n// \t\t\t\t\t\t\t\t\t<option value=\"1\">Style</option>\r\n// \t\t\t\t\t\t\t\t\t<option value=\"2\">Couleur</option>\r\n// \t\t\t\t\t\t\t\t\t<option value=\"3\">Contenu</option>\r\n// \t\t\t\t\t\t\t\t\t<option value=\"4\">couleur et contenu</option>\r\n// \t\t\t\t\t\t\t\t\t<option value=\"5\">couleur et style</option>\r\n// \t\t\t\t\t\t\t\t\t<option value=\"6\">contenu et style</option>\r\n// \t\t\t\t\t\t\t\t</select>\r\n// \t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t<div className=\"fileDropArea\">\r\n// \t\t\t\t\t\t\t\t<span className=\"fakeBtn\"></span>\r\n// \t\t\t\t\t\t\t\t<span className=\"fileMsg\" >{fileName}</span>\r\n// \t\t\t\t\t\t\t\t<input className=\"fileInput\" type=\"file\" id=\"formImage\" {...register(\"file\")} onChange={e => setFileName(e.target.files[0].name)} multiple />\r\n// \t\t\t\t\t\t\t</div>\r\n\r\n// \t\t\t\t\t\t\t<input type=\"submit\" className=\"matchSub\" value=\"Match\" />\r\n// \t\t\t\t\t\t</form>\r\n// \t\t\t\t\t\t{image && <div style={{ padding: \"10px\", borderRadius: \"8px\", backgroundColor: \"white\", margin: \"20px\" }}>\r\n// \t\t\t\t\t\t\t<img className=\"show\" src={image} style={{ maxWidth: \"650px\", height: \"auto\", maxHeight: \"300px\", borderRadius: \"8px\", width: \"auto\" }} />\r\n// \t\t\t\t\t\t</div>}\r\n\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t\t{/* <!-- formulaire de matching - fin --> */}\r\n\r\n\r\n// \t\t\t\t</div>\r\n\r\n\r\n// \t\t\t\t{/* <!-- SECTION MATCHING IMAGE UPLOAD - fin --> */}\r\n\r\n// \t\t\t\t<div className=\"cont-l-w center-row\">\r\n\r\n// \t\t\t\t\t<div className=\"orderingBox\" style={{ marginTop: \"50px\" }}>\r\n// \t\t\t\t\t\t{/* <!-- Bouton matching par année (+ ancien au + récent) - début --> */}\r\n// \t\t\t\t\t\t<button className={orderDate === 0 ? \"orderByDate\" : orderDate === 1 ? \"orderByDateDown\" : \"orderByDateUp\"} onClick={handleOrderDate} style={{ backgroundColor: \"#F3F3F3\" }}>{orderDate === 0 ?\"Tri par date\" : orderDate === 1 ? \"Tri croissant\" : \"Tri décroissant\"}</button>\r\n// \t\t\t\t\t\t{/* <!-- Bouton matching par année (+ ancien au + récent) - fin --> */}\r\n// \t\t\t\t\t\t{/* <h2 className=\"center-tex goRed\">Matching <span>{matchingType.text}</span></h2> */}\r\n// \t\t\t\t\t\t{/* <!-- Bouton matching par artistes - début --> */}\r\n// \t\t\t\t\t\t<button className=\"orderByArtist\" onClick={openModalArtist} style={{ backgroundColor: \"#F3F3F3\" }}>Choisir vos artiste(s) </button>\r\n// \t\t\t\t\t\t{boolModalArtist === true &&\r\n// \t\t\t\t\t\t\t<div>\r\n// \t\t\t\t\t\t\t\t<div className=\"smart-modal-overlay\" style={{ display: \"block\" }}></div>\r\n// \t\t\t\t\t\t\t\t<div id=\"1777\" className=\"smart-modal-content scrollAuto\" style={{ display: \"block\", transform: \"translate(-50%,-50%)\", top: \"50%\", left: \"50%\" }}>\r\n\r\n// \t\t\t\t\t\t\t\t\t<h3>Artistes</h3>\r\n// \t\t\t\t\t\t\t\t\t<a className=\"smart-modal-close\" onClick={openModalArtist}><img className=\"img-left\" src={close} alt=\"close\" /></a>\r\n\r\n// \t\t\t\t\t\t\t\t\t{/* <!-- checkbox artiste matché - début --> */}\r\n// \t\t\t\t\t\t\t\t\t<div className=\"checkLister all\">\r\n// \t\t\t\t\t\t\t\t\t\t<button className={boolAllArtist === true ? \"checkbox checked\" : \"checkbox \"} onClick={allArtists}></button>\r\n// \t\t\t\t\t\t\t\t\t\t<span>Tous</span>\r\n// \t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t{/* <!-- checkbox artiste matché - fin -->\r\n// \t\t\t\t\t\t\t\t\t\t\t<!-- checkbox artiste matché - début --> */}\r\n// \t\t\t\t\t\t\t\t\t{listArtist.length > 0 &&\r\n// \t\t\t\t\t\t\t\t\t\tlistArtist.map((artist, index) => {\r\n// \t\t\t\t\t\t\t\t\t\t\treturn (\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"checkLister\" >\r\n\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<div className={artist.boolList === true ? \"checkbox checked\" : \"checkbox\"} onClick={() => setTriArtist(index)}></div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<span>{artist.artisteName}</span>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t)\r\n// \t\t\t\t\t\t\t\t\t\t})}\r\n\r\n// \t\t\t\t\t\t\t\t\t{/* <!-- checkbox artiste matché - fin -->*/}\r\n\r\n// \t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t}\r\n\r\n// \t\t\t\t\t\t{/* <!-- Bouton matching par artistes - fin --> */}\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t</div>\r\n\r\n\r\n// \t\t\t\t{/* <!-- Modal artistes matchés & filtrer le matching - début --> */}\r\n// \t\t\t\t<div className=\"cont-l-w\">\r\n// \t\t\t\t\t<div className=\"itemGallery mt-a\">\r\n// \t\t\t\t\t\t<div className=\"gridContent items\">\r\n\r\n\r\n\r\n\r\n// \t\t\t\t\t\t\t{result.length > 0 &&\r\n// \t\t\t\t\t\t\t\tresult.filter(filter => filter.boolVis === true).map((paint, index) => {\r\n// \t\t\t\t\t\t\t\t\t// if (listArtist[index] && listArtist[index].boolList === true)\r\n// \t\t\t\t\t\t\t\t\treturn (\r\n// \t\t\t\t\t\t\t\t\t\t<div className=\"item\">\r\n// \t\t\t\t\t\t\t\t\t\t\t<div className=\"base\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${paint.artistId}/${paint.urlImage})` }}>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<button id=\"itemCommentState\" className=\"comment yes\" type=\"button\" value=\"notComment\"></button>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<Fav user={user} isLogged={isLogged} favPaint={paint} />\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<ListModal user={user} isLogged={isLogged} listPaint={paint} />\r\n// \t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t<div className=\"hidden\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"revealShadow\"></div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"itemArtist\">{paint.artisteName}</h3>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"itemName\">{paint.name}</h4>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"itemYear\">{paint.year}</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t<ul className=\"hListGridItem\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"smart-modal\">\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"GridviewItem\" to={`../../view/OpusPage.js/${paint.id}`} state={paint.id} >\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tVoir\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<li>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"GridmakeMatch\" to=\"../view/MatchingPage.js\" state={paint.id} >\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmatch\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n// \t\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\r\n// \t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n// \t\t\t\t\t\t\t\t\t\t\t{/* <!-- oeuvre - fin --> */}\r\n// \t\t\t\t\t\t\t\t\t\t</div>\r\n// \t\t\t\t\t\t\t\t\t)\r\n// \t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\r\n// \t\t\t\t\t\t</div>\r\n// \t\t\t\t\t</div>\r\n// \t\t\t\t\t{/* <!-- items row - fin --> */}\r\n// \t\t\t\t</div>\r\n\r\n// \t\t\t</section>\r\n// \t\t</div>\r\n\r\n// \t);\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/MatchingImage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "MatchingImage",
    "memberof": "src/view/MatchingImage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/MatchingImage.js~MatchingImage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/MatchingImage.js",
    "importStyle": "MatchingImage",
    "description": "This component display the Matching Page with uploaded image",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "images/submitImageForMatching?fileName=${data.itemName}&artist=${data.artistName} : submit an image for matching"
      }
    ],
    "return": null
  },
  {
    "__docId__": 164,
    "kind": "file",
    "name": "src/view/MatchingPage.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PaintingToMatch from \"../component/MatchingResult/PaintingToMatch\";\r\nimport ResultMatch from \"../component/MatchingResult/ResultMatch\";\r\n\r\n/**\r\n * This component display a Matching Page with a painting from our db\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {boolean} isLogged - test if the user is logged\r\n *  @param {number} paintId - paint id\r\n */\r\n\r\nexport default function MatchingPage({ user, setUser, paintId, isLogged }) {\r\n\r\n\r\n    const location = useLocation();\r\n    paintId = location.state;\r\n    const [matchingType, setMatchingType] = useState({value:\"STYLE\",text:\"Style\" });\r\n\r\n\r\n    return (\r\n        <div className=\"MatchingPage\">\r\n            <PaintingToMatch user={user} matchingType={matchingType} setMatchingType={setMatchingType} paintId={paintId} setUser={setUser} isLogged={isLogged} />\r\n            <ResultMatch user={user} matchingType={matchingType} setMatchingType={setMatchingType} paintId={paintId} isLogged={isLogged} />\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/MatchingPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "MatchingPage",
    "memberof": "src/view/MatchingPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/MatchingPage.js~MatchingPage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/MatchingPage.js",
    "importStyle": "MatchingPage",
    "description": "This component display a Matching Page with a painting from our db",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "paint id"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "src/view/OpusPage.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Painting from \"../component/OpusPage/Painting\";\r\nimport SimilarPaint from \"../component/OpusPage/SimilarPaint\";\r\n\r\n/**\r\n * This component display a Painting full page\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {boolean} isLogged - test if the user is logged\r\n *  @param {number} paintId - paint id\r\n *  @param {number} setPaintId - paintId setter\r\n */\r\n\r\nexport default function OpusPage({user,setUser,paintId,setPaintId, isLogged}) {\r\n\r\n\r\n    const location = useLocation();\r\n     paintId = location.state\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"OpusPage\">\r\n\r\n        <Painting paintId={paintId} user={user} setUser = {setUser} isLogged={isLogged}/>\r\n        <SimilarPaint paintId={paintId} user = {user} setUser = {setUser} isLogged={isLogged}/>\r\n\r\n        \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/OpusPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "OpusPage",
    "memberof": "src/view/OpusPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/OpusPage.js~OpusPage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/OpusPage.js",
    "importStyle": "OpusPage",
    "description": "This component display a Painting full page",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "paint id"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "setPaintId",
        "description": "paintId setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "src/view/SignIn.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport sha1 from \"sha1\";\r\nimport { SALT, URLDayl } from \"../services/constantes\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { toast } from \"react-toastify\"\r\nimport vis from \"../webapp/img/icons/password_display_1.svg\"\r\nimport unvis from \"../webapp/img/icons/password_hide_1.svg\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n\r\n/**\r\n * This component display the Sign in Page\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n * @param {boolean} setIsLogged - isLogged setter\r\n * @emits - users/save : save a new user\r\n * @emits - paintingEntity/randomPaintings30 : get a random painting\r\n */\r\n\r\n\r\nexport default function SignIn({ user, setUser, setIsLogged}) {\r\n\r\n//   const { register, handleSubmit, formState: { errors } } = useForm();\r\n//   const [randImg, setRandImg] = useState([]);\r\n//   const [boolVisibility, setBoolVisibility] = useState(false);\r\n//   const [boolCgu, setBoolCgu] = useState(true);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   //Inscription dans l'api\r\n//   const onSubmit = (data, event) => {\r\n//     event.preventDefault();\r\n//     if (boolCgu === true) {\r\n\r\n//       if (data.truePassword === data.truePasswordConfirm) {\r\n//         axios.post(URLDayl + \"users/save\", {\r\n//           firstName: data.trueFirstName, lastName: data.trueLastName,\r\n//           email: data.trueEmail, password: sha1(data.truePassword + SALT), userType: data.userType, pseudo: \"test\"\r\n//         },\r\n//           { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n//         )\r\n//           .then((response) => {\r\n// console.log(response.data)\r\n//             setUser({ ...user, ...response.data });\r\n//             setIsLogged(true);\r\n//             localStorage.setItem(\"id\", response.data.id)\r\n         \r\n//             //redirection vers la page compte\r\n//             navigate(`../view/CompteAmateurPage.js`, { state: response.data })\r\n\r\n//             toast.success(\"Vou avez créé votre compte!\", {\r\n//               position: \"top-right\",\r\n//               autoClose: 3000,\r\n//               hideProgressBar: false,\r\n//               closeOnClick: true,\r\n//               pauseOnHover: true,\r\n//               draggable: true,\r\n//               progress: undefined,\r\n//             });\r\n\r\n//           });\r\n//       }\r\n//       else {\r\n//         toast.warning(\"Mots de passe différents!\", {\r\n//           position: \"top-right\",\r\n//           autoClose: 3000,\r\n//           hideProgressBar: false,\r\n//           closeOnClick: true,\r\n//           pauseOnHover: true,\r\n//           draggable: true,\r\n//           progress: undefined,\r\n//         });\r\n//       }\r\n\r\n//     }\r\n//     else {\r\n//       toast.warning(\"Veuillez lire les CGU pour pouvoir vous inscrire\", {\r\n//         position: \"top-right\",\r\n//         autoClose: 3000,\r\n//         hideProgressBar: false,\r\n//         closeOnClick: true,\r\n//         pauseOnHover: true,\r\n//         draggable: true,\r\n//         progress: undefined,\r\n//       });\r\n//     }\r\n\r\n\r\n\r\n//     // setSession({ truePassword: null })\r\n\r\n//   }\r\n\r\n//   // get 30 random Paint //\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(URLDayl + \"paintingEntity/randomPaintings30\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n//       .then((response) => {\r\n//         setRandImg(response.data);\r\n//       });\r\n//   }, []);\r\n\r\n//   //montrer/cacher le mdp\r\n//   function handleVisibility() {\r\n\r\n//     if (boolVisibility === true) {\r\n//       setBoolVisibility(false)\r\n//     }\r\n//     else {\r\n//       setBoolVisibility(true);\r\n//     }\r\n//   }\r\n\r\n//   function handleCGU() {\r\n//     console.log(\"test\")\r\n//     if (boolCgu === true) {\r\n//       setBoolCgu(false);\r\n//     }\r\n//     else {\r\n//       setBoolCgu(true);\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n\r\n//     <div className=\"accountFront\">\r\n//       {/* <!-- Rangée de gauche (formulaire) - début --> */}\r\n//       <div className=\"splitLeft\">\r\n//         <h1>Inscription</h1>\r\n//         <form className=\"formCompact fineSearch\" style={{ gap: \"0\", justifyContent: \"space-around\" }} onSubmit={handleSubmit(onSubmit)}>\r\n//           <input type=\"text\" size=\"35\" {...register(\"trueLastName\")}/* value={session.trueLastName} onChange={e => setSession({ ...session, trueLastName: e.target.value })} */ placeholder=\"Nom\" required />\r\n//           <input type=\"text\" size=\"35\" {...register(\"trueFirstName\")}/* value={session.trueFirstName} onChange={e => setSession({ ...session, trueFirstName: e.target.value })} */ placeholder=\"Prénom\" required />\r\n//           <input type=\"email\" className=\"email\" {...register(\"trueEmail\")}/* value={session.trueEmail} onChange={e => setSession({ ...session, trueEmail: e.target.value })} */ size=\"35\" placeholder=\"Email\" required />\r\n//           <img className=\"img-left\" src={boolVisibility === true ? unvis : vis} alt=\"Fermer\" onClick={handleVisibility} style={{ width: \"20px\", height: \"20px\", position: \"absolute\", zIndex: \"99999\", top: \"192px\", right: \"10px\" }} />\r\n//           <img className=\"img-left\" src={boolVisibility === true ? unvis : vis} alt=\"Fermer\" onClick={handleVisibility} style={{ width: \"20px\", height: \"20px\", position: \"absolute\", zIndex: \"99999\", top: \"252px\", right: \"10px\" }} />\r\n\r\n//           <input type={boolVisibility === true ? \"\" : \"password\"} className=\"password\" {...register(\"truePassword\")}/* value={session.truePassword} onChange={e => setSession({ ...session, truePassword: e.target.value })} */ placeholder=\"Mot de passe\" minlength=\"8\" required />\r\n//           <input type={boolVisibility === true ? \"\" : \"password\"} className=\"password\" {...register(\"truePasswordConfirm\")}/* value={session.truePasswordConfirm} onChange={e => setSession({ ...session, truePasswordConfirm: e.target.value })} */ placeholder=\"Confirmez le mot de passe\" minlength=\"8\" required />\r\n//           <br /><h3>Je veux m'inscrire en tant que:</h3>\r\n\r\n//           <select id=\"type\" name=\"type\" className=\"customSelectOptions\" {...register(\"userType\")} style={{ width: \"100%\", marginTop: \"15px\" }}>\r\n//             <option value=\"amateur\">Amateur d'art</option>\r\n//             <option value=\"artiste\">Artiste</option>\r\n//             <option value=\"gallerie\">Gallerie d'art</option>\r\n//             <option value=\"institutionnel\">Institutionnel</option>\r\n//             <option value=\"expert\">Expert</option>\r\n//           </select><br />\r\n\r\n//           {/* <div className=\"checkLister\" style={{marginTop: \"20px\"}}>\r\n//             <button className={boolCgu === true ?\"checkbox checked\":\"checkbox \"}  onClick={handleCGU}></button>\r\n//             <span>J'accepte les CGU</span>\r\n//           </div> */}\r\n//           <input type=\"submit\" className=\"submit mt-a\" value=\"Inscription\" />\r\n//         </form>\r\n//         <p>Vous avez déjà un compte ? <Link to=\"../view/LogIn.js\" className=\"accountLink\">Connexion</Link></p>\r\n//       </div>\r\n//       {/* <!-- Rangée de gauche (formulaire) - fin --> */}\r\n\r\n//       {/* <!-- Rangée de droite (arrière-plan dynamique) - début --> */}\r\n//       <div className=\"splitRight\" style={{ backgroundImage: `url(${URLDayl}images/content/${randImg.length > 0 && randImg[0].artistId}/${randImg.length > 0 && randImg[0].urlImage})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\" }} >\r\n//         <div>\r\n//           <p className=\"itemArtist\">{randImg.length > 0 && randImg[0].artisteName}</p>\r\n//           <p className=\"itemName\" >{randImg.length > 0 && randImg[0].name}</p>\r\n//           <p className=\"itemYear\">{randImg.length > 0 && randImg[0].year}</p>\r\n//         </div>\r\n//       </div>\r\n//       {/* <!-- Rangée de droite (arrière-plan dynamique) - début --> */}\r\n//     </div>\r\n\r\n//   );\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/SignIn.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "SignIn",
    "memberof": "src/view/SignIn.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/SignIn.js~SignIn",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/SignIn.js",
    "importStyle": "SignIn",
    "description": "This component display the Sign in Page",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsLogged",
        "description": "isLogged setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "users/save : save a new user"
      },
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/randomPaintings30 : get a random painting"
      }
    ],
    "return": null
  },
  {
    "__docId__": 170,
    "kind": "file",
    "name": "src/view/SignInPage.js",
    "content": "import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport sha1 from \"sha1\";\r\nimport { set } from \"react-hook-form\";\r\nimport { SALT, URLDayl } from \"../services/constantes\"\r\nimport LogIn from \"./LogIn\"\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport default function SignInPage({ user, setUser, isLogged, setIsLogged }) {\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"SignInPage\">\r\n\r\n      <LogIn user={user} setUser={setUser} isLogged={isLogged} setIsLogged={setIsLogged} />\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/SignInPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "SignInPage",
    "memberof": "src/view/SignInPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/SignInPage.js~SignInPage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/SignInPage.js",
    "importStyle": "SignInPage",
    "description": "",
    "lineNumber": 12,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"user\": *, \"setUser\": *, \"isLogged\": *, \"setIsLogged\": *}"
        ],
        "defaultRaw": {
          "user": null,
          "setUser": null,
          "isLogged": null,
          "setIsLogged": null
        },
        "defaultValue": "{\"user\":null,\"setUser\":null,\"isLogged\":null,\"setIsLogged\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "file",
    "name": "src/view/StartPage.js",
    "content": "import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { URLDayl } from \"../services/constantes\";\r\nimport { ColorPicker, useColor } from \"react-color-palette\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport Fav from \"../component/general/Fav\";\r\nimport ListModal from \"../component/general/ListModal\";\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport Artist from \"../component/ArtistDetailPage/Artist\";\r\nimport ListPaintArtist from \"../component/ArtistDetailPage/ListPaintArtist\";\r\nimport SimilarArtist from \"../component/ArtistDetailPage/SimilarArtist\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ai from \"../webapp/img/icons/ico-newuserpage-ai.svg\"\r\nimport rs from \"../webapp/img/icons/ico-newuserpage-network.svg\"\r\nimport web3 from \"../webapp/img/icons/ico-newuserpage-web3.svg\"\r\nimport artist from \"../webapp/img/icons/ico-newuserpage-artist.svg\"\r\nimport amateur from \"../webapp/img/icons/ico-newuserpage-amateur.svg\"\r\nimport institut from \"../webapp/img/icons/ico-newuserpage-institut.svg\"\r\nimport expert from \"../webapp/img/icons/ico-newuserpage-expert.svg\"\r\nimport match from \"../webapp/img/icons/ico-newuserpage-ai.svg\"\r\nimport objectives from \"../webapp/img/icons/ico-newuserpage-objectives.png\"\r\nimport mockup from \"../webapp/img/icons/ico-newuserpage-mockup.png\"\r\nimport frise1 from \"../webapp/img/icons/ico-newuserpage-frise-1.png\"\r\nimport frise2 from \"../webapp/img/icons/ico-newuserpage-frise-1-mob.png\"\r\nimport believe from \"../webapp/img/icons/ico-newuserpage-believe.svg\"\r\nimport platform from \"../webapp/img/icons/ico-newuserpage-platform.png\"\r\n\r\n\r\n\r\n/**\r\n * This component display Starting page wich explain how the website work\r\n * @param {object} user - user object from api\r\n\r\n * @param {boolean} isLogged - test if the user is logged\r\n*/\r\n\r\n\r\n\r\n\r\nexport default function StartPage({ user, isLogged }) {\r\n\r\n\r\n\r\n    // const [searchPainting, setSearchPainting] = useState([]);\r\n    // const [search, setSearch] = useState([]);\r\n    // const [color, setColor] = useColor();\r\n    // const [randImg, setRandImg] = useState([]);\r\n    // const [listStyles, setListStyles] = useState([]);\r\n    // const [listOrigins, setListOrigins] = useState([]);\r\n    // const [listGenres, setListGenres] = useState([]);\r\n\r\n\r\n    // const responsive2 = {\r\n    //     desktop: {\r\n    //         breakpoint: { max: 3000, min: 1024 },\r\n    //         items: 1,\r\n    //         paritialVisibilityGutter: 0\r\n    //     },\r\n    //     tablet: {\r\n    //         breakpoint: { max: 1024, min: 464 },\r\n    //         items: 1,\r\n    //         paritialVisibilityGutter: 0\r\n    //     },\r\n    //     mobile: {\r\n    //         breakpoint: { max: 464, min: 0 },\r\n    //         items: 1,\r\n    //         paritialVisibilityGutter: 0\r\n    //     }\r\n    // };\r\n\r\n    // // Send Search //\r\n    // const handleSubmit = (event) => {\r\n    //     event.preventDefault();\r\n\r\n    //     axios.post(URLDayl + \"paintingSearch/findPaintingBySearchDto\", {\r\n    //         license: search.license, style: search.style, genre: search.genre, nationality: search.nationality,\r\n    //         freeSearch: search.freeSearch, year: search.year, decade: search.decade\r\n    //     },\r\n    //         { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": \"0\" } }\r\n    //     )\r\n    //         .then((response) => {\r\n\r\n    //             setSearchPainting(response.data);\r\n    //             console.log(response.data)\r\n\r\n    //         });\r\n    // }\r\n\r\n    // const handleChange = color => setColor(color);\r\n\r\n    // // Matching by color //\r\n    // useEffect(() => {\r\n\r\n    //     axios.post(\r\n    //         URLDayl + `paintingSearch/findByColor`, { colorCode: color.hex, sortOrder: \"ASC\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\r\n    //     )\r\n    //         .then((response) => {\r\n\r\n    //             setSearchPainting(response.data);\r\n    //         });\r\n    // }, [color]);\r\n\r\n\r\n    // // get 30 random Paint //\r\n\r\n    // useEffect(() => {\r\n    //     axios\r\n    //         .get(URLDayl + \"paintingEntity/randomPaintings30\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n    //         .then((response) => {\r\n    //             setRandImg(response.data);\r\n    //         });\r\n    // }, []);\r\n\r\n    // // get filter //\r\n\r\n    // useEffect(() => {\r\n    //     axios\r\n    //         .get(URLDayl + \"paintingFront/listStyles\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n    //         .then((response) => {\r\n    //             setListStyles(response.data);\r\n    //         });\r\n    //     axios\r\n    //         .get(URLDayl + \"paintingFront/listOrigins\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n    //         .then((response) => {\r\n    //             setListOrigins(response.data);\r\n    //         });\r\n    //     axios\r\n    //         .get(URLDayl + \"paintingFront/listGenres\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\r\n    //         .then((response) => {\r\n    //             setListGenres(response.data);\r\n    //         });\r\n    // }, []);\r\n\r\n\r\n    // return (\r\n    //     <div className=\"StartPage\">\r\n    //         {/* <!-- MAIN - début --> */}\r\n    //         <main>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tTOP BOX - TITRE & BG - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"center-col\">\r\n\r\n    //                 <div className=\"cont-f-w startPageBg\" style={{ backgroundImage: `url(${URLDayl}images/content/${searchPainting.length > 0 && searchPainting[0].artistId}/${searchPainting.length > 0 && searchPainting[0].urlImage})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\", height: \"400px\" }}></div>\r\n\r\n    //                 <div className=\"cont-n-w center-col exploPageTop\" >\r\n    //                     <h1 className=\"goRed\">Discover <span>Art</span> You <span>Love</span></h1>\r\n    //                     < div style={{ width: \"700px\" }}>\r\n    //                         <Carousel\r\n                                \r\n    //                             itemClass=\"image-item\"\r\n    //                             responsive={responsive2}\r\n    //                             arrows={false}\r\n    //                             showDots={true}\r\n    //                             autoPlay={true}\r\n    //                             infinite={true}\r\n    //                         >\r\n    //                             <div style={{ width: \"650px\", margin: \"25px\", marginBottom: \"50px\" }}> <p>Dayl offre, via les technologies IA, <span>un pont entre l’histoire de l’art et les artistes contemporains</span> à travers une navigation inédite et le « matching » des peintures</p></div>\r\n    //                             <div style={{ width: \"650px\", margin: \"25px\", marginBottom: \"50px\" }}> <p>Dayl, une plateforme ouverte <span>au partage, à l’échange, aux rencontres et à la promotion</span> d’une vision pédagogique des œuvres d’art, à travers les âges</p></div>\r\n    //                             <div style={{ width: \"650px\", margin: \"25px\", marginBottom: \"50px\" }}> <p>Dayl fait le pari de la valorisation des supports numériques artistiques en mode <span>Haute Définition</span></p></div>\r\n    //                         </Carousel></div>\r\n\r\n    //                 </div>\r\n\r\n\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tTOP BOX - TITRE & BG - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tTRIO BOX - AI / RESEAU SOCIAL / WEB 3.0 - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"center-col\">\r\n\r\n    //                 <div className=\"tBoxCont mt-c\">\r\n\r\n    //                     <div className=\"tBox\">\r\n    //                         <img src={ai} alt=\"intelligence Artificielle\" />\r\n    //                         <p className=\"goRed\">Une <span>intelligence Artificielle</span> au service d’une <b>navigation innovante</b> à travers le « matching » des peintures</p>\r\n    //                     </div>\r\n    //                     <div className=\"tBox\">\r\n    //                         <img src={rs} alt=\"réseau social ouvert\" />\r\n    //                         <p className=\"goRed\">Un <span>réseau social ouvert</span> dédié aux <b>artistes</b>, aux <b>amateurs d’art</b> et aux <b>professionnels de la culture</b></p>\r\n    //                     </div>\r\n    //                     <div className=\"tBox\">\r\n    //                         <img src={web3} alt=\"Web 3.0\" />\r\n    //                         <p className=\"goRed\">Une plateforme numérique <span>Web 3.0</span> dédiée aux artistes et à la <span>valorisation des supports numériques HD</span> du patrimoine des artistes</p>\r\n    //                     </div>\r\n\r\n    //                 </div>\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tTRIO BOX - AI / RESEAU SOCIAL / WEB 3.0 - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tBLACKBOARD TEXT - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"bbBoxCont\">\r\n\r\n    //                 <p>Dayl est ouverte au partage, à l’échange visant à promouvoir une vision qualitative, pédagogique et personnelle de l’histoire de l’art conjuguée au passé, au présent et au futur</p>\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tBLACKBOARD TEXT - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tFRAMED BOXES - ARTISTE / INSTITUTION / AMATEUR / PRO - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"center-col plr-a\">\r\n\r\n    //                 <div className=\"framedBoxCont\">\r\n\r\n    //                     <div className=\"col\">\r\n\r\n    //                         <div className=\"fBox\">\r\n    //                             <img src={web3} alt=\"Vous êtes artiste peintre ou un artiste digital\" />\r\n    //                             <h2>Vous êtes artiste peintre ou un artiste digital … </h2>\r\n    //                             <ul className=\"mb-b\">\r\n    //                                 <li>Rencontrez votre public</li>\r\n    //                                 <li>Accédez à des nouvelles sources d’inspiration</li>\r\n    //                                 <li>Positionnez vos oeuvres dans la continuité d’un héritage artistique</li>\r\n    //                                 <li>Créez et Valorisez votre Patrimoine numérique</li>\r\n    //                             </ul>\r\n    //                             <a href=\"\" className=\"startBoxBtn\">En savoir +</a>\r\n    //                         </div>\r\n    //                         <div className=\"fBox\">\r\n    //                             <img src={amateur} alt=\"Vous êtes amateur d’art, curieux, passionné\" />\r\n    //                             <h2>Vous êtes amateur d’art, curieux, passionné …</h2>\r\n    //                             <ul className=\"mb-b\">\r\n    //                                 <li>Explorez les oeuvres de l’histoire</li>\r\n    //                                 <li>Enrichissez votre savoir culturel</li>\r\n    //                                 <li>Suivez les actualités des arts et de la culture</li>\r\n    //                                 <li>Découvrez des artistes émergents et intégrez leur communauté</li>\r\n    //                                 <li>Contribuez à l’émergence de nouveaux artistes</li>\r\n    //                             </ul>\r\n    //                             <a href=\"\" className=\"startBoxBtn\">En savoir +</a>\r\n    //                         </div>\r\n\r\n    //                     </div>\r\n    //                     <div className=\"col\">\r\n\r\n    //                         <div className=\"fBox\">\r\n    //                             <img src={institut} alt=\"Vous êtes une institution culturelle, un professionnel de la culture\" />\r\n    //                             <h2>Vous êtes une institution culturelle, un professionnel de la culture …</h2>\r\n    //                             <ul className=\"mb-b\">\r\n    //                                 <li>Venez enrichir la communauté Dayl</li>\r\n    //                                 <li>Partagez vos posts, analyses, News</li>\r\n    //                                 <li>Elargissez votre réseau, nourrissez la connaissance artistique</li>\r\n    //                                 <li>Participez à l’éditorialisation, l’amélioration des contenus</li>\r\n    //                                 <li>Soutenez des artistes et initiatives que vous aimez</li>\r\n    //                             </ul>\r\n    //                             <a href=\"\" className=\"startBoxBtn\">En savoir +</a>\r\n    //                         </div>\r\n    //                         <div className=\"fBox\">\r\n    //                             <img src={expert} alt=\"Vous êtes étudiant, expert en histoire de l’art\" />\r\n    //                             <h2>Vous êtes étudiant, expert en histoire de l’art …</h2>\r\n    //                             <ul className=\"mb-b\">\r\n    //                                 <li>Approfondissez votre culture artistique</li>\r\n    //                                 <li>Participez à l’éditorialisation du site</li>\r\n    //                                 <li>Enrichissez votre réseau professionnel</li>\r\n    //                                 <li>Découvrez des artistes émergents et rejoignez leur communauté</li>\r\n    //                                 <li>Soutenez des artistes que vous aimez</li>\r\n    //                             </ul>\r\n    //                             <a href=\"\" className=\"startBoxBtn\">En savoir +</a>\r\n    //                         </div>\r\n\r\n    //                     </div>\r\n\r\n    //                 </div>\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tFRAMED BOXES - ARTISTE / INSTITUTION / AMATEUR / PRO - fin --> */}\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <div className=\"startSpaceBar mt-d mb-c\">\r\n\r\n    //                 <div></div>\r\n\r\n    //             </div>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tMATCHING TRYBOX - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"center-col matchingTryBox\">\r\n\r\n    //                 <h2>Cherchez une œuvre, un artiste, une couleur … lancez un «match» !</h2>\r\n\r\n    //                 <form id=\"fineSearch\" className=\"fineSearch\" method=\"post\">\r\n    //                     {/* <!-- Choisir un style d'oeuvre - début --> */}\r\n    //                     <div>\r\n    //                         <select className=\"searchFilter\" id=\"style\" name=\"style\" value={search?.style} onChange={e => setSearch({ ...search, style: e.target.value })}>\r\n    //                             <option value=\"\" selected>Style</option>\r\n    //                             {listStyles.length > 0 && listStyles.map((style, index) => (\r\n    //                                 <option value={style.code}>{style.name}</option>\r\n    //                             ))}\r\n\r\n\r\n    //                         </select>\r\n    //                     </div>\r\n    //                     {/* <!-- Choisir un style d'oeuvre - fin --> */}\r\n\r\n    //                     {/* <!-- Choisir un genre d'oeuvre - début --> */}\r\n    //                     <div >\r\n    //                         <select className=\"searchFilter\" id=\"genre\" name=\"genre\" value={search?.genre} onChange={e => setSearch({ ...search, genre: e.target.value })}>\r\n    //                             <option value=\"\" selected>Genre</option>\r\n    //                             {listGenres.length > 0 && listGenres.map((genre, index) => (\r\n    //                                 <option value={genre.code}>{genre.name}</option>\r\n    //                             ))}\r\n    //                         </select>\r\n    //                     </div>\r\n\r\n    //                     {/* <!-- Choisir un genre d'oeuvre - fin --> */}\r\n\r\n    //                     {/* <!-- Choisir une nationalité de l'oeuvre - début --> */}\r\n    //                     <div>\r\n    //                         <select className=\"searchFilter\" id=\"nationalite\" name=\"nationalite\" value={search?.nationality} onChange={e => setSearch({ ...search, nationality: e.target.value })}>\r\n    //                             <option value=\"\" selected>Nationalité</option>\r\n    //                             {listOrigins.length > 0 && listOrigins.map((origin, index) => (\r\n    //                                 <option value={origin.code}>{origin.name}</option>\r\n    //                             ))}\r\n    //                         </select>\r\n    //                     </div>\r\n    //                     {/* <!-- Choisir une nationalité de l'oeuvre - fin --> */}\r\n\r\n    //                     {/* <!-- Champ de recherche texte - début --> */}\r\n    //                     <div>\r\n    //                         <input\r\n    //                             value={search?.freeSearch} onChange={e => setSearch({ ...search, freeSearch: e.target.value })}\r\n    //                             type=\"text\"\r\n    //                             id=\"searchString\"\r\n    //                             className=\"searchString explorer\"\r\n    //                             name=\"searchString\"\r\n    //                             placeholder=\"Artiste, mot-clé...\"\r\n    //                         />\r\n    //                     </div>\r\n    //                     {/* <!-- Champ de recherche texte - fin --> */}\r\n\r\n    //                     {/* <!-- Année de l'oeuvre - début --> */}\r\n    //                     <div>\r\n    //                         <input\r\n    //                             value={search?.year} onChange={e => setSearch({ ...search, year: e.target.value })}\r\n    //                             type=\"text\"\r\n    //                             id=\"annee\"\r\n    //                             className=\"date\"\r\n    //                             name=\"annee\"\r\n    //                             placeholder=\"Année\"\r\n    //                         />\r\n    //                     </div>\r\n    //                     {/* <!-- Année de l'oeuvre - fin --> */}\r\n\r\n    //                     {/* <!-- Décennie de l'oeuvre - début --> */}\r\n    //                     <div>\r\n    //                         <input\r\n    //                             value={search?.decade} onChange={e => setSearch({ ...search, decade: e.target.value })}\r\n    //                             type=\"text\"\r\n    //                             id=\"decennie\"\r\n    //                             className=\"date\"\r\n    //                             name=\"decennie\"\r\n    //                             placeholder=\"Décennie\"\r\n    //                         />\r\n    //                     </div>\r\n    //                     {/* <!-- Décennie de l'oeuvre - fin --> */}\r\n\r\n    //                     {/* <!-- Bouton de lancement de recherche - début --> */}\r\n    //                     <div data-tooltip=\"Lancer la recherche\">\r\n    //                         <input type=\"submit\" onClick={handleSubmit} id=\"submit\" className=\"squareSub\" value=\"\" />\r\n    //                     </div>\r\n    //                     {/* <!-- Bouton de lancement de recherche - fin -->\r\n\r\n\t// \t\t\t\t<!-- Lien matching à la volée - début --> */}\r\n    //                     <div data-tooltip=\"Matching à la volée\">\r\n    //                         <Link href=\"matching-image.html\" to=\"../../view/MatchingImage.js\" className=\"squareMatch\"></Link>\r\n    //                     </div>\r\n    //                     {/* <!-- Lien matching à la volée - fin --> */}\r\n    //                 </form>\r\n    //                 <div className=\"duoTry mt-b\">\r\n    //                     <div className=\"col-l\">\r\n    //                         <ColorPicker width={250} height={228} color={color} onChange={handleChange} hideHSV hideRGB />\r\n    //                         <div style={{ border: '2px solid #0000001a', borderRadius: '50%', width: \"50px\", height: \"50px\", position: \"absolute\", bottom: \"42px\", left: \"25px\", background: color.hex }}></div>\r\n\r\n    //                     </div>\r\n    //                     <div className=\"col-r\">\r\n    //                         {/* <!-- Modal artistes matchés & filtrer le matching - début --> */}\r\n    //                         <div className=\"cont-l-w\" style={{ width: \"1000px\" }}>\r\n    //                             <div className=\"itemGallery mt-a\">\r\n    //                                 <div className=\"gridContent items\">\r\n    //                                     {searchPainting.length > 0 &&\r\n    //                                         searchPainting.slice(0, 6).map((match, index) => (\r\n\r\n    //                                             <div className=\"item\" style={{ width: \"220px\", height: \"220px\" }}>\r\n    //                                                 <div className=\"base\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${match.artistId}/${match.urlImage})` }}>\r\n    //                                                     {/* <button id=\"itemCommentState\" className=\"comment yes\" type=\"button\" value=\"notComment\"></button> */}\r\n    //                                                     <Fav user={user} isLogged={isLogged} favPaint={match} />\r\n    //                                                     {/* <ListModal user={user} isLogged={isLogged} listPaint={match} /> */}\r\n    //                                                 </div>\r\n    //                                                 <div className=\"hidden\">\r\n    //                                                     <div className=\"revealShadow\"></div>\r\n    //                                                     <h3 className=\"itemArtist\">{match.artisteName}</h3>\r\n    //                                                     <h4 className=\"itemName\">{match.name}</h4>\r\n    //                                                     <div className=\"itemYear\">{match.year}</div>\r\n    //                                                     <ul className=\"hListGridItem\">\r\n    //                                                         <li>\r\n    //                                                             <Link className=\"GridviewItem\" to={`../../view/OpusPage.js/${match.id}`} state={match.id} >\r\n    //                                                                 Voir\r\n    //                                                             </Link>\r\n    //                                                         </li>\r\n    //                                                         <li>\r\n    //                                                             <Link className=\"GridmakeMatch\" to={`../../view/MatchingPage.js/${match.id}`} state={match.id} >\r\n    //                                                                 match\r\n    //                                                             </Link>\r\n    //                                                         </li>\r\n    //                                                     </ul>\r\n\r\n    //                                                 </div>\r\n\r\n    //                                                 {/*<!-- oeuvre - fin --> */}\r\n    //                                             </div>\r\n    //                                         ))}\r\n    //                                 </div>\r\n    //                             </div>\r\n    //                             {/* <!-- items row - fin --> */}\r\n    //                         </div>\r\n    //                     </div>\r\n    //                 </div>\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tMATCHING TRYBOX - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tFULL WIDTH CONTENT BOX - NAVIGATION PAR MATCH - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"fwcCont\">\r\n\r\n    //                 <img src={match} alt=\"Un principe de navigation reposant sur LES MATCHS\" />\r\n    //                 <h2>Un principe de navigation reposant sur LES MATCHS :<br />Découvrez les 50 peintures plus proches voisines.</h2>\r\n    //                 <p>Une expérience singulière et inédite basée sur une Intelligence Artificielle innovante.<br />Sur l’ensemble des oeuvres présentes sur DAYL vous pouvez <b>lancer un match</b> et découvrir ses 50 plus proches voisines.</p>\r\n    //                 <p>Essayez sur une des peintures présentées ci-dessus, en cliquant sur :</p>\r\n    //                 <div className=\"blueBoxBtn\">Match</div>\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tFULL WIDTH CONTENT BOX - NAVIGATION PAR MATCH - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <div className=\"startSpaceBar mb-d\">\r\n\r\n    //                 <div></div>\r\n\r\n    //             </div>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tDUO CONTENT - RESEAU SOCIAL - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"center-col plr-a\">\r\n\r\n    //                 <div className=\"duoCBoxCont\">\r\n\r\n    //                     <div className=\"col\">\r\n    //                         <img className=\"ico\" src={rs} alt=\"Créez et partagez votre univers artistique\" />\r\n    //                         <h2>Créez et partagez votre univers artistique autour d’un réseau social unique !</h2>\r\n    //                         <p>DAYL vous propose un réseaux social unique pour que les artistes, amateurs et experts du monde de l’art sur retrouvent et échangent <b>autour d’une passion commune.</b></p>\r\n    //                         <p>Grâce à <b>un espace personnel</b>, créez votre univers artistique que vous pourrez rendre publique, si vous le souhaitez, et <b>partagez vos actualités</b> auprès des gens qui vous suivent.</p>\r\n    //                     </div>\r\n\r\n    //                     <div className=\"col\">\r\n    //                         <img className=\"mockup\" src={mockup} alt=\"Créez et partagez votre univers artistique\" />\r\n    //                     </div>\r\n\r\n    //                 </div>\r\n    //                 <div className=\"duoCBoxCont\">\r\n\r\n    //                     <div className=\"col\">\r\n    //                         <h3>Suivez, partagez, échangez avec les autres membres de la communauté</h3>\r\n    //                         <ul className=\"mb-b\">\r\n    //                             <li><b>Abonnez-vous</b> à d’autres membres de la communauté et suivez leurs actualités.</li>\r\n    //                             <li><b>Partagez</b> vos commentaires, les oeuvres que vous aimez, les matching ... </li>\r\n    //                             <li><b>Postez</b> vos actualités personnelles autour du monde de l’art : vos dernières expositions visitées,  vos dernières oeuvres ...</li>\r\n    //                         </ul>\r\n    //                     </div>\r\n\r\n    //                     <div className=\"col\">\r\n    //                         <h3>Votre univers artistique centralisé dans un espace personnel</h3>\r\n    //                         <ul className=\"mb-b\">\r\n    //                             <li>Toutes les <b>actualités</b> des comptes que vous suivez</li>\r\n    //                             <li>Vos <b>artistes</b> préférés</li>\r\n    //                             <li>Les <b>oeuvres</b> que vous avez aimées</li>\r\n    //                             <li>Les <b>matching</b> que vous avez enregistrés</li>\r\n    //                             <li>Les <b>listes</b> que vous avez créées avec vos oeuvres préférées</li>\r\n    //                             <li>Des <b>recommandations</b> personnalisées</li>\r\n    //                         </ul>\r\n    //                     </div>\r\n\r\n    //                 </div>\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tDUO CONTENT - RESEAU SOCIAL - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <div className=\"startSpaceBar mt-c mb-d\">\r\n\r\n    //                 <div></div>\r\n\r\n    //             </div>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tFULL WIDTH CONTENT BOX - GALERIE NUMERIQUE MARCHANDE - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"fwcCont\">\r\n    //                 <h2>Une galerie numérique marchande qui priorise les œuvres physiques et qui met en avant le travail des artistes-peintres.</h2>\r\n    //                 <p>Nous partons du constat que l’univers NFT dans son ensemble oublie trop souvent la matérialité physique du geste créatif. Chez Dayl nous ambitionnons de rapprocher le métier pictural avec le patrimoine digital.</p>\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tFULL WIDTH CONTENT BOX - GALERIE NUMERIQUE MARCHANDE - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tDUO CONTENT - GALERIE NUMERIQUE MARCHANDE - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"center-col plr-a\">\r\n\r\n    //                 <div className=\"duoCBoxCont\">\r\n\r\n    //                     <div className=\"col\">\r\n    //                         <h3>Nos objectifs :</h3>\r\n    //                         <ul className=\"mb-b space\">\r\n    //                             <li>Mettre en lumière le talent des <b>peintres</b>, assurer aux <b>collectionneurs</b> un marché singulier et qualitatif, guider les <b>amateurs d’art</b> dans le monde du marché contemporain.</li>\r\n    //                             <li>Nous proposons d’élargir la <b>phygitalisation du marché artistique</b> aux peintres afin de leur offrir des possibilités que les galeries traditionnelles ne peuvent pas leur assurer : <b>patrimoines complémentaires, publics plus larges, acheteurs qualifiés.</b></li>\r\n    //                             <li>Nous avons le soucis de <b>poursuivre l’histoire de l’art à travers son marché contemporain.</b> En effet, nos curations de peintures reposent sur une compréhension globale des innovations esthétiques d’aujourd’hui <b>en rapport avec notre héritage commun.</b></li>\r\n    //                             <li>Nous savons que le <b>geste pictural</b> a de la valeur et nous pensons qu’il doit se confronter aux <b>outils technologiques contemporains</b> et rencontrer à la fois de <b>nouveaux supports et de nouveaux publics.</b></li>\r\n    //                         </ul>\r\n    //                     </div>\r\n\r\n    //                     <div className=\"col\">\r\n    //                         <img className=\"mockup\" src={objectives} alt=\"Nos objectifs\" />\r\n    //                     </div>\r\n\r\n    //                 </div>\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tDUO CONTENT - GALERIE NUMERIQUE MARCHANDE - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <div className=\"startSpaceBar mt-c mb-d\">\r\n\r\n    //                 <div></div>\r\n\r\n    //             </div>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tDUO CONTENT - PLATEFORME POUR ARTISTES - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"center-col plr-a\">\r\n\r\n    //                 <div className=\"duoCBoxCont\">\r\n\r\n    //                     <div className=\"col\">\r\n    //                         <img className=\"mockup rounded\" src={platform} alt=\"Une plateforme pour les artistes et le partage de la connaissance artistique\" />\r\n    //                     </div>\r\n\r\n    //                     <div className=\"col\">\r\n    //                         <h2>Une plateforme pour les artistes et le partage de la connaissance artistique</h2>\r\n    //                         <p>Dayl est une plateforme qui offre un accès à la culture artistique. Elle crée, via des technologies IA, <b>un pont entre l’histoire de l’art et les artistes contemporains</b> et facilite la rencontre entre les artistes et les passionnés d’art.</p>\r\n    //                         <ul className=\"mb-b\">\r\n    //                             <li>Positionnez votre travail dans la continuité d’un ou plusieurs héritages artistiques</li>\r\n    //                             <li>Continuez à vendre vos oeuvres en direct ou via vos partenaires historiques</li>\r\n    //                             <li>Accédez à des analyses plastiques</li>\r\n    //                             <li>Rencontrez des oeuvres qui vous inspirent</li>\r\n    //                             <li>Gagnez en visibilité, accroissez vos communautés et réseaux professionnels</li>\r\n    //                         </ul>\r\n    //                     </div>\r\n\r\n    //                 </div>\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tDUO CONTENT - PLATEFORME POUR ARTISTES - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <div className=\"startSpaceBar mt-c mb-d\">\r\n\r\n    //                 <div></div>\r\n\r\n    //             </div>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tDUO CONTENT - NUMERISATION HD - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"center-col plr-a\">\r\n\r\n    //                 <div className=\"duoCBoxCont\">\r\n\r\n    //                     <div className=\"col\">\r\n    //                         <h2>Valorisez votre patrimoine artistique via sa numérisation HD</h2>\r\n    //                         <p>Nous faisons le pari de la valorisation de votre patrimoine artistique numérisé en mode Haute Définition (HD)</p>\r\n    //                         <ul>\r\n    //                             <li>Photographies HD de vos oeuvres, gigapixelisation,</li>\r\n    //                             <li>Évaluation de votre potentiel Business numérique,</li>\r\n    //                             <li>Marketing de vos enchères,</li>\r\n    //                             <li>Vente de vos supports numériques,</li>\r\n    //                             <li>Gestion de vos royalties,</li>\r\n    //                             <li>Coffre fort numérique…</li>\r\n    //                         </ul>\r\n    //                         <p><b>Une offre 360°de valorisation de votre patrimoine artistique numérisé</b></p>\r\n    //                     </div>\r\n\r\n    //                     <div className=\"col black\">\r\n    //                         <img className=\"ico\" src={believe} alt=\"Une plateforme pour les artistes et le partage de la connaissance artistique\" />\r\n    //                         <p>Nous croyons fermement, pour tous les artistes, que le support numérique Haute Définition d’une oeuvre artistique sera demain, pour l’artiste et ses ayants droits, une source de revenus complémentaires conséquents, inscrite dans le temps et pleinement respectueuse du droit d’auteur.</p>\r\n    //                     </div>\r\n\r\n    //                 </div>\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tDUO CONTENT - NUMERISATION HD - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <div className=\"startSpaceBar mt-c mb-d\">\r\n\r\n    //                 <div></div>\r\n\r\n    //             </div>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tSTARTSPACEBAR - fin --> */}\r\n\r\n\r\n\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tFULL WIDTH CONTENT BOX - VALORISEZ VOTRE PATRIMOINE - début\r\n\t// \t\t******************************************************* --> */}\r\n    //             <section className=\"fwcCont\">\r\n\r\n    //                 <h2>Valorisez votre patrimoine artistique via sa numérisation HD</h2>\r\n    //                 <img className=\"diag\" src={frise1} alt=\"Valorisez votre patrimoine artistique via sa numérisation HD\" />\r\n    //                 <img className=\"diag-m\" src={frise2} alt=\"Valorisez votre patrimoine artistique via sa numérisation HD\" />\r\n\r\n    //             </section>\r\n    //             {/* <!-- ******************************************************\r\n\t// \t\tFULL WIDTH CONTENT BOX - NAVIGATION PAR MATCH - fin --> */}\r\n\r\n    //         </main>\r\n\r\n    //     </div >\r\n\r\n    // );\r\n}\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/StartPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "StartPage",
    "memberof": "src/view/StartPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/StartPage.js~StartPage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/StartPage.js",
    "importStyle": "StartPage",
    "description": "This component display Starting page wich explain how the website work",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "file",
    "name": "src/view/UserInfo.js",
    "content": "import React from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useState } from \"react\";\r\nimport AmateurInfo from \"../component/UserInfo/AmateurInfo\";\r\n\r\n/**\r\n * This component display the User update Page\r\n * @param {boolean} isLogged - test if the user is logged\r\n * @param {object} user - user object from api\r\n * @param {object} setUser - user setter\r\n\r\n */\r\n\r\n\r\nexport default function UserInfo({ isLogged,user, setUser}) {\r\n\r\n    // const { state } = useLocation();\r\n    // const [user, setUser] = useState(state);\r\n\r\n    console.log(user);\r\n\r\n    return (\r\n        <div className=\"UserInfo\">\r\n\r\n            <AmateurInfo user={user} setUser={setUser} isLogged={isLogged}/>\r\n           \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/remip/Documents/novagen/daylreact/src/view/UserInfo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "UserInfo",
    "memberof": "src/view/UserInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/UserInfo.js~UserInfo",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/UserInfo.js",
    "importStyle": "UserInfo",
    "description": "This component display the User update Page",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "sudo apt install npm\r\n\r\n#dans dayl-react:\r\nnpm i\r\nnpm start\r\n\r\n#Acces documentation : \r\nprod:\r\n https://remiplss.github.io\r\nlocal : \r\nouvrir => ./docs/function/index.html\r\n\r\n#modif documentation : \r\n- modifier le code source de index.html\r\n- voir https://esdoc.org/",
    "longname": "C:\\Users\\remip\\Documents\\novagen\\daylreact\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n    \"name\": \"client\",\r\n    \"version\": \"0.1.0\",\r\n    \"private\": true,\r\n    \"proxy\": \"http://162.19.52.131:8088\",\r\n    \"dependencies\": {\r\n        \"@emoji-mart/data\": \"^1.0.2\",\r\n        \"@mickyballadelli/react-tenor17\": \"^3.0.0\",\r\n        \"animate.css\": \"^4.1.1\",\r\n        \"atom-react-color\": \"^2.13.3\",\r\n        \"axios\": \"^0.24.0\",\r\n        \"better-docs\": \"^2.7.2\",\r\n        \"carousel\": \"^0.0.3\",\r\n        \"css-loader\": \"^6.7.1\",\r\n        \"dayjs\": \"^1.11.3\",\r\n        \"emoji-mart\": \"^5.1.0\",\r\n        \"emoji-picker-react\": \"^3.5.1\",\r\n        \"esdoc-flow-type-plugin\": \"^1.1.0\",\r\n        \"esdoc-jsx-plugin\": \"^1.0.0\",\r\n        \"esdoc-lint-plugin\": \"^1.0.2\",\r\n        \"esdoc-publish-markdown-plugin\": \"^1.1.0\",\r\n        \"esdoc-react-plugin\": \"^1.0.1\",\r\n        \"express\": \"^4.17.1\",\r\n        \"hammerjs\": \"^2.0.8\",\r\n        \"jquery\": \"^3.6.0\",\r\n        \"jsdoc\": \"^3.6.11\",\r\n        \"mui\": \"^0.0.1\",\r\n        \"nodemon\": \"^2.0.15\",\r\n        \"react\": \"^17.0.2\",\r\n        \"react-bootstrap\": \"^2.0.2\",\r\n        \"react-collapsible\": \"^2.8.4\",\r\n        \"react-color\": \"^2.19.3\",\r\n        \"react-color-palette\": \"^6.2.0\",\r\n        \"react-dom\": \"^17.0.2\",\r\n        \"react-helmet\": \"^6.1.0\",\r\n        \"react-hook-form\": \"^7.30.0\",\r\n        \"react-loading\": \"^2.0.3\",\r\n        \"react-multi-carousel\": \"^2.8.0\",\r\n        \"react-router\": \"^6.0.2\",\r\n        \"react-router-dom\": \"^6.0.2\",\r\n        \"react-scripts\": \"^5.0.1\",\r\n        \"react-select\": \"^5.3.2\",\r\n        \"react-share\": \"^4.4.0\",\r\n        \"react-tabs\": \"^4.1.0\",\r\n        \"react-toastify\": \"^9.0.4\",\r\n        \"react-use-cookie\": \"^1.4.0\",\r\n        \"sha1\": \"^1.1.1\",\r\n        \"slick-carousel\": \"^1.8.1\",\r\n        \"style-loader\": \"^3.3.1\",\r\n        \"truncate\": \"^3.0.0\",\r\n        \"web-vitals\": \"^1.0.1\"\r\n    },\r\n    \"scripts\": {\r\n        \"start\": \"react-scripts start\",\r\n        \"build\": \"react-scripts build\",\r\n        \"test\": \"react-scripts test\",\r\n        \"eject\": \"react-scripts eject\",\r\n        \"storybook\": \"start-storybook -p 6006 -s public\",\r\n        \"build-storybook\": \"build-storybook -s public\",\r\n        \"docs\": \"jsdoc -c jsdoc.conf.json\"\r\n    },\r\n    \"eslintConfig\": {\r\n        \"extends\": [\r\n            \"react-app\",\r\n            \"react-app/jest\"\r\n        ],\r\n        \"overrides\": [\r\n            {\r\n                \"files\": [\r\n                    \"**/*.stories.*\"\r\n                ],\r\n                \"rules\": {\r\n                    \"import/no-anonymous-default-export\": \"off\"\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    \"browserslist\": {\r\n        \"production\": [\r\n            \">0.2%\",\r\n            \"not dead\",\r\n            \"not op_mini all\"\r\n        ],\r\n        \"development\": [\r\n            \"last 1 chrome version\",\r\n            \"last 1 firefox version\",\r\n            \"last 1 safari version\"\r\n        ]\r\n    },\r\n    \"devDependencies\": {\r\n        \"@babel/preset-react\": \"^7.17.12\",\r\n        \"esdoc\": \"^1.1.0\",\r\n        \"esdoc-standard-plugin\": \"^1.0.0\",\r\n        \"react-prismazoom\": \"^3.0.3\"\r\n    }\r\n}\r\n",
    "longname": "C:\\Users\\remip\\Documents\\novagen\\daylreact\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]