[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/App.js",
    "content": "\nimport {Route, Routes,Router } from 'react-router-dom'\nimport { useState, useEffect } from 'react';\nimport ReactLoading from 'react-loading';\nimport useCookie, { getCookie, setCookie } from 'react-use-cookie';\nimport OpusPage from './view/OpusPage';\nimport SqueletteHead from './component/general/SqueletteHead';\nimport SqueletteFoot from './component/general/SqueletteFoot';\nimport HomePage from './view/HomePage';\nimport SignInPage from './view/SignInPage';\nimport CompteAmateurPage from './view/CompteAmateurPage';\nimport FavArtists from './component/CompteAmateurPage/FavArtists';\nimport ArtistDetailpage from './view/ArtistDetailPage';\nimport Matching from './component/CompteAmateurPage/Matching';\nimport MatchingPage from './view/MatchingPage';\nimport ListeAmateurPage from './view/ListeAmateurPage';\nimport MatchingColor from './view/MatchingColor';\nimport MatchingImage from './view/MatchingImage';\nimport SignIn from './view/SignIn';\nimport LogIn from './view/LogIn';\nimport Atelier from './view/Atelier';\nimport Biography from './component/Atelier/Biography';\nimport ChatMenu from './component/Chat/ChatMenu';\nimport ChatModal from './component/Chat/ChatModal';\nimport GoToTop from \"./services/ScrollToTop\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport{ URLDayl} from \"./services/constantes\"\nimport axios from \"axios\"\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useParams } from 'react-router';\nimport UserInfo from './view/UserInfo';\nimport StartPage from './view/StartPage';\n\n/**\n * This component is the root of the project, it contains all the routes to the different pages\n\n */\n\nfunction App() {\n\n\n  const [paintId, setPaintId] = useState();\n  const [user, setUser] = useState(null);\n  const [isLogged, setIsLogged] = useState(false);\n   const [isActive, setIsActive] = useState(1);\n\n   //go to top of page on load\n useEffect(() => {\n    window.scrollTo(0,0);\n}, [paintId]);\n\nconsole.log(localStorage.getItem(\"id\"))\n//temporary get user on page refresh\nuseEffect(() => { \n\nif(localStorage.getItem(\"id\")){\n  \n  axios.get(URLDayl + `users/${localStorage.getItem(\"id\")}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n    ).then((response) => {\n      setUser(response.data)\n    console.log(response.data);\n      setIsLogged(true)\n    });}\n \n}, []);\n\n// if(!user){\n//   return(<div style={{bottom: \"50%\",left: \"50%\", position: \"absolute\"}}><ReactLoading color={\"#E9573F\"} type={\"spin\"} height={\"40px\"} width={\"40px\"}  /></div>)\n// }\n\n  return (  \n    <div>\n        <ToastContainer autoClose={false} draggableDirection=\"y\" style={{zIndex : \"99999999\", fontSize: \"14px\"}}/>\n\n    <div className=\"App\" >\n      \n\n      <SqueletteHead isActive={isActive} setIsActive={setIsActive} user={user} setUser = {setUser} isLogged={isLogged}/>\n     \n      <Routes>\n\n        <Route path=\"/\" element={<HomePage paintId={paintId} user={user} isLogged={isLogged} setUser={setUser} />} />\n        <Route path=\"/StartingPage\" element={<StartPage paintId={paintId} user={user} isLogged={isLogged} setUser={setUser} />} />\n        {/* <Route path=\"view/SignInPage.js\" element={isLogged ? <CompteAmateurPage user={user} setUser={setUser} /> : <SignInPage user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser}/>} /> */}\n        <Route path=\"view/CompteAmateurPage.js\" element={<CompteAmateurPage isActive={isActive} setIsActive={setIsActive} user={user} setUser={setUser} setIsLogged={setIsLogged} isLogged={isLogged}/>} />\n        <Route path=\"view/LogIn.js\" element={/* isLogged ? <CompteAmateurPage user={user} setUser={setUser} setIsLogged={setIsLogged} isLogged={isLogged} /> :  */<LogIn isActive={isActive} setIsActive={setIsActive} user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser} />} />\n        <Route path=\"view/SignIn.js\" element={/* isLogged ? <CompteAmateurPage user={user} setUser={setUser} setIsLogged={setIsLogged} isLogged={isLogged} /> : */ <SignIn isActive={isActive} setIsActive={setIsActive} user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser} />} />\n        <Route path=\"component/CompteAmateurPage/FavArtists.js\" element={<FavArtists />} />\n        <Route path=\"view/OpusPage.js/:id\" element={<OpusPage paintId={paintId} setPaintId={setPaintId} user={user} setUser={setUser} isLogged={isLogged} />} />\n        <Route path=\"view/MatchingPage.js/:id\" element={<MatchingPage user={user} paintId={paintId} setPaintId={setPaintId} setUser={setUser} isLogged={isLogged} />} />\n        <Route path=\"view/ArtistDetailPage.js/:id\" element={<ArtistDetailpage paintId={paintId} setPaintId={setPaintId} user={user} setUser={setUser} isLogged={isLogged} />} />\n        <Route path=\"view/ListeAmateurPage.js/:id\" element={<ListeAmateurPage paintId={paintId} user={user} isLogged={isLogged} />} />\n        <Route path=\"view/MatchingImage.js\" element={<MatchingImage user={user} paintId={paintId} setPaintId={setPaintId} setUser={setUser} isLogged={isLogged}/>} />\n        <Route path=\"view/MatchingColor.js\" element={<MatchingColor user={user} paintId={paintId} setPaintId={setPaintId} setUser={setUser} isLogged={isLogged} />} />\n        <Route path=\"view/Atelier.js\" element={<Atelier user={user} setUser={setUser} setIsLogged={setIsLogged} isLogged={isLogged} />} />\n        <Route path=\"view/UserInfo.js\" element={<UserInfo user={user} setUser={setUser} setIsLogged={setIsLogged} isLogged={isLogged} />} />\n      </Routes>\n      {/* <ChatMenu /> */}\n      {/* <ChatModal/> */}\n      <SqueletteFoot />\n<GoToTop/>\n\n    \n    </div >\n\n    </div>\n  );\n}\n\nexport default App;\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/App.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "App",
    "memberof": "src/App.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/App.js~App",
    "access": "public",
    "export": true,
    "importPath": "client/src/App.js",
    "importStyle": "App",
    "description": "This component is the root of the project, it contains all the routes to the different pages ",
    "lineNumber": 39,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/App.test.js",
    "content": "import { render, screen } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  render(<App />);\n  const linkElement = screen.getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/App.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "file",
    "name": "src/component/ArtistDetailPage/Artist.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { Link } from \"react-router-dom\";\n// import verif from \"../../webapp/img/icons/badge_verified-account_1.svg\"\nimport { toast } from \"react-toastify\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport ListPaintArtist from \"./ListPaintArtist\";\nimport SimilarArtist from \"./SimilarArtist\";\nimport Biography from \"./Biography\";\n\n\n/**\n * Display information about the artist and child components in tabs\n * @emits - <strong>artist/byIdtf/{idtf}</strong> : get painter informations \n * @emits - artistLiked/add(remove)FavoriteArtist/ : follow/unfollow artist\n * @emits - users/{id} : refresh user info\n */\n\n\nexport default function Artist({ user, setUser, paintId, isLogged }) {\n\n\tconst [artist, setArtist] = useState([]);\n\tconst [bg, setBg] = useState(\"\");\n\tconst [refreshKey, setRefreshKey] = useState(0);\n\tconst [boolLike, setBoolLike] = useState(false);\n\tconst [isActive, setIsActive] = useState(1);\n\n\n\t//get info painter//\n\tuseEffect(() => {\n\t\taxios.get(URLDayl + `artist/byIdtf/${paintId}`, {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\n\t\t\t.then((response) => {\n\t\t\t\tsetArtist(response.data);\n\n\n\t\t\t});\n\n\n\t}, [paintId]);\n\n\n\n\t//get random image for background//\n\tuseEffect(() => {\n\t\tconst randInt = Math.floor(Math.random() * (artist.numberOfPAinting - 1) + 1);\n\n\n\t\tif (randInt !== NaN) {\n\t\t\tsetBg(\"image_\" + randInt + \".jpg\");\n\n\t\t}\n\n\t}, [artist]);\n\n\t//Changement onglet\n\tconst toggleClass = (val) => {\n\t\tsetIsActive(val);\n\n\n\t};\n\n\t//Test Follow//\n\tuseEffect(() => {\n\n\t\tif (user && artist) {\n\t\t\tfor (let i = 0; i < user.artistLiked.length; i++) {\n\n\t\t\t\tif (user.artistLiked[i] === artist.id) {\n\t\t\t\t\tsetBoolLike(true);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t}, [artist]);\n\n\t//Follow/Unfollow l'artiste//\n\tfunction follow() {\n\t\tif (user && artist) {\n\n\n\t\t\tif (boolLike === false)\n\t\t\t\tsetBoolLike(true)\n\t\t\telse\n\t\t\t\tsetBoolLike(false)\n\n\n\n\n\t\t\tif (user) {\n\t\t\t\tif (boolLike === false)\n\t\t\t\t\taxios.get(URLDayl + `artistLiked/addFavoriteArtist/${user.id}/${artist.id}`, {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tsetBoolLike(true)\n\n\n\t\t\t\t\t\t});\n\t\t\t\telse\n\t\t\t\t\taxios.get(URLDayl + `artistLiked/deleteFavoriteArtist/${user.id}/${artist.id}`, {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tsetBoolLike(false)\n\n\t\t\t\t\t\t\tconsole.log(response.data)\n\t\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ttoast.warning(\"Connectez-vous pour suivre cet artiste!\", {\n\t\t\t\tposition: \"top-right\",\n\t\t\t\tautoClose: 3000,\n\t\t\t\thideProgressBar: false,\n\t\t\t\tcloseOnClick: true,\n\t\t\t\tpauseOnHover: true,\n\t\t\t\tdraggable: true,\n\t\t\t\tprogress: undefined,\n\t\t\t});\n\t\t}\n\n\t\t//refresh user\n\t\tif (user)\n\t\t\taxios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n\t\t\t)\n\t\t\t\t.then((response2) => {\n\n\t\t\t\t\tsetUser(response2.data)\n\t\t\t\t});\n\n\t\tsetRefreshKey(oldKey => oldKey + 1);\n\t}\n\n\n\treturn (\n\t\t<div className=\"Artist\">\n\n\t\t\t{/* <!-- ******************************************************\n\t\t\tSECTION PRÉSENTATION DE L'ARTISTE - début\n\t\t\t****************************************************** --> */}\n\t\t\t<section className=\"center-col\">\n\n\t\t\t\t<div className=\"cont-f-w artistBg\" style={{ backgroundImage: `url(${URLDayl}images/content/${artist && artist.functionalId}/${bg})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\" }}></div>\n\n\t\t\t\t<div className=\"cont-n-w center-col artistBox\">\n\n\t\t\t\t\t<ol className=\"topBcCenter mb-b\" style={{ padding: \"0 0 20px 0\" }}>\n\t\t\t\t\t\t<li><Link to=\"../../\">Accueil</Link></li>\n\t\t\t\t\t\t<li className=\"#\"><a>Artistes</a></li>\n\t\t\t\t\t\t<li className=\"#\">{artist.firstName}</li>\n\t\t\t\t\t</ol>\n\t\t\t\t\t{/* <!-- Suivre cet artiste - début --> */}\n\t\t\t\t\t<ul className=\"inlineList mb-c\">\n\t\t\t\t\t\t{boolLike === false && <li><button className=\"followArtist\" onClick={follow} type=\"button\" value=\"#\">&#x2b;&nbsp;&nbsp; Suivre</button></li>}\n\t\t\t\t\t\t{boolLike === true && <li><button className=\"followedArtist\" onClick={follow} type=\"button\" value=\"#\">&#x2713;&nbsp;&nbsp; Suivi</button></li>}\n\t\t\t\t\t</ul>\n\t\t\t\t\t{/* <!-- Suivre cet artiste - fin -->\n\t\t\t\t\t<!-- Nom de l'artiste - début --> */}\n\t\t\t\t\t<h1>\n\t\t\t\t\t\t<span>{artist && artist.name}</span>\n\t\t\t\t\t</h1>\n\t\t\t\t\t{/* <!-- Nom de l'artiste - fin -->\n\t\t\t\t\t<!-- Données rapides de l'artiste - début --> */}\n\t\t\t\t\t<div className=\"artistQuickFacts\">\n\t\t\t\t\t\t<span>{artist && artist.yearBirth} - {artist && artist.yearDeath}</span>\n\t\t\t\t\t\t<span>&nbsp;|&nbsp;</span>\n\t\t\t\t\t\t<span>{artist && artist.country}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <!-- Données rapides de l'artiste - fin -->\n\t\t\t\t\t<!-- Bio de l'artiste - début --> */}\n\t\t\t\t\t<p>{artist && artist.description}</p>\n\t\t\t\t\t{/* <!-- Bio de l'artiste - fin -->\n\t\t\t\t\t\n\t\t\t\t\t<!-- Suivre cet artiste - début --> */}\n\n\n\t\t\t\t\t<ul className=\"inlineList mt-b mb-a\">\n\t\t\t\t\t\t<li><a onClick={(e) => setIsActive(1)} className={isActive === 1 ?\"tabLink active\" : \"tabLink\"}>Oeuvres</a></li>\n\t\t\t\t\t\t<li><a onClick={(e) => setIsActive(2)} className={isActive === 2 ?\"tabLink active\" : \"tabLink\"}>Biographie</a></li>\n\t\t\t\t\t\t<li><a onClick={(e) => setIsActive(3)} className={isActive === 3 ?\"tabLink active\" : \"tabLink\"}>Avis d'experts</a></li>\n\t\t\t\t\t\t<li><a onClick={(e) => setIsActive(4)} className={isActive === 4 ?\"tabLink active\" : \"tabLink\"}>Analyse chromatiques</a></li>\n\t\t\t\t\t\t<li><a onClick={(e) => setIsActive(5)} className={isActive === 5 ?\"tabLink active\" : \"tabLink\"}>Actualités</a></li>\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t{/* <!-- Suivre cet artiste - fin --> */}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t{isActive === 1 && <div>\n\t\t\t\t<ListPaintArtist paintId={paintId} user={user} setUser={setUser} isLogged={isLogged} />\n\t\t\t\t<SimilarArtist paintId={paintId} />\n\t\t\t</div>\n\t\t\t}\n\t\t\t{isActive === 2 && <div>\n\t\t\t\t<Biography bg={bg} artist={artist}/>\n\t\t\t</div>\n\t\t\t}\n\t\t\t{isActive === 3 && <div>\n\t\t\t\n\t\t\t</div>\n\t\t\t}\n\t\t\t{isActive === 4 && <div>\n\t\t\t\n\t\t\t</div>\n\t\t\t}\n\n\t\t\t{/* <!-- SECTION PRÉSENTATION DE L'ARTISTE - fin --> */}\n\n\t\t</div>\n\n\t);\n}\n\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/ArtistDetailPage/Artist.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "Artist",
    "memberof": "src/component/ArtistDetailPage/Artist.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/ArtistDetailPage/Artist.js~Artist",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/ArtistDetailPage/Artist.js",
    "importStyle": "Artist",
    "description": "Display information about the artist and child components in tabs",
    "lineNumber": 22,
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "<strong>artist/byIdtf/{idtf}</strong> : get painter informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "artistLiked/add(remove)FavoriteArtist/ : follow/unfollow artist"
      },
      {
        "types": [
          "*"
        ],
        "description": "users/{id} : refresh user info"
      }
    ],
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"user\": *, \"setUser\": *, \"paintId\": *, \"isLogged\": *}"
        ],
        "defaultRaw": {
          "user": null,
          "setUser": null,
          "paintId": null,
          "isLogged": null
        },
        "defaultValue": "{\"user\":null,\"setUser\":null,\"paintId\":null,\"isLogged\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/component/ArtistDetailPage/Biography.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport lecar from \"../../webapp/temp/lecar_1.jpg\"\n\n\n/**\n * Artist Biography in ArtistPage\n * @param {string} bg - random image from this artist\n * @param {object} artist - artist informations from api\n */\n\nexport default function Biography({bg, artist}) {\n\n\n\n\n    return (\n        <div className=\"Biography\" >\n\n\n            {/* <!-- Biographie debut\n******************************************************* --> */}\n            <section className=\"center-col mt-c mb-d\">\n\n                <div className=\"RandomQuickFactBox cont-l-w mb-d\">\n\n                    <div>\n                      \n                       \n                    </div>\n\n                    <div className=\"col artistPortrait\" style={{ backgroundImage: `url(${URLDayl}images/content/${artist && artist.functionalId}/${bg})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\" }}>\n                        {/* <p>{artist.name}, craie sur papier par Ottavio Leoni, vers 1621, Florence, bibliothèque Marucelliana</p> */}\n                    </div>\n\n                    <div className=\"col\">\n                     \n                        <p>Michelangelo Merisi da Caravaggio, francisé Caravage ou le Caravage, est un peintre italien, né le 29 septembre 1571 à Milan et mort le 18 juillet 1610 à Porto Ercole.<br /><br />Son œuvre puissante et novatrice révolutionne la peinture du xviie siècle par son caractère naturaliste, son réalisme parfois brutal et l'emploi appuyé de la technique du clair-obscur allant jusqu'au ténébrisme. Il connaît la célébrité de son vivant et influence nombre de grands peintres après lui, comme en témoigne l'apparition du caravagisme.<br /><br />Après une longue période d'oubli critique, il faut attendre le début du xxe siècle pour que le génie de Caravage soit pleinement reconnu, indépendamment de sa réputation sulfureuse.</p>\n                    </div>\n\n                </div>\n\n            </section>\n            {/* <!-- Biographie - fin --> */}\n\n\n\n\n        </div>\n    );\n}\n\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/ArtistDetailPage/Biography.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "Biography",
    "memberof": "src/component/ArtistDetailPage/Biography.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/ArtistDetailPage/Biography.js~Biography",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/ArtistDetailPage/Biography.js",
    "importStyle": "Biography",
    "description": "Artist Biography in ArtistPage",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bg",
        "description": "random image from this artist"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "artist",
        "description": "artist informations from api"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "src/component/ArtistDetailPage/SimilarArtist.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { Link } from \"react-router-dom\";\n\n\n/**\n * List of similar artists\n *  @param {number} paintId - artist ID\n * @emits - similarArtists/findByArtistId/${paintId}/?numberOfArtists=49 : get list of similar artists\n */\nexport default function SimilarArtist({paintId }) {\n\n    const [listSimilarArtist, setListSimilarArtist] = useState([]);\n\n\n    useEffect(() => {\n\n        axios.get(URLDayl + `similarArtists/findByArtistId/${paintId}/?numberOfArtists=49`).then((response) => {\n            setListSimilarArtist(response.data);\n\n            console.log(response.data)\n\n        });\n    }, [paintId]);\n\n    return (\n        <div className=\"SimilarArtist\">\n\n            <section id=\"#\" className=\"center-col\">\n                <div className=\"cont-l-w center-tex\">\n                    <h2>Artistes similaires</h2>\n                    <p>Découvrez d'autres oeuvres</p>\n\n                    <div className=\"accountArtists mt-b\">\n\n\n                        {listSimilarArtist.length > 0 &&\n                            listSimilarArtist.map((listSimilar) => {\n                                if (listSimilar.artistDisplayDTO == null) {\n                                    return null\n                                }\n\n                                return (\n                                    <div className=\"item\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${listSimilar.artistDisplayDTO != null && listSimilar.artistDisplayDTO.functionalId}/${listSimilar.artistDisplayDTO != null && listSimilar.artistDisplayDTO.backgroundImage})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\" }}>\n                                        {/* <div className=\"base\" > */}\n                                        {/* <div className=\"img-wrapper\"> */}\n                                        <div className=\"name\">{listSimilar.artistDisplayDTO != null && listSimilar.artistDisplayDTO.name}</div>\n                                        <div className=\"items-count\">{listSimilar.artistDisplayDTO && listSimilar.artistDisplayDTO.numberOfPAinting} Oeuvres</div>\n                                        <Link className=\"discover\" to={`../../view/ArtistDetailPage.js/${listSimilar.artistDisplayDTO.functionalId}`} state={listSimilar.artistDisplayDTO.functionalId} ></Link>\n                                        {/* <img src={`https://art.novagen.tech/medias/artist/${listSimilar.artistDisplayDTO != null && listSimilar.artistDisplayDTO.functionalId}/_mini/${listSimilar.artistDisplayDTO != null && listSimilar.artistDisplayDTO.backgroundImage}`} alt=\"Nom de l'artiste\" /> */}\n                                        {/* </div> */}\n                                        {/* </div> */}\n                                    </div>\n                                )\n                            })}\n\n\n\n                    </div>\n                </div>\n\n            </section>\n\n        </div>\n\n    );\n}\n\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/ArtistDetailPage/SimilarArtist.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "SimilarArtist",
    "memberof": "src/component/ArtistDetailPage/SimilarArtist.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/ArtistDetailPage/SimilarArtist.js~SimilarArtist",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/ArtistDetailPage/SimilarArtist.js",
    "importStyle": "SimilarArtist",
    "description": "List of similar artists",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "artist ID"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "similarArtists/findByArtistId/${paintId}/?numberOfArtists=49 : get list of similar artists"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/component/Atelier/Biography.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { URLDayl } from \"../../services/constantes\"\nimport MenuAtelier from \"./MenuAtelier\";\n\n\n/**\n * Page to update your Biography\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n *  @param {boolean} isLogged - test if the user is logged\n */\nexport default function Biography({ user, setUser, isLogged }) {\n\n\n    return (\n\n        <div class=\"Biography\">\n            <MenuAtelier user={user} aaaaaaaaaa isLogged={isLogged} setUser={setUser} />\n\n            <main class=\"workShopMain\">\n\n                <h2>Ma biographie</h2>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis accumsan vehicula odio, tempus convallis eros euismod sed. Donec ultricies quam vulputate commodo suscipit.</p>\n\n                {/* <!-- SECTION A PROPOS DE MOI - début --> */}\n                <section class=\"mt-c\">\n                    <form class=\"formCompact\" method=\"post\" action=\"\">\n                        <h3 class=\"mt-a\">A propos de moi</h3>\n                        <div class=\"inputInline\">\n                            <input type=\"text\" size=\"55\" placeholder=\"Nom\" required />\n                            <input type=\"text\" size=\"55\" placeholder=\"Prénom\" required />\n                        </div>\n                        <input type=\"text\" size=\"55\" placeholder=\"Nom d'artiste\" required />\n                        <div class=\"inputInline\">\n                            <input type=\"text\" size=\"55\" placeholder=\"Ville d'origine\" required />\n                            <input type=\"text\" size=\"55\" placeholder=\"Pays d'origine\" required />\n                        </div>\n                        <div class=\"inputInline\">\n                            <input type=\"radio\" name=\"radio\" value=\"radio\" />\n                            <label for=\"radio\">Femme</label>\n                            <input type=\"radio\" name=\"radio\" value=\"radio\" />\n                            <label for=\"radio\">Homme</label>\n                        </div>\n                        <h3 class=\"mt-c\">Présentation de mon parcours</h3>\n                        <textarea name=\"message\" rows=\"5\" cols=\"33\" placeholder=\"Votre message\"></textarea>\n                        <h3 class=\"mt-c\">Descriptif de mon travail</h3>\n                        <textarea name=\"message\" rows=\"5\" cols=\"33\" placeholder=\"Votre message\"></textarea>\n                        <h3 class=\"mt-c\">Ajouter des mots clés ( séparés par des virgules)</h3>\n                        <input type=\"text\" size=\"55\" placeholder=\"Ex : paysage, lune, …\" required />\n                        <div class=\"tagList toLeft\">\n                            <a href=\"#\">Mot-clé</a>\n                            <a href=\"#\">Mot-clé</a>\n                            <a href=\"#\">Mot-clé</a>\n                            <a href=\"#\">Mot-clé</a>\n                            <a href=\"#\">Mot-clé</a>\n                            <a href=\"#\">Mot-clé</a>\n                            <a href=\"#\">Mot-clé</a>\n                            <a href=\"#\">Mot-clé</a>\n                        </div>\n                        <h3 class=\"mt-c\">Ma bannière pro</h3>\n                        <div class=\"proBanner\" style={{ backgroundImage: \"url('temp/leonora_more_1.jpg')\", backgroundPosition: \"50% center\", backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }}>\n                            {/* <!-- ///////////////////////////////////\n\t\t\t\t\tModal configuration de l'arrière-plan - début\n\t\t\t\t\t//////////////////////////////////// --> */}\n                            <a class=\"openModalNow topAccountBg\" data-target=\"topAccountBg\" rel=\"nofollow\">\n                                <img src=\"img/icons/ico_pen_1.svg\" alt=\"Modifier l'arrière-plan\" />\n                            </a>\n\n                            <div id=\"topAccountBg\" class=\"smart-modal-content scrollAuto\" style={{ width: \"340px\" }}>\n                                <h3>Modifier l'arrière-plan</h3>\n                                <a class=\"smart-modal-close\"><img class=\"img-left\" src=\"img/icons/ico_close_2.svg\" alt=\"Fermer\" /></a>\n\n                                <p class=\"fileRestriction mt-b mb-a\">Image au format .jpg ou .png<br />2Mo maximum</p>\n\n                                <div class=\"fileUploadInput\" data-text=\"Sélectionnez un fichier\">\n                                    <input name=\"fileUploadField\" type=\"file\" class=\"fileUploadField\" value=\"\" />\n                                </div>\n\n                            </div>\n                            {/* <!-- ///////////////////////////////////\n\t\t\t\t\tModal configuration de l'arrière-plan - fin\n\t\t\t\t\t//////////////////////////////////// --> */}\n                        </div>\n                        <h3 class=\"mt-c\">Mes réseaux sociaux pro</h3>\n                        <div class=\"inputInline\">\n                            <input type=\"text\" size=\"55\" placeholder=\"Site internet\" required />\n                            <input type=\"text\" size=\"55\" placeholder=\"Page Facebook\" required />\n                        </div>\n                        <div class=\"inputInline\">\n                            <input type=\"text\" size=\"55\" placeholder=\"Page Instagram\" required />\n                            <input type=\"text\" size=\"55\" placeholder=\"Page Pinterest\" required />\n                        </div>\n                        <div class=\"inputInline\">\n                            <input type=\"text\" size=\"55\" placeholder=\"Page Twitter\" required />\n                            <input type=\"text\" size=\"55\" placeholder=\"Page LinkedIn\" required />\n                        </div>\n                        <div class=\"inputInline\">\n                            <div>\n                                <input type=\"reset\" class=\"saveDraftBtn mt-a\" value=\"Sauvegarder comme brouillon\" />\n                            </div>\n                            <div>\n                                <input type=\"submit\" class=\"submitFormBtn mt-a\" value=\"Enregistrer\" />\n                            </div>\n                        </div>\n\n                    </form>\n\n\n                </section>\n                {/* <!-- SECTION A PROPOS DE MOI - fin --> */}\n            </main>\n        </div>\n    );\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/Atelier/Biography.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "Biography",
    "memberof": "src/component/Atelier/Biography.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/Atelier/Biography.js~Biography",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/Atelier/Biography.js",
    "importStyle": "Biography",
    "description": "Page to update your Biography",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/component/Atelier/MenuAtelier.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport home from \"../../webapp/img/icons/atelier_side_home_1.svg\"\nimport edit from \"../../webapp/img/icons/atelier_side_edit_1.svg\"\nimport add from \"../../webapp/img/icons/atelier_side_images-ajoutees_1.svg\"\nimport galerie from \"../../webapp/img/icons/atelier_side_galerie_1.svg\"\nimport reco from \"../../webapp/img/icons/atelier_side_reco_1.svg\"\nimport expo from \"../../webapp/img/icons/atelier_side_expo_1.svg\"\nimport a from \"../../webapp/img/icons/atelier_side_tableau_1.svg\"\nimport Accueil from \"./Accueil\";\nimport Biography from \"./Biography\";\n\n/**\n * Workshop side menu\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n *  @param {boolean} isLogged - test if the user is logged \n *  @param {boolean} setIsLogged - isLogged setter\n */\n\nexport default function MenuAtelier({ user, setUser, isLogged, setIsLogged }) {\n\n    //init Variables global\n    const [isActive, setActive] = useState(1);\n\n\n    //Active class a\n    const toggleClass = (val) => {\n        setActive(val);\n    };\n\n    return (\n        <div className=\"MenuAtelier\">\n            <Tabs>\n                <div className=\"workShopSideNav\">\n                    {/* <!-- BLOC NAVIGATION FIXE GAUCHE - début --> */}\n\n                    <TabList>\n                        <div className=\"workShopArtistTop\">\n                            <h1>Arthur de Frayssinet</h1>\n                            <Link className=\"bt-action voir\" to=\"../view/Biography.js\">\n                                Ma biographie<span><img src={edit} alt=\"Modifier ma biographie\" /></span>\n                            </Link>\n\n                        </div>\n\n                        <nav className=\"workShopNav mt-b\">\n                            <ul>\n                                <Tab className=\"mb-b react-tabs__tab\">\n                                    <a className={isActive === 2 ? 'active' : null} onClick={() => toggleClass(2)} ><img src={home} alt=\"Retour à l'accueil\" /><span className=\"title\">Accueil de l'atelier</span></a>\n                                </Tab>\n                                <Tab className=\"react-tabs__tab\">\n                                    <a ><img src={add} alt=\"Images ajoutées\" /><span className=\"title\">Images ajoutées</span></a>\n                                </Tab>\n                                <Tab className=\"react-tabs__tab\">\n                                    <a ><img src={edit} alt=\"Brouillons à terminer\" /><span className=\"title\">Brouillons à terminer</span><span className=\"pill\">4</span></a>\n                                </Tab>\n                                <Tab className=\"mb-b react-tabs__tab\">\n                                    <a ><img src={galerie} alt=\"Galerie de peintures\" /><span className=\"title\">Galerie de peintures</span></a>\n                                </Tab>\n                                <Tab className=\"mb-b react-tabs__tab\">\n                                    <a ><img src={reco} alt=\"Recommandations\" /><span className=\"title\">Recommandations</span></a>\n                                </Tab >\n                                <Tab className=\"mb-b react-tabs__tab\">\n                                    <a ><img src={expo} alt=\"Expositions\" /><span className=\"title\">Expositions</span></a>\n                                    <ul>\n                                        <Tab className=\"react-tabs__tab\">\n                                            <a>Ajouter une exposition</a>\n                                        </Tab>\n                                        <Tab className=\"react-tabs__tab\">\n                                            <a >Toutes mes expositions</a>\n                                        </Tab>\n                                    </ul>\n                                </Tab>\n                                <Tab className=\"react-tabs__tab\">\n                                    <a ><img src={a} alt=\"Tableau de bord\" /><span className=\"title\">Tableau de bord</span></a>\n                                </Tab>\n                            </ul>\n                        </nav>\n                        {/* <!-- BLOC NAVIGATION FIXE GAUCHE - fin --> */}\n\n                    </TabList>\n\n                </div>\n                <TabPanel>\n                    <Accueil user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser} />\n                </TabPanel>\n            </Tabs>\n        </div>\n\n    );\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/Atelier/MenuAtelier.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "MenuAtelier",
    "memberof": "src/component/Atelier/MenuAtelier.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/Atelier/MenuAtelier.js~MenuAtelier",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/Atelier/MenuAtelier.js",
    "importStyle": "MenuAtelier",
    "description": "Workshop side menu",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsLogged",
        "description": "isLogged setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/component/Chat/ChatMenu.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { URLDayl } from \"../../services/constantes\"\nimport Collapsible from 'react-collapsible';\nimport { set } from \"react-hook-form\";\nimport photo from \"../../webapp/temp/olivier_profil_1.jpeg\"\nimport photo2 from \"../../webapp/temp/arthur_1.jpg\"\n\n\n/**\n * Chat menu with list of conversation\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n *  @param {boolean} isLogged - test if the user is logged\n *  @param {boolean} boolChat - test if the chat menu is open\n *  @param {boolean} setBoolChat - boolChat setter\n */\n\nexport default function ChatMenu({ user, setUser, isLogged, boolChat, setBoolChat }) {\n\n\tconst [boolDisplay, setBoolDisplay] = useState(false);\n\tconst [listMsgBox, setListMsgBox] = useState([]);\n\tconst [listSender, setListSender] = useState([]);\n\n\n\tfunction handleVisible() {\n\t\tif (boolDisplay === false) {\n\t\t\tsetBoolDisplay(true);\n\t\t}\n\t\telse {\n\t\t\tsetBoolDisplay(false);\n\t\t}\n\t\tconsole.log(boolDisplay)\n\n\t}\n\n\tfunction addMessageBox() {\n\n\t\tlet tempList = listMsgBox;\n\n\n\t}\n\n\n\treturn (\n\t\t<div className=\"ChatMenu\">\n\t\t\t{/* <!-- BOX MESSAGERIE FIXED BOTTOM - début --> */}\n\t\t\t<div className={boolDisplay === true ? \"msgBottomBox open\" : \"msgBottomBox closed\"}>\n\n\t\t\t\t<header>\n\t\t\t\t\t<a href=\"\">\n\t\t\t\t\t\t<img src={photo} alt=\"Messagerie\" />\n\t\t\t\t\t\t<span>Messagerie</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t<button className=\"options\"></button>\n\t\t\t\t\t<button className=\"newMsg\"></button>\n\t\t\t\t\t<button className={boolDisplay === true ? \"isOpen\" : \"isClosed\"} onClick={handleVisible}></button>\n\t\t\t\t\t<button className=\"close\" onClick={e => setBoolChat(false)}></button>\n\t\t\t\t</header>\n\n\t\t\t\t<section>\n\n\t\t\t\t\t<article >\n\t\t\t\t\t\t<a href=\"\" className=\"pic\"><img src={photo2} alt=\"Messagerie\" /></a>\n\t\t\t\t\t\t<a href=\"\" className=\"sender\">Arthur de Frayssinet</a>\n\t\t\t\t\t\t<a href=\"\" className=\"date\">9 Juin 2022</a>\n\t\t\t\t\t\t<a href=\"\" className=\"extract\">Lorem Ipsum is simply dummy text of the printing and ...</a>\n\t\t\t\t\t</article>\n\n\t\t\t\t\t<article>\n\t\t\t\t\t\t<a href=\"\" className=\"pic\"><img src={photo2} alt=\"Messagerie\" /></a>\n\t\t\t\t\t\t<a href=\"\" className=\"sender\">Arthur de Frayssinet</a>\n\t\t\t\t\t\t<a href=\"\" className=\"date\">9 Juin 2022</a>\n\t\t\t\t\t\t<a href=\"\" className=\"extract\">Lorem Ipsum is simply dummy text of the printing and ...</a>\n\t\t\t\t\t</article>\n\n\t\t\t\t\t<article>\n\t\t\t\t\t\t<a href=\"\" className=\"pic\"><img src={photo2} alt=\"Messagerie\" /></a>\n\t\t\t\t\t\t<a href=\"\" className=\"sender\">Arthur de Frayssinet</a>\n\t\t\t\t\t\t<a href=\"\" className=\"date\">9 Juin 2022</a>\n\t\t\t\t\t\t<a href=\"\" className=\"extract\">Lorem Ipsum is simply dummy text of the printing and ...</a>\n\t\t\t\t\t</article>\n\n\t\t\t\t\t<article>\n\t\t\t\t\t\t<a href=\"\" className=\"pic\"><img src={photo2} alt=\"Messagerie\" /></a>\n\t\t\t\t\t\t<a href=\"\" className=\"sender\">Arthur de Frayssinet</a>\n\t\t\t\t\t\t<a href=\"\" className=\"date\">9 Juin 2022</a>\n\t\t\t\t\t\t<a href=\"\" className=\"extract\">Lorem Ipsum is simply dummy text of the printing and ...</a>\n\t\t\t\t\t</article>\n\n\t\t\t\t</section>\n\n\t\t\t</div>\n\t\t\t{/* <!-- BOX MESSAGERIE FIXED BOTTOM - fin --> */}\n\t\t\t{/* <div className=\"messageBox\" style={{height:boolDisplay === false &&  \"50px\"}}>\n                <div className=\"titleMessageBox\">\n                    <ul className=\"inlineList mb-a\">\n                   <li> <a className=\"titleA\" style={{marginRight: \"70px\"}}> Messagerie</a></li>\n                   <li> <button className=\"moreButton\"></button></li>\n                   <li> <button className=\"newMessageButton\"></button></li>\n                   <li> <button className={boolDisplay=== true ? \"collapseButtonOpen\" : \"collapseButtonClose\"} onClick={handleVisible} ></button></li>\n                   \n                    </ul>\n                </div>\n\n                <div className={boolDisplay=== true ? \"contentMessageBoxOpen\" : \"contentMessageBoxClose\"}>\n                   \n                </div>\n            </div> */}\n\n\t\t</div>\n\t);\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/Chat/ChatMenu.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "ChatMenu",
    "memberof": "src/component/Chat/ChatMenu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/Chat/ChatMenu.js~ChatMenu",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/Chat/ChatMenu.js",
    "importStyle": "ChatMenu",
    "description": "Chat menu with list of conversation",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "boolChat",
        "description": "test if the chat menu is open"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setBoolChat",
        "description": "boolChat setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/component/Chat/ChatModal.js",
    "content": "import React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { set } from \"react-hook-form\";\nimport photo from \"../../webapp/temp/arthur_1.jpg\"\nimport photo2 from \"../../webapp/temp/olivier_profil_1.jpeg\"\nimport data from '@emoji-mart/data'\nimport EmojiPicker from \"../general/EmojiPicker\";\nimport GifPicker from \"../general/GifPicker\";\nimport \"@mickyballadelli/react-tenor17/dist/styles.css\"\n\n/**\n * Chat modal : used for chatting with someone\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n *  @param {boolean} isLogged - test if the user is logged\n */\n\nexport default function ChatModal({ user, setUser, isLogged }) {\n    const ref = useRef()\n    const [boolDisplay, setBoolDisplay] = useState(false);\n    const [boolEmoji, setBoolEmoji] = useState(false);\n    const [txtArea, setTxtArea] = useState([]);\n\n\n\n    function handleVisible() {\n        if (boolDisplay === false) {\n            setBoolDisplay(true);\n        }\n        else {\n            setBoolDisplay(false);\n        }\n        console.log(boolDisplay)\n\n    }\n\n    function handleVisibleEmoji() {\n        if (boolEmoji === false) {\n            setBoolEmoji(true);\n        }\n        else {\n            setBoolEmoji(false);\n        }\n        console.log(boolEmoji)\n\n    }\n\n\n\n\n    return (\n        <div className=\"ChatModal\">\n\n            <div className=\"chatBox\">\n                <header>\n                    <a href=\"\">\n                        <img src={photo} alt=\"Messagerie\" />\n                        <p>Arthur De Frayssinet</p>\n                    </a>\n                    <button className=\"plus\"></button>\n                    <button className=\"settings\"></button>\n                    <button className=\"close\" ></button>\n                </header>\n\n\n                <section>\n\n                    <time>13 Juin 2022</time>\n\n                    <div className=\"msgLeft\">\n                        <img className=\"pic\" src={photo} alt=\"Messagerie\" />\n                        <p>Lorem Ipsum is simply dummy text of the printing ??</p>\n                    </div>\n\n                    <div className=\"msgRight\">\n                        <p>Is simply dummy text of the printing !</p>\n                    </div>\n\n                    <div className=\"msgLeft\">\n                        <img className=\"pic\" src={photo} alt=\"Messagerie\" />\n                        <p>Simply dummy text of the printing ??</p>\n                    </div>\n\n                    <div className=\"msgLeft\">\n                        <p>Lorem Ipsum is simply</p>\n                    </div>\n\n                    <div className=\"msgRight\">\n                        <p>Text of the printing !</p>\n                    </div>\n\n                </section>\n\n                <footer>\n                    <textarea onChange={(e) => setTxtArea(e.target.value)} value={txtArea} />\n                    <button className=\"send\"></button>\n                    <button className=\"image\"></button>\n                    <button className=\"gif\"></button>\n                    {/* <GifPicker style={{bottom: \"300px\"}}/> */}\n                    <button className=\"emojis\" onClick={handleVisibleEmoji}></button>\n                </footer>\n                {boolEmoji === true && <EmojiPicker txtArea={txtArea} setTxtArea={setTxtArea} />}\n\n            </div>\n        </div >\n    );\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/Chat/ChatModal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "ChatModal",
    "memberof": "src/component/Chat/ChatModal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/Chat/ChatModal.js~ChatModal",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/Chat/ChatModal.js",
    "importStyle": "ChatModal",
    "description": "Chat modal : used for chatting with someone",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/Activity.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { toast } from \"react-toastify\"\nimport lockB from \"../../webapp/img/icons/content_locked_1-2.svg\"\nimport unlockB from \"../../webapp/img/icons/content_unlocked_1-2.svg\"\n\n/**\n * This Component contain your network feed\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n * @emits - api/publication/save : save user publication\n */\n\nexport default function Activity({ user, SetUser }) {\n\n\tconst [refreshKey, setRefreshKey] = useState(0);\n\tconst [publication, setPublication] = useState([]);\n\tconst [boolVis, setBollVis] = useState(false);\n\n\n\n\t//post une publication//\n\tfunction submitPost(e) {\n\n\t\te.preventDefault();\n\n\t\taxios.post(URLDayl + \"api/publication/save\",\n\t\t\t{ content: publication, userId: user.id, publicationStatus: \"PUBLIC\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tsetRefreshKey(oldKey => oldKey + 1);\n\t\t\t\t//popup alert\n\t\t\t\ttoast.success(\"Publication Postée!\", {\n\t\t\t\t\tposition: \"top-right\",\n\t\t\t\t\tautoClose: 3000,\n\t\t\t\t\thideProgressBar: false,\n\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\tpauseOnHover: true,\n\t\t\t\t\tdraggable: true,\n\t\t\t\t\tprogress: undefined,\n\t\t\t\t});\n\n\t\t\t});\n\n\t}\n\tfunction addMedia(e) {\n\t\te.preventDefault();\n\n\t}\n\n\t///////////////Change visibility////////////\n\tconst handleCheck = () => {\n\n\n\t\tif (boolVis === false)\n\t\t\tsetBollVis(true);\n\t\telse {\n\t\t\tsetBollVis(false)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"Activity\" >\n\t\t\t{/* <!-- ******************************************************\n\t\t\t\t***********************************************************\n\n\t\t\t\tBLOC CONTENU PRINCIPAL - début\n\n\t\t\t\t***********************************************************\n\t\t\t\t******************************************************* --> */}\n\n\t\t\t<div className=\"socialItems\">\n\n\t\t\t\t{/* <!-- publier - début --> */}\n\t\t\t\t<div className=\"addPost\">\n\t\t\t\t\t<form  >\n\t\t\t\t\t\t<textarea onChange={(e) => setPublication(e.target.value)} value={publication} placeholder=\"Que souhaitez-vous partager aujourd’hui ?\"></textarea>\n\t\t\t\t\t\t<img src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`} />\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"postButtonContainer2\">\n\t\t\t\t\t\t<input type=\"text\" size=\"55\" placeholder=\"Ex : expressionnisme, surréalisme …\" style={{width: \"100%\"}}/>\n                                    <div className=\"hashList toLeft\">\n                                        <a href=\"#\">#hashtag</a>\n                                        <a href=\"#\">#hashtag</a>\n                                        <a href=\"#\">#hashtag</a>\n                                        <a href=\"#\">#hashtag</a>\n                                        <a href=\"#\">#hashtag</a>\n                                        <a href=\"#\">#hashtag</a>\n                                        <a href=\"#\">#hashtag</a>\n                                        <a href=\"#\">#hashtag</a>\n                                    </div>\n\t\t\t\t\t\t\t<div className=\"toggleBox vis\" style={{ height: \"32px\" }}>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"lilToggle mt-b mb-b\">\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" onChange={(e) => handleCheck()} name=\"toggleDesc\" defaultChecked={boolVis} />\n\t\t\t\t\t\t\t\t\t<img src={lockB} style={{ width: \"20px\", height: \"20px\", top: \"6px\", left: \"45px\", position: \"absolute\", borderRadius: \"0\" }} />\n\t\t\t\t\t\t\t\t\t<img src={unlockB} style={{ width: \"20px\", height: \"20px\", top: \"6px\", left: \"7px\", position: \"absolute\", borderRadius: \"0\" }} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{boolVis === true ? <span tool-tp>Tout le monde </span>\n\t\t\t\t\t\t\t\t\t: <span>Mon réseau</span>}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/* <div style={{ width: \"170px\"}} className=\"selectPublish\">\n\t\t\t\t\t\t\t\t<select className=\"searchFilter\" >\n\t\t\t\t\t\t\t\t\t<option value=\"\" selected>Tp</option>state\n\t\t\t\t\t\t\t\t\t<option value=\"Domaine public\">Domaine public</option>\n\t\t\t\t\t\t\t\t\t<option value=\"protected\">Oeuvres protégées</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t<button className=\"publish\" onClick={submitPost} style={{ height: \"37px\" }}>Publier</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"postButtonContainer\">\n\t\t\t\t\t\t\t<button className=\"addMedia\" /* style={{ top: \"120px\", height: \"32px\" }} */ onClick={(e) => addMedia(e)}>Ajouter des photos / une vidéo</button>\n\t\t\t\t\t\t\t{/* <button className=\"addHashtag\" onClick={(e) => addMedia(e)}>Ajouter un hashtag</button> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\n\t\t\t\t\t<input type=\"button\" className=\"openModalNow deletePubli\"/*  onClick={() => handleBoolDeleteTrue(index)} */ />\n\t\t\t\t\t<input type=\"button\" className=\" openModalNow editPubli\" /* onClick={() => handleBoolEditTrue(index)} */ />\n\t\t\t\t\t<input type=\"button\" className=\" openModalNow savePubli\" /* onClick={() => handleBoolShareTrue(index)} */ />\n\t\t\t\t</div>\n\t\t\t\t{/* <!-- publier - fin --> */}\n\n\t\t\t\t{/* <!-- publication - début --> */}\n\t\t\t\t\t\t<article>\n\t\t\t\t\t\t\t<p class=\"postLikedBy\"><b>ILONA HINDENBERG</b> aime ceci</p>\n\t\t\t\t\t\t\t<div class=\"postData\">\n\t\t\t\t\t\t\t\t<h2>Olivier Lefievre</h2>\n\t\t\t\t\t\t\t\t<time datetime=\"2022-07-07T20:00:00\" class=\"authorPostTime\">posté le 07 juillet 2022 à 19:00</time>\n\t\t\t\t\t\t\t\t<p class=\"postText\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore.</p>\n\t\t\t\t\t\t\t\t<img src=\"temp/olivier_profil_1.jpeg\" alt=\"Olivier Lefievre\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"postStats\">\n\t\t\t\t\t\t\t\t<span class=\"countLikes\">12</span>\n\t\t\t\t\t\t\t\t<span class=\"countComments\">3 commentaires</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"postActions mb-b\">\n\t\t\t\t\t\t\t\t<button class=\"likeIt\">J'aime</button>\n\t\t\t\t\t\t\t\t<button class=\"commentIt\">Commenter</button>\n\t\t\t\t\t\t\t\t<button class=\"shareIt\">Partager</button>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t{/* <!-- COMMENTER / COMMENTAIRES SUR CETTE PUBLICATION - début --> */}\n\t\t\t\t\t\t\t<div class=\"postComments\">\n\n\t\t\t\t\t\t\t\t<div class=\"addPostComment\">\n\t\t\t\t\t\t\t\t\t<textarea name=\"message\" placeholder=\"ajouter un commentaire sur cette publication\"></textarea>\n\t\t\t\t\t\t\t\t\t<button class=\"publish\">Publier</button>\n\t\t\t\t\t\t\t\t\t<button class=\"addMedia\">Ajouter une photo</button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"comment\">\n\t\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t\t<img src=\"temp/soc_6.jpg\" alt=\"Ilona Hindenberg\"/>\n\t\t\t\t\t\t\t\t\t\t<h3>Ilona Hindenberg</h3>\n\t\t\t\t\t\t\t\t\t\t<time datetime=\"2022-07-07T20:00:00\" class=\"commentPostTime\">07 juillet 2022 - 20:00</time>\n\t\t\t\t\t\t\t\t\t\t<p>Oh my gooood !!! this is so absolutely gorgeous and crazy at the same time, i love it !!! can't wait for more art from this artist XOXO.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"childComment\">\n\t\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t\t<img src=\"temp/soc_3.jpg\" alt=\"Latosha Johnson\"/>\n\t\t\t\t\t\t\t\t\t\t<h3>Latosha Johnson</h3>\n\t\t\t\t\t\t\t\t\t\t<time datetime=\"2022-07-07T20:07:00\" class=\"commentPostTime\">07 juillet 2022 - 20:07</time>\n\t\t\t\t\t\t\t\t\t\t<p>Yeaaaaah ! girl, i must admit that you're right. Hope i can see it in real one time in Paris ! see ya !</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div class=\"comment\">\n\t\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t\t<img src=\"temp/soc_1.jpg\" alt=\"Arthuro Bracchio\"/>\n\t\t\t\t\t\t\t\t\t\t<h3>Arthuro Bracchio</h3>\n\t\t\t\t\t\t\t\t\t\t<time datetime=\"2022-07-07T21:45:00\" class=\"commentPostTime\">07 juillet 2022 - 21:45</time>\n\t\t\t\t\t\t\t\t\t\t<p>mmmm ... not my cup of tea. But i have to admit that this artist will certainly have a lot of success in the future. Best wishes.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/* <!-- COMMENTER / COMMENTAIRES SUR CETTE PUBLICATION - fin --> */}\n\n\n\t\t\t\t\t\t</article>\n\t\t\t\t\t\t{/* <!-- publication - fin --> */}\n\t\t\t\t{/* <!-- publication avec media - début --> */}\n\t\t\t\t<article>\n\t\t\t\t\t<p className=\"postLikedBy\"><b>Olivier LEFIEVRE</b> aime ceci</p>\n\t\t\t\t\t<div className=\"postData\">\n\t\t\t\t\t\t<h2>Olivier Lefièvre</h2>\n\t\t\t\t\t\t<p className=\"postTime\">il y a 6h</p>\n\t\t\t\t\t\t<p className=\"postText\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore.</p>\n\t\t\t\t\t\t<img src=\"temp/olivier_profil_1.jpeg\" alt=\"Olivier Lefièvre\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"postMedia\">\n\t\t\t\t\t\t<img className=\"image\" src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"postStats\">\n\t\t\t\t\t\t<span className=\"countLikes\">12</span>\n\t\t\t\t\t\t<span className=\"countComments\">3 commentaires</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"postActions\">\n\t\t\t\t\t\t<button className=\"likeIt\">J'aime</button>\n\t\t\t\t\t\t<button className=\"commentIt\">Commenter</button>\n\t\t\t\t\t\t<button className=\"shareIt\">Partager</button>\n\t\t\t\t\t</div>\n\t\t\t\t</article>\n\t\t\t\t{/* <!-- publication avec media - fin --> */}\n\n\n\t\t\t\t{/* <!-- publication partagée - début --> */}\n\t\t\t\t<article>\n\t\t\t\t\t<p className=\"postLikedBy\"><b>Olivier LEFIEVRE</b> aime ceci</p>\n\t\t\t\t\t<div className=\"postData\">\n\t\t\t\t\t\t<h2>Olivier Lefièvre</h2>\n\t\t\t\t\t\t<p className=\"postTime\">il y a 6h</p>\n\t\t\t\t\t\t<p className=\"postText\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore.</p>\n\t\t\t\t\t\t<img src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<article className=\"mt-a\">\n\t\t\t\t\t\t<div className=\"postData\">\n\t\t\t\t\t\t\t<h2>Olivier Lefièvre</h2>\n\t\t\t\t\t\t\t<p className=\"postTime\">il y a 6h</p>\n\t\t\t\t\t\t\t<p className=\"postText\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore.</p>\n\t\t\t\t\t\t\t<img src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"postMedia\">\n\t\t\t\t\t\t\t<img className=\"image\" src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</article>\n\t\t\t\t\t<div className=\"postStats\">\n\t\t\t\t\t\t<span className=\"countLikes\">12</span>\n\t\t\t\t\t\t<span className=\"countComments\">3 commentaires</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"postActions\">\n\t\t\t\t\t\t<button className=\"likeIt\">J'aime</button>\n\t\t\t\t\t\t<button className=\"commentIt\">Commenter</button>\n\t\t\t\t\t\t<button className=\"shareIt\">Partager</button>\n\t\t\t\t\t</div>\n\t\t\t\t</article>\n\t\t\t\t{/* <!-- publication partagée - fin --> */}\n\n\t\t\t</div>\n\n\n\t\t\t<div className=\"cont-l-w center-tex\">\n\t\t\t\t<a className=\"viewMore\" >Voir plus</a>\n\t\t\t</div>\n\n\t\t\t{/* <!-- ******************************************************\n\t\t\t\t***********************************************************\n\n\t\t\t\tBLOC CONTENU PRINCIPAL - fin\n\n\t\t\t\t***********************************************************\n\t\t\t\t******************************************************* --> */}\n\n\t\t</div>\n\t)\n\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/CompteAmateurPage/Activity.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "Activity",
    "memberof": "src/component/CompteAmateurPage/Activity.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/Activity.js~Activity",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/Activity.js",
    "importStyle": "Activity",
    "description": "This Component contain your network feed",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "api/publication/save : save user publication"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/FavArtists.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { Link } from \"react-router-dom\";\n\n\n/**\n * This component contain your list of favorite artists\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n * @emits - artist/{id} : get artist informations\n * @emits - artistLiked/deleteFavoriteArtist/ : unfollow artist\n * \n */\n\nexport default function FavArtists({ user, setUser }) {\n\n\tconst [listArtist, setListArtist] = useState([]);\n\tconst [refreshKey, setRefreshKey] = useState(0);\n\n\n\n\n\n\n\t//get Painting info//\n\tuseEffect(() => {\n\n\t\tsetListArtist([])\n\n\t\tfor (let i = 0; i < user.artistLiked.length; i++)\n\t\t\taxios.get(URLDayl + `artist/${user.artistLiked[i]}`).then((response) => {\n\n\t\t\t\tlet boolArray = response.data;\n\t\t\t\tboolArray.bool = false;\n\t\t\t\tsetListArtist(listArtist => [...listArtist, boolArray]);\n\t\t\t\tconsole.log(response.data)\n\n\t\t\t});\n\n\n\n\n\t}, [refreshKey]);\n\n\t//Delete user like//\n\tconst deleteArtist = (artistId) => {\n\n\n\t\taxios.get(URLDayl + `artistLiked/deleteFavoriteArtist/${user.id}/${artistId}`,\n\t\t\t{ headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\n\t\t)\n\t\t\t.then((response) => {\n\n\n\t\t\t\t//update user\n\t\t\t\taxios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n\t\t\t\t)\n\t\t\t\t\t.then((response2) => {\n\n\t\t\t\t\t\tsetUser(response2.data)\n\t\t\t\t\t\tsetRefreshKey(oldKey => oldKey + 1);\n\t\t\t\t\t});\n\n\t\t\t});\n\n\n\n\n\t}\n\n\t//afficher modale suppression//\n\tconst handleBoolListTrue = (index) => {\n\n\t\tconst tempBool = [...listArtist]\n\n\t\ttempBool[index].bool = true;\n\t\tsetListArtist(tempBool);\n\t}\n\n\t//cacher modale suppression//\n\tconst handleBoolListFalse = (index) => {\n\n\t\tconst tempBool = [...listArtist]\n\n\t\ttempBool[index].bool = false;\n\t\tsetListArtist(tempBool);\n\n\t}\n\n\treturn (\n\t\t<div className=\"favArtists\">\n\t\t\t<div className=\"accountArtists \">\n\t\t\t\t{listArtist.length > 0 &&\n\t\t\t\t\tlistArtist.map((artist, index) => (\n\n\t\t\t\t\t\t<div className=\"item\" style={{ backgroundImage: `url(${require('../../webapp/temp/remedios-varo_1.jpg')}` }}>\n\t\t\t\t\t\t\t<div className=\"name\">{artist.artist_name_tot}</div>\n\t\t\t\t\t\t\t<div className=\"items-count\">{/* list.countItems */} oeuvres</div>\n\t\t\t\t\t\t\t<Link className=\"discover\" to={`../../view/ArtistDetailPage.js/${artist.artistIdtfIntern}`} state={artist.artistIdtfIntern} href=\"artiste.html\"></Link>\n\n\t\t\t\t\t\t\t<input type=\"button\" className=\"unfollow\" onClick={() => handleBoolListTrue(index)} value=\"\" />\n\n\t\t\t\t\t\t\t{artist.bool && <div className=\"deleteConfirm\">\n\t\t\t\t\t\t\t\t<span className=\"deleteText\">Supprimer?</span>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"yes closeTwoParentsNow\" onClick={() => deleteArtist(artist.id)} value=\"\">Oui</button>\n\t\t\t\t\t\t\t\t<button type=\"button\" className=\"no closeParentNow\" onClick={() => handleBoolListFalse(index)} value=\"\">Non</button>\n\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t</div>\n\t\t</div >\n\t)\n\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/CompteAmateurPage/FavArtists.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "FavArtists",
    "memberof": "src/component/CompteAmateurPage/FavArtists.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/FavArtists.js~FavArtists",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/FavArtists.js",
    "importStyle": "FavArtists",
    "description": "This component contain your list of favorite artists",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "artist/{id} : get artist informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "artistLiked/deleteFavoriteArtist/ : unfollow artist"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/Likes.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { Link } from \"react-router-dom\"\nimport ListModal from \"../general/ListModal\";\n\n/**\n * This component contain your list of likes\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n * @emits - paintingEntity/{id} : get paint informations\n * @emits - users/updateFavoritePainting : delete paint\n */\n\nexport default function Likes({ user, setUser }) {\n\n    const [painting, setPainting] = useState([]);\n    const [refreshKey, setRefreshKey] = useState(0);\n    const [isLogged] = useState(true);\n\n\n\n    //get Painting info//\n    useEffect(() => {\n\n        setPainting([])\n\n        for (let i = 0; i < user.paintingLiked.length; i++)\n            axios.get(URLDayl + `paintingEntity/${user.paintingLiked[i]}`).then((response) => {\n\n                let boolArray = response.data;\n                boolArray.bool = false;\n                setPainting(painting => [...painting, boolArray]);\n\n            });\n\n\n\n\n    }, [refreshKey]);\n\n\n\n    console.log(painting)\n\n    //Delete user like//\n    const deleteLike = (paintId) => {\n\n\n        axios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: paintId, operation: \"remove\" },\n            { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\n        )\n            .then((response) => {\n\n\n                console.log(\"remove\")\n                //update user\n                axios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n                )\n                    .then((response2) => {\n\n                        setUser(response2.data)\n                        setRefreshKey(oldKey => oldKey + 1);\n                    });\n\n            });\n\n\n\n\n    }\n\n\n    //afficher modale suppression//\n    const handleBoolListTrue = (index) => {\n\n        const tempBool = [...painting]\n\n        tempBool[index].bool = true;\n        setPainting(tempBool);\n    }\n\n    //cacher modale suppression//\n    const handleBoolListFalse = (index) => {\n\n        const tempBool = [...painting]\n\n        tempBool[index].bool = false;\n        setPainting(tempBool);\n\n    }\n\n    return (\n        <div className=\"Likes\">\n\n\n\n            <div className=\"accountArtists\">\n\n                {painting.length > 0 &&\n                    painting.map((paint, index) => {\n                        return (\n                            <div className=\"sliderOne owl-loaded \">\n                                <div className=\"item\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${paint.artist_idtf_intern}/${paint.generatedId})` }}>\n\n                                    <div style={{ top: \"193px\", right: \"150px\" }}><ListModal user={user} isLogged={isLogged} listPaint={paint} /></div>\n                                    <div className=\"bt-wrapper\">\n\n                                        {/* <div className=\"img-wrapper\"> */}\n\n                                        <div className=\"titre\">\n                                            <h3 style={{ fontStyle: \"oblique\", fontWeight: \"600\", fontSize: \"14px\", color: \"white\", marginBottom: \"15px\"\n                                         }}>{paint.artist_name_tot}</h3>\n                                            {paint.aw_title_Origin}\n                                            <div className=\"date\">{paint.aw_year}</div>\n                                        </div>\n                                        <div className=\"container-action\">\n                                            <Link className=\"bt-action voir\" to={`../../view/OpusPage.js/${paint.id}`} state={paint.id}>\n\n                                                voir\n\n                                            </Link>\n                                            <Link className=\"bt-action match\" to={`../../view/MatchingPage.js/${paint.id}`} state={paint.id}>\n                                                match\n                                            </Link>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"name\"></div>\n\n                                    <input type=\"button\" className=\"unfollow\" onClick={() => handleBoolListTrue(index)} />\n\n                                    {paint.bool === true &&\n                                        <div className=\"deleteConfirm\">\n                                            <span className=\"deleteText\">Supprimer?</span>\n                                            <button type=\"button\" className=\"yes closeTwoParentsNow\" onClick={() => deleteLike(paint.id)} value=\"\">Oui</button>\n                                            <button type=\"button\" className=\"no closeParentNow\" onClick={() => handleBoolListFalse(index)} value=\"\">Non</button>\n                                        </div>}\n\n\n                                </div>\n\n                            </div>\n                        )\n                    })}\n\n            </div>\n\n        </div>\n\n    );\n\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/CompteAmateurPage/Likes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "Likes",
    "memberof": "src/component/CompteAmateurPage/Likes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/Likes.js~Likes",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/Likes.js",
    "importStyle": "Likes",
    "description": "This component contain your list of likes",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/{id} : get paint informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "users/updateFavoritePainting : delete paint"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/Matching.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\n\n\n\n/**\n * This component contain your list of saved matching\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n */\n\nexport default function Matching({ user }) {\n\n    return (\n        <div className=\"Matching\">\n\n\n\n        </div>\n    )\n\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/CompteAmateurPage/Matching.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "Matching",
    "memberof": "src/component/CompteAmateurPage/Matching.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/Matching.js~Matching",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/Matching.js",
    "importStyle": "Matching",
    "description": "This component contain your list of saved matching",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/ModalNetwork.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { Link } from \"react-router-dom\"\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\nimport pers from \"../../webapp/img/icons/ico_relations_1.svg\"\nimport send from \"../../webapp/img/icons/ico_chatbox_send.svg\";\nimport del from \"../../webapp/img/icons/ico_user_delete_2.svg\"\nimport soc1 from \"../../webapp/temp/soc_1.jpg\"\nimport soc2 from \"../../webapp/temp/soc_2.jpg\"\nimport soc3 from \"../../webapp/temp/soc_3.jpg\"\nimport soc4 from \"../../webapp/temp/soc_4.jpg\"\nimport soc5 from \"../../webapp/temp/soc_5.jpg\"\nimport soc6 from \"../../webapp/temp/soc_6.jpg\"\nimport soc7 from \"../../webapp/temp/soc_7.jpg\"\n\n\n\n/**\n * This component is a modal used to manage your network (add/delete friends,...)\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n *  @param {boolean} boolNetWork - test if the network modal is open\n *  @param {boolean} setBoolNetWork - boolNetWork setter\n */\n\n\nexport default function ModalNetwork({ user, setUser, boolNetWork, setBoolNetWork }) {\n\n    //  init Variables global\n    const [isActive, setIsActive] = useState(1);\n\n    //Active class Tab\n    const toggleClass = (val) => {\n        setIsActive(val);\n\n    };\n\n\n\n    return (\n\n        <div className=\"ModalNetwork\">\n\n            {/* <!-- MODAL GERER MON RESEAU - DÉBUT --> */}\n            <div className=\"smart-modal-overlay\" style={{ display: \"block\" }}></div>\n            <div className=\"smart-modal-content-l scrollAuto\" style={{ transform: \"translate(-50%,-50%)\", display: \"inline-flex\", flexWrap: \"wrap\", alignContent: \"flex-start\" }}>\n                <h3>Gérer mon réseau</h3>\n                <a className=\"smart-modal-close\" onClick={(e) => setBoolNetWork(!boolNetWork)}><img className=\"img-left\" src={close} alt=\"Trier\" /></a>\n                <div className=\"showSubs\">\n                    <Tabs defaultIndex={isActive - 1}>\n                        <TabList>\n                            <nav className=\"accountTabs\">\n                                <ul>\n                                    <Tab className=\"react-tabs__tab\"><a className={isActive === 1 ? 'active' : null} onClick={() => toggleClass(1)} >Demandes d'ajout<span className=\"pillR\">8</span></a></Tab>\n                                    <Tab className=\"react-tabs__tab\"><a className={isActive === 2 ? 'active' : null} onClick={() => toggleClass(2)}>Mon réseau</a></Tab>\n                                    <Tab className=\"react-tabs__tab\"><a className={isActive === 3 ? 'active' : null} onClick={() => toggleClass(3)}>Mes abonnés</a></Tab>\n                                    <Tab className=\"react-tabs__tab\"> <a className={isActive === 4 ? 'active' : null} onClick={() => toggleClass(4)}>Mes abonnements</a></Tab>\n                                </ul>\n                            </nav>\n                        </TabList>\n                        <div className=\"doubleSearch\" data-tooltip=\"Recherche de personnes\">\n                            <form action=\"\">\n                                <input type=\"text\" style={{ backgroundImage: `url(${pers})`, backgroundSize: \"25px 25px\" }} size=\"35\" placeholder=\"\" required />\n                                <input type=\"button\" value=\"\" />\n                            </form>\n                        </div>\n                        <TabPanel>\n                            <h4 className=\"mb-b\">Demandes d’ajout à votre réseau (7)</h4>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\n                            <div className=\"subDetails\">\n                                <div className=\"userFacts\">\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc1})` }}></a>\n                                    <a href=\"\" className=\"userName\">Arthuro Bracchio</a>\n                                    <p className=\"userPlace\">Florence, Italie</p>\n                                    <p className=\"userCorel\">17 membres en commun</p>\n                                </div>\n                                <div className=\"userSubBtn\">\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\n                                </div>\n                            </div>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\n\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\n                            <div className=\"subDetails\">\n                                <div className=\"userFacts\">\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc2})` }}></a>\n                                    <a href=\"\" className=\"userName\">Istria Desmoth</a>\n                                    <p className=\"userPlace\">Edimburgh, Ecosse</p>\n                                    <p className=\"userCorel\">31 membres en commun</p>\n                                </div>\n                                <div className=\"userSubBtn\">\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\n                                </div>\n                            </div>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\n\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\n                            <div className=\"subDetails\">\n                                <div className=\"userFacts\">\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc3})` }}></a>\n                                    <a href=\"\" className=\"userName\">Latosha Johnson</a>\n                                    <p className=\"userPlace\">Chicago, U.S.A</p>\n                                    <p className=\"userCorel\">45 membres en commun</p>\n                                </div>\n                                <div className=\"userSubBtn\">\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\n                                </div>\n                            </div>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\n\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\n                            <div className=\"subDetails\">\n                                <div className=\"userFacts\">\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc4})` }}></a>\n                                    <a href=\"\" className=\"userName\">Conchita Martinez</a>\n                                    <p className=\"userPlace\">Madrid, Espagne</p>\n                                    <p className=\"userCorel\">52 membres en commun</p>\n                                </div>\n                                <div className=\"userSubBtn\">\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\n                                </div>\n                            </div>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\n\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\n                            <div className=\"subDetails\">\n                                <div className=\"userFacts\">\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc5})` }}></a>\n                                    <a href=\"\" className=\"userName\">Saginaw Rashpania</a>\n                                    <p className=\"userPlace\">New-Dehli, Inde</p>\n                                    <p className=\"userCorel\">12 membres en commun</p>\n                                </div>\n                                <div className=\"userSubBtn\">\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\n                                </div>\n                            </div>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\n\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\n                            <div className=\"subDetails\">\n                                <div className=\"userFacts\">\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc6})` }}></a>\n                                    <a href=\"\" className=\"userName\">Ilona Hindenberg</a>\n                                    <p className=\"userPlace\">Hannover, Allemagne</p>\n                                    <p className=\"userCorel\">36 membres en commun</p>\n                                </div>\n                                <div className=\"userSubBtn\">\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\n                                </div>\n                            </div>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\n\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\n                            <div className=\"subDetails\">\n                                <div className=\"userFacts\">\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc7})` }}></a>\n                                    <a href=\"\" className=\"userName\">Antonin Despentes</a>\n                                    <p className=\"userPlace\">Lyon, France</p>\n                                    <p className=\"userCorel\">36 membres en commun</p>\n                                </div>\n                                <div className=\"userSubBtn\">\n                                    <input type=\"button\" className=\"reject\" value=\"Ignorer\" />\n                                    <input type=\"button\" className=\"accept\" value=\"Accepter\" />\n                                </div>\n                            </div>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\n                        </TabPanel>\n                        <TabPanel>\n                            <h4 className=\"mb-b\">Votre Réseau (7)</h4>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\n                            <div className=\"subDetails\">\n                                <div className=\"userFacts\">\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc1})` }}></a>\n                                    <a href=\"\" className=\"userName\">Arthuro Bracchio</a>\n                                    <p className=\"userPlace\">Florence, Italie</p>\n                                    <p className=\"userCorel\">17 membres en commun</p>\n                                </div>\n                                <div className=\"userSubBtn\">\n                                    <a className=\"renameIt\" style={{ right: \"50px\", width: \"42px\", height: \"42px\",padding: \"8px\" }}>\n                                        <img src={del} style={{ width: \"20px\", height: \"20px\" }} />\n                                    </a>\n                                    <a type=\"button\" className=\"topAccountBg\" value=\"Accepter\" style={{ border: \"solid 1px grey\", right: \"0\" }}>\n                                        <img src={send} style={{ width: \"20px\", height: \"20px\" }} />\n                                    </a>\n                                </div>\n                            </div>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\n                        </TabPanel>\n                        <TabPanel>\n                            <h4 className=\"mb-b\">Vos Abonnés (7)</h4>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\n                            <div className=\"subDetails\">\n                                <div className=\"userFacts\">\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc1})` }}></a>\n                                    <a href=\"\" className=\"userName\">Arthuro Bracchio</a>\n                                    <p className=\"userPlace\">Florence, Italie</p>\n                                    <p className=\"userCorel\">17 membres en commun</p>\n                                </div>\n                                <div className=\"userSubBtn\">\n                                <a className=\"renameIt\" style={{ right: \"50px\", width: \"42px\", height: \"42px\",padding: \"8px\" }}>\n                                        <img src={del} style={{ width: \"20px\", height: \"20px\" }} />\n                                    </a>\n                                    <a type=\"button\" className=\"topAccountBg\" value=\"Accepter\" style={{ border: \"solid 1px grey\", right: \"0\" }}>\n                                        <img src={send} style={{ width: \"20px\", height: \"20px\" }} />\n                                    </a>\n                                </div>\n                            </div>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\n                        </TabPanel>\n                        <TabPanel>\n                            <h4 className=\"mb-b\">Vos Abonnements (7)</h4>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - début --> */}\n                            <div className=\"subDetails\">\n                                <div className=\"userFacts\">\n                                    <a href=\"\" className=\"userAvatar\" style={{ backgroundImage: `url(${soc1})` }}></a>\n                                    <a href=\"\" className=\"userName\">Arthuro Bracchio</a>\n                                    <p className=\"userPlace\">Florence, Italie</p>\n                                    <p className=\"userCorel\">17 membres en commun</p>\n                                </div>\n                                <div className=\"userSubBtn\">\n                                <a className=\"renameIt\" style={{ right: \"50px\", width: \"42px\", height: \"42px\",padding: \"8px\" }}>\n                                        <img src={del} style={{ width: \"20px\", height: \"20px\" }} />\n                                    </a>\n                                   \n                                </div>\n                            </div>\n                            {/* <!-- DÉTAILS CONTACT DU RESEAU - fin --> */}\n                        </TabPanel>\n                    </Tabs>\n                </div>\n            </div>\n\n        </div>\n    );\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/CompteAmateurPage/ModalNetwork.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "ModalNetwork",
    "memberof": "src/component/CompteAmateurPage/ModalNetwork.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/ModalNetwork.js~ModalNetwork",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/ModalNetwork.js",
    "importStyle": "ModalNetwork",
    "description": "This component is a modal used to manage your network (add/delete friends,...)",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "boolNetWork",
        "description": "test if the network modal is open"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setBoolNetWork",
        "description": "boolNetWork setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/component/CompteAmateurPage/TabAmateur.js",
    "content": "import * as React from 'react';\nimport { useEffect, useState, } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport FavArtists from \"./FavArtists\";\nimport Matching from \"./Matching\";\nimport Likes from \"./Likes\";\nimport Lists from \"./Lists\";\nimport Comments from \"./Comments\";\nimport Activity from \"./Activity\";\nimport hash from \"../../webapp/img/icons/ico_hashtag_1.svg\"\nimport pers from \"../../webapp/img/icons/ico_relations_1.svg\"\n// import Tab from \"@mui/material/Tab\";\n// import Tabs from \"@mui/material/Tabs\";\n// import TabList from \"@mui/material/TabList\";\n// import TabPanel from \"@mui/material/TabPanel\";\n// import TabContext from \"@mui/material/TabContext\";\n\n\n/**\n * This component order the previous components in tabs\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n *  @param {number} isActive - tab selection\n *  @param {number} setIsActive - isActive setter\n */\n\n\nexport default function TabAmateurs({ user, setUser, isActive, setIsActive }) {\n\n    //init Variables global\n    // const [isActive, setActive] = useState(1);\n\n\n    // // Init onglet ouvert\n    // useEffect(() => {\n    //     toggleClass(isActive);\n    // }, []);\n\n    //Active class Tab\n    const toggleClass = (val) => {\n        setIsActive(val);\n\n\n    };\n\n    return (\n        <div className=\"TabAmateurs\">\n\n\n\n\n\n\n            <div className=\"accountPageContent\">\n                {/* <!-- Double search - début --> */}\n\n                <div className=\"doubleSearch formCompact\" style={{ height: \"80px\" }}>\n                    {isActive === 1 &&\n\n                        <div className=\"generalSearch\" data-tooltip=\"Recherche de personnes\">\n                            <form action=\"\">\n                                <input type=\"text\" style={{ backgroundImage: `url(${pers})`, backgroundSize: \"25px 25px\" }} size=\"35\" placeholder=\"\" required />\n                                <input type=\"button\" value=\"\" />\n                            </form>\n                        </div>\n                    }\n                    {isActive === 1 &&\n                        <div className=\"hashtagSearch\" data-tooltip=\"Recherche par Hashtag\">\n                            <form action=\"\">\n                                <input type=\"text\" style={{ backgroundImage: `url(${hash})`, backgroundSize: \"20px 20px\" }} size=\"35\" placeholder=\"\" required />\n                                <input type=\"button\" value=\"\" />\n                            </form>\n                        </div>}\n\n\n                </div>\n\n                {/* <!-- Double search - fin --> */}\n                <Tabs defaultIndex={isActive - 1}>\n                    <TabList>\n                        <nav className=\"accountTabs\">\n                            <ul>\n\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 1 ? 'active' : null} onClick={() => toggleClass(1)} >Mon Fil{/*<!-- Pillule rouge avec écriture blanche >> -->*/} <span className=\"pillR\">8</span> </a></Tab>\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 2 ? 'active' : null} onClick={() => toggleClass(2)} >Actus Dayl{/*<!-- Pillule rouge avec écriture blanche >> -->*/} <span className=\"pillR\">8</span></a></Tab>\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 3 ? 'active' : null} onClick={() => toggleClass(3)} >Mes Artistes{/*<!-- Pillule rouge avec écriture blanche >> -->*/} {user.artistLiked && user.artistLiked.length !== 0 && <span className=\"pillR\">{user.artistLiked && user.artistLiked.length}</span>} </a></Tab>\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 4 ? 'active' : null} onClick={() => toggleClass(4)} > Matching{/*<!-- Pillule rouge avec écriture blanche >> -->*/} {user.matchingLiked && user.matchingLiked.length !== 0 && <span className=\"pillR\">{user.matchingLiked && user.matchingLiked.length}</span>} </a></Tab>\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 5 ? 'active' : null} onClick={() => toggleClass(5)} >Likes{/*<!-- Pillule rouge avec écriture blanche >> -->*/} {user.paintingLiked && user.paintingLiked.length !== 0 && <span className=\"pillR\">{user.paintingLiked && user.paintingLiked.length}</span>} </a></Tab>\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 6 ? 'active' : null} onClick={() => toggleClass(6)} >Listes{/*<!-- Pillule rouge avec écriture blanche >> -->*/} {user.listIds && user.listIds.length !== 0 && <span className=\"pillR\">{user.listIds && user.listIds.length}</span>} </a></Tab>\n                                <Tab className=\"react-tabs__tab\"><a className={isActive === 7 ? 'active' : null} onClick={() => toggleClass(7)} >Commentaires{/*<!-- Pillule rouge avec écriture blanche >> -->*/} <span className=\"pillR\">8</span> </a></Tab>\n                                {/* <Tab className=\"react-tabs__tab\"><a className={isActive === 7 ? 'active' : null} onClick={() => toggleClass(7)} >Expositions</a></Tab> */}\n                            </ul>\n                        </nav>\n                    </TabList>\n\n                    <TabPanel>\n                        <Activity user={user} />\n                    </TabPanel>\n                    <TabPanel>\n\n                    </TabPanel>\n                    <TabPanel>\n                        <FavArtists user={user} />\n                    </TabPanel>\n                    <TabPanel>\n                        <Matching user={user} />\n                    </TabPanel>\n                    <TabPanel>\n                        <Likes user={user} setUser={setUser} />\n                    </TabPanel>\n                    <TabPanel>\n                        <Lists user={user} />\n                    </TabPanel>\n                    <TabPanel>\n                        <Comments user={user} />\n                    </TabPanel>\n                    {/* <TabPanel>\n                       <Expositions user = {user}/>\n                    </TabPanel> */}\n                </Tabs>\n\n\n\n            </div>\n\n\n\n        </div>\n    )\n\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/CompteAmateurPage/TabAmateur.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "TabAmateurs",
    "memberof": "src/component/CompteAmateurPage/TabAmateur.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/CompteAmateurPage/TabAmateur.js~TabAmateurs",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/CompteAmateurPage/TabAmateur.js",
    "importStyle": "TabAmateurs",
    "description": "This component order the previous components in tabs",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "isActive",
        "description": "tab selection"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsActive",
        "description": "isActive setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "src/component/HomePage/RandomInfo.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport lecar from \"../../webapp/temp/lecar_1.jpg\"\n\n\n/**\n * This component display random quick facts about famous color, painting, artist, style,...\n\n */\n\nexport default function RandomInfo() {\n\n\n\n\n\n    return (\n        <div className=\"RandomInfo\" >\n\n            {/* <!-- MYTHICOLORS - début\n\t\t\t******************************************************* --> */}\n            <section className=\"center-col mt-d\" >\n\n                <div className=\"RandomQuickFactBox cont-l-w\">\n\n                    <div>\n                        <h2>Mythi'Colors</h2>\n                        <h3 style={{color:\"#6050DC\"}}>Bleu Majorelle</h3>\n                    </div>\n\n                    <div className=\"col\">\n                        <h4 style={{borderColor:\"#6050DC\"}}>Le bleu Majorelle est un bleu clair, intense et frais.</h4>\n                        <p>En 1924, l'artiste français Jacques Majorelle (1886 - 1962) construisit sa plus grande œuvre d'art, le jardin Majorelle à Marrakech, au Maroc, et peignit les murs du jardin, les fontaines et la villa de cette nuance de bleu très intense, pour laquelle il déposa le nom \"bleu Majorelle\".<br /><br />Il avait remarqué cette couleur sur des carreaux marocains, des burnous berbères et autour des fenêtres des bâtiments tels que les kasbahs et les maisons en pisé indigènes.</p>\n                    </div>\n\n                    <div className=\"col mythiColor\" style={{backgroundColor:\"#6050DC\"}}>\n                        <p>Hex triplet : #6050DC<br />sRGB : (96, 80, 220)<br />HSV : (247°, 64%, 86%)</p>\n                    </div>\n\n                </div>\n\n\n            </section>\n            {/* <!-- MYTHICOLORS - fin --> */}\n\n            {/* <!-- ART'I'FACTS - début\n******************************************************* --> */}\n            <section className=\"center-col mt-c mb-d\">\n\n                <div className=\"RandomQuickFactBox cont-l-w mb-d\">\n\n                    <div>\n                        <h2>Art'I'Facts</h2>\n                        <h3>le Caravage</h3>\n                    </div>\n\n                    <div className=\"col artistPortrait\" style={{ background: `url(${lecar})` }}>\n                        <p>Le Caravage, craie sur papier par Ottavio Leoni, vers 1621, Florence, bibliothèque Marucelliana</p>\n                    </div>\n\n                    <div className=\"col\">\n                        <h4>Célèbre peintre... et criminel notoire</h4>\n                        <p>Michelangelo Merisi da Caravaggio, francisé Caravage ou le Caravage, est un peintre italien, né le 29 septembre 1571 à Milan et mort le 18 juillet 1610 à Porto Ercole.<br /><br />Son œuvre puissante et novatrice révolutionne la peinture du xviie siècle par son caractère naturaliste, son réalisme parfois brutal et l'emploi appuyé de la technique du clair-obscur allant jusqu'au ténébrisme. Il connaît la célébrité de son vivant et influence nombre de grands peintres après lui, comme en témoigne l'apparition du caravagisme.<br /><br />Après une longue période d'oubli critique, il faut attendre le début du xxe siècle pour que le génie de Caravage soit pleinement reconnu, indépendamment de sa réputation sulfureuse.</p>\n                    </div>\n\n                </div>\n\n            </section>\n            {/* <!-- ART'I'FACTS - fin --> */}\n\n\n\n\n        </div>\n    );\n}\n\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/HomePage/RandomInfo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "RandomInfo",
    "memberof": "src/component/HomePage/RandomInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/HomePage/RandomInfo.js~RandomInfo",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/HomePage/RandomInfo.js",
    "importStyle": "RandomInfo",
    "description": "This component display random quick facts about famous color, painting, artist, style,...",
    "lineNumber": 16,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/component/HomePage/SearchBar.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"\nimport { URLDayl } from \"../../services/constantes\"\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport truncate from \"truncate\";\nimport { useForm } from \"react-hook-form\";\n\n/**\n * This component display 30 random paintings and allow you to make specific research with different filters\n * @param {object} user - user object from api\n * @emits - paintingEntity/randomPaintings30 : get 30 random paintings\n * @emits - paintingFront/listStyles(listOrigins) (listGenres) : get list of filter\n * @emits - paintingSearch/findPaintingBySearchDto : get search result\n\n */\n\nexport default function SearchBar({ user }) {\n  //Declaration des variables globales\n\n\n  const [searchPainting, setSearchPainting] = useState([]);\n  const [search, setSearch] = useState([]);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [coefWidth, setCoefWidth] = useState();\n  const [listStyles, setListStyles] = useState([]);\n  const [listOrigins, setListOrigins] = useState([]);\n  const [listGenres, setListGenres] = useState([]);\n  const { register, handleSubmit, formState: { errors }, reset } = useForm();\n  // //parametres carousel//\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 9\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 9\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 5\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 2\n    }\n  };\n\n\n\n\n  const responsive2 = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 1,\n      paritialVisibilityGutter: 0\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 1,\n      paritialVisibilityGutter: 0\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n      paritialVisibilityGutter: 0\n    }\n  };\n\n  // get 30 random Paint //\n\n  useEffect(() => {\n    axios\n      .get(URLDayl + \"paintingEntity/randomPaintings30\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\n      .then((response) => {\n        setSearchPainting(response.data);\n        getItemWidth();\n      });\n  }, []);\n\n\n  // get filter //\n\n  useEffect(() => {\n    axios\n      .get(URLDayl + \"paintingFront/listStyles\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\n      .then((response) => {\n        setListStyles(response.data);\n      });\n    axios\n      .get(URLDayl + \"paintingFront/listOrigins\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\n      .then((response) => {\n        setListOrigins(response.data);\n      });\n    axios\n      .get(URLDayl + \"paintingFront/listGenres\", {}, { headers: { \"Content-Type\": \"application/json\", \"Access-Control-Allow-Origin\": \"*\" } })\n      .then((response) => {\n        setListGenres(response.data);\n      });\n  }, []);\n\n\n  // send search //\n\n  const sendSearch =  async (data) =>  {\n  \nconsole.log(data)\n    axios.post(URLDayl + \"paintingSearch/findPaintingBySearchDto\", {\n      license: data.license, style: data.style, genre: data.genre, nationality: data.nationality,\n      freeSearch: data.freeSearch, year: data.year, decade: data.decade\n    },\n      { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": \"0\" } }\n    )\n      .then((response) => {\n\n        setSearchPainting(response.data);\n\n      });\n\n  }\n\n  //get la largeur d'un item carrousel\n  function getItemWidth() {\n    let el = document.querySelector('.react-multi-carousel-item.itemTwo')\n    //on convertis la valeur en int\n\n\n    if (el) {\n      let element = parseInt(el.style.width.slice(0, 3))\n      let coef = 2 * (203 / element);\n      setCoefWidth(coef)\n    }\n\n  }\n  //get la largeur de la fenetre\n  const handleResize = () => {\n    setWidth(window.innerWidth)\n  }\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize, false);\n  }, []);\n\n\n  //update la largeur d'un item quand la largeur de la fenetre change\n  useEffect(() => {\n\n    getItemWidth();\n  }, [width]);\n\n\n  return (\n\n    <div className=\"SearchBar\">\n\n      {/* <!-- ******************************************************\n\t\t\tTOP BOX - TITRE & BG - début\n\t\t\t******************************************************* --> */}\n      <section className=\"center-col\">\n\n        <div className=\"cont-f-w startPageBg\" style={{ backgroundImage: `url(${URLDayl}images/content/${searchPainting.length > 0 && searchPainting[0].artistId}/${searchPainting.length > 0 && searchPainting[0].urlImage})`, backgroundRepeat: \"no-repeat\", backgroundPosition: \"center center\", backgroundSize: \"cover\", height: \"400px\" }}></div>\n\n        <div className=\"cont-n-w center-col exploPageTop\" >\n          <h1 className=\"goRed\">Discover <span>Art</span> You <span>Love</span></h1>\n          < div style={{ width: \"700px\" }}>\n            <Carousel\n              itemClass=\"image-item\"\n              responsive={responsive2}\n              arrows={false}\n              showDots={true}\n              autoPlay={true}\n              infinite={true}\n            >\n              <div style={{ width: \"650px\", margin: \"25px\", marginBottom: \"50px\" }}> <p>Dayl offre, via les technologies IA, <span>un pont entre l’histoire de l’art et les artistes contemporains</span> à travers une navigation inédite et le « matching » des peintures</p></div>\n              <div style={{ width: \"650px\", margin: \"25px\", marginBottom: \"50px\" }}> <p>Dayl, une plateforme ouverte <span>au partage, à l’échange, aux rencontres et à la promotion</span> d’une vision pédagogique des œuvres d’art, à travers les âges</p></div>\n              <div style={{ width: \"650px\", margin: \"25px\", marginBottom: \"50px\" }}> <p>Dayl fait le pari de la valorisation des supports numériques artistiques en mode <span>Haute Définition</span></p></div>\n            </Carousel></div>\n\n        </div>\n\n\n      </section>\n\n      {/* <!-- ******************************************************\nTOP BOX - TITRE & BG - fin --> */}\n\n\n\n      {/* <!-- ******************************************************\n\t\t\tMENU DE RECHERCHE DES OEUVRES - début\n\t\t\t(blocks.css - code relatif ligne 54 -> 55 + dropdown menus ligne 61 -> 72)\n\t\t\t****************************************************** --> */}\n\n      <section className=\"center-col bgc-a mt-b\">\n\n        <h1 class=\"explorerTitleH\">Rechercher et Explorer</h1>\n        <form id=\"fineSearch\" className=\"fineSearch\" onSubmit={handleSubmit(sendSearch)} >\n          {/* <!-- Choisir un type de licence concernant les oeuvres - début --> */}\n          <div >\n            <select className=\"searchFilter\" {...register(\"license\")}>\n              <option value=\"\" selected>Licence</option>state\n              <option value=\"Domaine public\">Domaine public</option>\n              <option value=\"protected\">Oeuvres protégées</option>\n            </select>\n          </div>\n          {/* <!-- Choisir un type de licence concernant les oeuvres - fin --> */}\n\n          {/* <!-- Choisir un style d'oeuvre - début --> */}\n          <div>\n            <select className=\"searchFilter\" id=\"style\" name=\"style\" {...register(\"style\")}>\n              <option value=\"\" selected>Style</option>\n              {listStyles.length > 0 && listStyles.map((style, index) => (\n                <option value={style.code}>{style.name}</option>\n              ))}\n\n\n            </select>\n          </div>\n          {/* <!-- Choisir un style d'oeuvre - fin --> */}\n\n          {/* <!-- Choisir un genre d'oeuvre - début --> */}\n          <div >\n            <select className=\"searchFilter\" id=\"genre\" name=\"genre\" {...register(\"genre\")}>\n              <option value=\"\" selected>Genre</option>\n              {listGenres.length > 0 && listGenres.map((genre, index) => (\n                <option value={genre.code}>{genre.name}</option>\n              ))}\n            </select>\n          </div>\n\n          {/* <!-- Choisir un genre d'oeuvre - fin --> */}\n\n          {/* <!-- Choisir une nationalité de l'oeuvre - début --> */}\n          <div>\n            <select className=\"searchFilter\" id=\"nationalite\" name=\"nationalite\" {...register(\"nationality\")}>\n              <option value=\"\" selected>Nationalité</option>\n              {listOrigins.length > 0 && listOrigins.map((origin, index) => (\n                <option value={origin.code}>{origin.name}</option>\n              ))}\n            </select>\n          </div>\n          {/* <!-- Choisir une nationalité de l'oeuvre - fin --> */}\n\n          {/* <!-- Champ de recherche texte - début --> */}\n          <div>\n            <input\n              {...register(\"freeSearch\")}\n              type=\"text\"\n              className=\"searchString explorer\"\n              placeholder=\"Artiste, mot-clé...\"\n            />\n          </div>\n          {/* <!-- Champ de recherche texte - fin --> */}\n\n          {/* <!-- Année de l'oeuvre - début --> */}\n          <div>\n            <input\n             {...register(\"year\")}\n              type=\"text\"\n              className=\"date\"\n              placeholder=\"Année\"\n            />\n          </div>\n          {/* <!-- Année de l'oeuvre - fin --> */}\n\n          {/* <!-- Décennie de l'oeuvre - début --> */}\n          <div>\n            <input\n              {...register(\"decade\")}\n              type=\"text\"\n              className=\"date\"\n              placeholder=\"Décennie\"\n            />\n          </div>\n          {/* <!-- Décennie de l'oeuvre - fin --> */}\n\n          {/* <!-- Bouton de lancement de recherche - début --> */}\n          <div data-tooltip=\"Lancer la recherche\">\n            <input type=\"submit\" /* onClick={handleSubmit} */  className=\"squareSub\" value=\"\"/>\n           \n          </div> \n          <div data-tooltip=\"Reset les filtres\">\n          <input  onClick={(e) => reset()}  className=\"squareReset\" value=\"\"/>\n          </div>\n          {/* <!-- Bouton de lancement de recherche - fin -->\n\n\t\t\t\t\t<!-- Lien matching à la volée - début --> */}\n          {/* <div data-tooltip=\"Matching à la volée\">\n            <Link href=\"matching-image.html\" to=\"../../view/MatchingImage.js\" className=\"squareMatch\"></Link>\n          </div> */}\n          {/* <!-- Lien matching à la volée - fin --> */}\n        </form>\n      </section>\n      {/* <!-- MENU DE RECHERCHE DES OEUVRES - fin -->\n\n\n\t\t\t<!-- ******************************************************\n\t\t\tCAROUSEL PLEINE LARGEUR - début\n\t\t\t(carousels.css)\n\t\t\t****************************************************** --> */}\n      <section className=\"center-col\">\n        {/* <!-- Résultats carousel - début --> */}\n        <div className=\"cont-l-slider\">\n          <Carousel responsive={responsive}\n            infinite={true}\n            shouldResetAutoplay={false}\n            itemClass=\"itemTwo\"\n            rewind={false}\n            slidesToSlide={coefWidth}\n            rewindWithAnimation={false}\n          >\n\n            {searchPainting.length / 2 > 0 &&\n              searchPainting.map(function (searchPaint, index) {\n                if (index % 2 == 0) return (\n                  <div className=\"sliderTwo\" >\n\n                    <div className=\"item\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${(searchPaint && searchPaint.hasOwnProperty(\"artistId\")) && searchPaint.artistId}/${searchPaint.urlImage && searchPaint.urlImage})`, backgroundSize: \"cover\", backgroundPosition: \"center center\" }}>\n                      <div className=\"img-wrapper\" >\n                        <div className=\"bt-wrapper\">\n                          <div className=\"name\">{searchPaint.artisteName && searchPaint.artisteName}</div>\n                          <div className=\"titre\">\n                            {searchPaint.name && searchPaint.name}\n                            <div className=\"date\">{searchPaint.year && searchPaint.year}</div>\n                          </div>\n                          <div className=\"container-action\">\n                            <Link className=\"bt-action voir\" to={`../../view/OpusPage.js/${searchPaint.id && searchPaint.id}`} state={searchPaint.id && searchPaint.id}>\n\n                              voir\n\n                            </Link>\n                            <Link className=\"bt-action match\" to={`../../view/MatchingPage.js/${searchPaint.id && searchPaint.id}`} state={searchPaint.id && searchPaint.id}>\n                              match\n                            </Link>\n                          </div>\n                        </div>\n                        {/* <img\n                          className=\"owl-lazy\"\n                          src={`https://art.novagen.tech/medias/artist/${searchPaint.artistId}/_mini/${searchPaint.urlImage}`}\n                          alt=\"Titre de l'oeuvre\"\n                        /> */}\n                      </div>\n                    </div>\n                    <div className=\"item\" style={{ backgroundImage: `url(${URLDayl}images/content/mini/${(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"artistId\")) && searchPainting[index + 1].artistId}/${(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"urlImage\")) && searchPainting[index + 1].urlImage})`, backgroundSize: \"cover\", backgroundPosition: \"center center\" }}>\n                      <div className=\"img-wrapper\" >\n                        <div className=\"bt-wrapper\">\n                          <div className=\"name\">{(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"name\")) && searchPainting[index + 1].artisteName}</div>\n                          <div className=\"titre\">\n                            {(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"name\")) && searchPainting[index + 1].name}\n                            <div className=\"date\">{(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"year\")) && searchPainting[index + 1].year}</div>\n                          </div>\n                          <div className=\"container-action\">\n                            <Link className=\"bt-action voir\" to={`../../view/OpusPage.js/${(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"id\")) && searchPainting[index + 1].id}`} state={(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"id\")) && searchPainting[index + 1].id}>\n\n                              voir\n\n                            </Link>\n                            <Link className=\"bt-action match\" to={`../../view/MatchingPage.js/${(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"id\")) && searchPainting[index + 1].id}`} state={(searchPainting[index + 1] && searchPainting[index + 1].hasOwnProperty(\"id\")) && searchPainting[index + 1].id}>\n                              match\n                            </Link>\n                          </div>\n                        </div>\n                        {/* <img\n                          className=\"owl-lazy\"\n                          src={`https://art.novagen.tech/medias/artist/${searchPainting[index+1].artistId}/_mini/${searchPainting[index+1].urlImage}`}\n                          alt=\"Titre de l'oeuvre\"\n                        /> */}\n                      </div>\n                    </div>\n\n                  </div>\n                )\n\n\n              })}\n\n          </Carousel>\n        </div>\n\n        {/* <!-- Résultats carousel - fin --> */}\n\n\n\n        {searchPainting.length < 1 && <div className=\"cont-l-w noContentResult\">\n          <img src=\"img/icons/ico_noresult_1.svg\" alt=\"Aucun résultat\" />\n          <p>Aucun résultat.</p>\n        </div>}\n\n\n      </section>\n      {/* <!-- CAROUSEL PLEINE LARGEUR - fin --> */}\n    </div>\n  );\n}\n\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/HomePage/SearchBar.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "SearchBar",
    "memberof": "src/component/HomePage/SearchBar.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/HomePage/SearchBar.js~SearchBar",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/HomePage/SearchBar.js",
    "importStyle": "SearchBar",
    "description": "This component display 30 random paintings and allow you to make specific research with different filters",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/randomPaintings30 : get 30 random paintings"
      },
      {
        "types": [
          "*"
        ],
        "description": "paintingFront/listStyles(listOrigins) (listGenres) : get list of filter"
      },
      {
        "types": [
          "*"
        ],
        "description": "paintingSearch/findPaintingBySearchDto : get search result"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/component/MatchingColor/ColorChooser.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\nimport ResultMatchingColor from \"./ResultMatchingColor\";\nimport { ColorPicker, useColor } from \"react-color-palette\";\nimport \"react-color-palette/lib/css/styles.css\";\nimport { EmailShareButton, FacebookShareButton, PinterestShareButton, TwitterShareButton, } from \"react-share\";\nimport { FacebookIcon, TwitterIcon, PinterestIcon, EmailIcon } from \"react-share\";\n\n/**\n * This component display a color Picker\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n *  @param {boolean} isLogged - test if the user is logged\n * @param {string} color - contain the hex code of the chosed color\n *  @param {string} setColor - color setter\n *  @emits - paintingSearch/findByColor : get list of paintings by selected color\n */\n\nexport default function ColorChooser({ color, setColor, user, setUser, isLogged }) {\n\n\n\tconst [painting, setPainting] = useState([]);\n\tconst [listMatch, setListMatch] = useState([]);\n\tconst [shareUrlFb, setShareUrlFb] = useState(window.location.href);\n\t// const [color, setColor] = useState([]);\n\n\n\t// // Call Jquery script\n\t// useEffect(() => {\n\t// \tconst loadFile = async () => {\n\t// \t\tconst { modal } = await import(\"../../webapp/js/js_source/modalBox\");\n\n\t// \t\tmodal();\n\t// \t};\n\t// \tloadFile();\n\t// }, []);\n\n\n\tconst handleChange = color => setColor(color);\n\n\n\n\t\n\tuseEffect(() => {\n\n\t\taxios.post(\n\t\t\tURLDayl + `paintingSearch/findByColor`, { colorCode: color.hex, sortOrder: \"ASC\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n\t\t)\n\t\t\t.then((response) => {\n\n\t\t\t\tsetListMatch(response.data);\n\t\t\t});\n\t}, []);\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\n\t\taxios.post(\n\t\t\tURLDayl + `paintingSearch/findByColor`, { colorCode: color.hex, sortOrder: \"ASC\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n\t\t)\n\t\t\t.then((response) => {\n\n\t\t\t\tsetListMatch(response.data);\n\t\t\t});\n\n\t}\n\n\n\treturn (\n\t\t<div className=\"ColorChooser\">\n\t\t\t{/* <!-- ******************************************************\n\t\t\tSECTION MATCHING COULEUR - début\n\t\t\t****************************************************** --> */}\n\t\t\t<section className=\"center-col cont-sty-2\">\n\t\t\t\t<div className=\"cont-l-w\">\n\t\t\t\t\t<div className=\"matchingColorTop\" style={{ background: `${color.hex && color.hex}` }}>\n\t\t\t\t\t\t<p><span>HEX : {color.hex && color.hex}</span>|<span>RGB : {color.rgb && color.rgb.r}, {color.rgb && color.rgb.g}, {color.rgb && color.rgb.b}</span></p>\n\n\t\t\t\t\t\t{/* <!-- Modal \"choisir une couleur\" - début --> */}\n\t\t\t\t\t\t<div className=\"smart-modal\" >\n\t\t\t\t\t\t\t<a data-target=\"modalColorMatch\" className=\"smart-modal-open-2 selectOtherColor mt-a\">Choisir une autre couleur</a>\n\n\t\t\t\t\t\t\t<div id=\"modalColorMatch\" className=\"smart-modal-content\"style={{width: \"295px\"}}>\n\t\t\t\t\t\t\t\t<h3>Choisir une couleur</h3>\n\t\t\t\t\t\t\t\t<a className=\"smart-modal-close\"><img className=\"img-left\" src={close} alt=\"Trier\" /></a>\n\n\t\t\t\t\t\t\t\t<div className=\"color-picker-box\">\n\n\t\t\t\t\t\t\t\t\t<ColorPicker width={250} height={228} color={color} onChange={setColor} hideHSV hideRGB />\n\t\t\t\t\t\t\t\t\t<div style={{ border: '2px solid #0000001a', borderRadius: '50%', width: \"50px\", height: \"50px\", position: \"absolute\", bottom: \"92px\", left: \"25px\", background: color.hex }}></div>\n\n\n\t\t\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"colorPickerSub modalClose\" value=\"Choisir cette couleur\" >Choisir cette couleur</button>\n\t\t\t\t\t\t\t\t\t</form>\n\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <!-- Modal \"choisir une couleur\" - fin --> */}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* <!-- Enregistrer & partager le matching - début --> */}\n\t\t\t\t\t<ul className=\"hListC mt-b\">\n\n\t\t\t\t\t\t<li style={{marginRight: \"20px\"}}>\n\t\t\t\t\t\t\t{/* <!-- Modal \"partager cette oeuvre\" - début --> */}\n\t\t\t\t\t\t\t<FacebookShareButton url={shareUrlFb} quote={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\n                                    <FacebookIcon size={32} round style={{ marginRight: \"1px\" }} />\n                                </FacebookShareButton>\n                                <TwitterShareButton url={shareUrlFb} title={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\n                                    <TwitterIcon size={32} round style={{ marginRight: \"1px\" }} />\n                                </TwitterShareButton>\n                                <PinterestShareButton url={shareUrlFb} description={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\n                                    <PinterestIcon size={32} round style={{ marginRight: \"1px\" }} />\n                                </PinterestShareButton>\n                                <EmailShareButton url={shareUrlFb} body={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\n                                    <EmailIcon size={32} round style={{ marginRight: \"1px\" }} />\n                                </EmailShareButton>\n                                {/* <!-- Modal \"partager cette oeuvre\" - fin --> */}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<button className=\"matchSave\" type=\"button\">Enregistrer</button>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t</ul>\n\t\t\t\t\t{/* <!-- Enregistrer & partager le matching - fin --> */}\n\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t{/* <!-- SECTION MATCHING COULEUR - fin --> */}\n\n\t\t\t\n\n\n\t\t</div>\n\t);\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/MatchingColor/ColorChooser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "ColorChooser",
    "memberof": "src/component/MatchingColor/ColorChooser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/MatchingColor/ColorChooser.js~ColorChooser",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/MatchingColor/ColorChooser.js",
    "importStyle": "ColorChooser",
    "description": "This component display a color Picker",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "contain the hex code of the chosed color"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setColor",
        "description": "color setter"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingSearch/findByColor : get list of paintings by selected color"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/component/OpusPage/Painting.js",
    "content": "import React from \"react\";\nimport { useRef, useEffect, useState, Suspense } from \"react\";\n\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport PrismaZoom from 'react-prismazoom'\nimport { Link } from \"react-router-dom\";\nimport { accordion } from \"../../webapp/js/js_source/accordion\"\nimport ListModal2 from \"../general/ListModal2\";\nimport { EmailShareButton, FacebookShareButton, PinterestShareButton, TwitterShareButton, } from \"react-share\";\nimport { FacebookIcon, TwitterIcon, PinterestIcon, EmailIcon } from \"react-share\";\nimport { toast } from \"react-toastify\"\nimport ReactLoading from 'react-loading';\nimport down from \"../../webapp/img/icons/ico_arrow-down_2.svg\"\n\n/**\n * This component display informations about a specific painting\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n * @param {boolean} isLogged - test if the user is logged\n * @param {number} paintId - selected paint Id\n * @emits - paintingEntity/${paintId} : get painting informations\n * @emits - paintingEntity/numberFavorite/${paintId} : get number of likes\n * @emits - api/painting_comment/save : post new comment\n * @emits - users/updateFavoritePainting : like/unlike painting\n */\n\nexport default function Painting({ user, setUser, paintId, isLogged }) {\n\n\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [Painting, setPainting] = useState([]);\n\tconst [zoomBool, setZoomBool] = useState(false);\n\tconst [refreshKey, setRefreshKey] = useState(0);\n\tconst [boolFav, setBoolFav] = useState(false);\n\tconst [commentText, setCommentText] = useState(\"\");\n\tconst [shareUrlFb, setShareUrlFb] = useState(window.location.href);\n\tconst [showKeyword, setShowKeyword] = useState(false)\n\tconst [nLike, setNLike] = useState(0)\n\tconst [boolAccordion, setBoolAccordion] = useState(false);\n\n\n\taccordion();\n\n\tfunction handleAccordion() {\n\n\t\tif (boolAccordion === true) {\n\t\t\tsetBoolAccordion(false)\n\t\t}\n\t\telse {\n\t\t\tsetBoolAccordion(true);\n\t\t}\n\t}\n\n\t//get Painting info//\n\tuseEffect(() => {\n\n\t\taxios.get(URLDayl + `paintingEntity/${paintId}`).then((response) => {\n\t\t\tsetIsLoading(true);\n\t\t\tsetPainting(response.data);\n\t\t\tconsole.log(response.data)\n\t\t\tconst tempResponse = response.data;\n\t\t\t//retrive keywords from string to array\n\n\t\t\ttempResponse.boolList = false;\n\t\t\ttempResponse.aw_keyw_ai = tempResponse.aw_keyw_ai.slice(1, -1)\n\t\t\ttempResponse.aw_keyw_ai = tempResponse.aw_keyw_ai.split(\",\")\n\t\t\tsetPainting(tempResponse)\n\t\t\tsetShowKeyword(true)\n\t\t\t//Get number like\n\t\t\taxios.get(URLDayl + `paintingEntity/numberFavorite/${paintId}`).then((response2) => {\n\t\t\t\tsetNLike(response2.data);\n\n\t\t\t});\n\n\t\t});\n\t\t//Test painting liké par l'utilisateur\n\t\tif (user)\n\t\t\tuser.paintingLiked.map((like) => {\n\t\t\t\tpaintId === like && setBoolFav(true)\n\t\t\t})\n\n\t}, [paintId]);\n\n\n\n\t////////Add fav////////\n\tfunction handleClick() {\n\t\tconst tempUser = user;\n\t\tif (isLogged === true) {\n\t\t\tif (boolFav === true) {\n\t\t\t\tsetBoolFav(false);\n\t\t\t\t//delete a favorite painting\n\t\t\t\taxios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: paintId, operation: \"remove\" },\n\t\t\t\t\t{ headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\n\t\t\t\t)\n\t\t\t\t\t.then((response) => {\n\n\t\t\t\t\t\tconst removeIndex = tempUser.paintingLiked.indexOf(paintId);\n\t\t\t\t\t\ttempUser.paintingLiked.splice(removeIndex, 1);\n\t\t\t\t\t\tsetUser(tempUser);\n\t\t\t\t\t\tupdateLike()\n\t\t\t\t\t\ttoast.success(\"Supprimée des favoris!\", {\n\t\t\t\t\t\t\tposition: \"top-right\",\n\t\t\t\t\t\t\tautoClose: 3000,\n\t\t\t\t\t\t\thideProgressBar: false,\n\t\t\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\t\t\tpauseOnHover: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tprogress: undefined,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetBoolFav(true);\n\t\t\t\t//add a favorite painting\n\t\t\t\taxios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: paintId, operation: \"add\" },\n\t\t\t\t\t{ headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\n\t\t\t\t)\n\t\t\t\t\t.then((response) => {\n\n\n\n\t\t\t\t\t\ttempUser.paintingLiked.push(paintId)\n\t\t\t\t\t\tsetUser(tempUser)\n\t\t\t\t\t\tupdateLike()\n\t\t\t\t\t\ttoast.success(\"Ajoutée aux favoris!\", {\n\t\t\t\t\t\t\tposition: \"top-right\",\n\t\t\t\t\t\t\tautoClose: 3000,\n\t\t\t\t\t\t\thideProgressBar: false,\n\t\t\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\t\t\tpauseOnHover: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tprogress: undefined,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t});\n\t\t\t}\n\n\n\n\t\t}\n\n\t}\n\tfunction updateLike() {\n\t\t//update Nombres de like//\n\t\taxios.get(URLDayl + `paintingEntity/numberFavorite/${paintId}`).then((response) => {\n\t\t\tsetNLike(response.data);\n\t\t\tconsole.log(response.data)\n\n\t\t});\n\t}\n\n\n\t// Call Jquery script\n\tuseEffect(() => {\n\t\tconst loadFile = async () => {\n\t\t\t// const { modal } = await import(\"../../webapp/js/modalBox.min.js\");\n\n\t\t\t// modal();\n\t\t};\n\t\tloadFile();\n\t}, []);\n\n\t//afficher image zoom//\n\tconst handleZoomTrue = () => {\n\t\tsetZoomBool(false)\n\t}\n\tconst handleZoomFalse = () => {\n\t\tsetZoomBool(true)\n\t}\n\n\n\t//post comment//\n\tconst handleSubmit = (e) => {\n\n\t\te.preventDefault();\n\t\tif (isLogged === true) {\n\t\t\taxios.post(URLDayl + \"api/painting_comment/save\",\n\t\t\t\t{ userId: user.id, paintingId: paintId, content: commentText, statusComment: \"ACTIVE\", visibility: \"PUBLIC\" },\n\t\t\t\t{ headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n\t\t\t)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tsetRefreshKey(oldKey => oldKey + 1);\n\n\t\t\t\t\ttoast.success(\"Commentaire posté!\", {\n\t\t\t\t\t\tposition: \"top-right\",\n\t\t\t\t\t\tautoClose: 3000,\n\t\t\t\t\t\thideProgressBar: false,\n\t\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\t\tpauseOnHover: true,\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\tprogress: undefined,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\telse {\n\t\t\ttoast.warn(\"Connectez vous pour poster un commentaire!\", {\n\t\t\t\tposition: \"top-right\",\n\t\t\t\tautoClose: 3000,\n\t\t\t\thideProgressBar: false,\n\t\t\t\tcloseOnClick: true,\n\t\t\t\tpauseOnHover: true,\n\t\t\t\tdraggable: true,\n\t\t\t\tprogress: undefined,\n\t\t\t});\n\t\t}\n\n\n\t}\n\treturn (\n\t\t<div className=\"Painting\">\n\t\t\t{/* <!-- ******************************************************\n\t\t\tSECTION PRÉSENTATION DE L'OEUVRE - début\n\t\t\t****************************************************** --> */}\n\t\t\t<section className=\"center-col cont-sty-1\" style={{paddingBottom: \"150px\"}}>\n\n\t\t\t\t{/* <!-- ******************************************************\n\t\t\t\tBREADCRUMBS - début\n\t\t\t\t****************************************************** --> */}\n\t\t\t\t<ol className=\"topBc\" style={{marginTop: \"20px\"}}>\n\t\t\t\t\t<li><Link to=\"../../\">Accueil</Link></li>\n\t\t\t\t\t{/* <li className=\"#\"><a>Artistes</a></li> */}\n\t\t\t\t\t<li className=\"#\"><Link to={`../../view/ArtistDetailPage.js/${Painting.artist_idtf_intern}`} state={Painting.artist_idtf_intern} href=\"artiste.html\">{Painting.artist_name_tot}</Link></li>\n\t\t\t\t\t{/* <li className=\"#\"><a>Oeuvres</a></li> */}\n\t\t\t\t\t<li className=\"#\">{Painting.aw_title_Origin}</li>\n\t\t\t\t</ol>\n\t\t\t\t{/* <!-- Breadcrumbs - fin --> */}\n\n\n\n\t\t\t\t<div className=\"oeuvreTop\">\n\n\t\t\t\t\t<div className=\"itemImage\" style={{height: \"400px\"}}>\n\n\t\t\t\t\t\t{/* <!-- Lancer un matching avec cette oeuvre - début --> */}\n\t\t\t\t\t\t<form id=\"matchThisItem\" className=\"matchSubAlt\" method=\"post\" action=\"\">\n\t\t\t\t\t\t{isLoading === true && <div style={{marginBottom: \"20px\"}}><ReactLoading color={\"#E9573F\"} type={\"spin\"} height={\"40px\"} width={\"40px\"}  /></div>}\n\t\t\t\t\t\t\t<Link to={`../../view/MatchingPage.js/${paintId}`} state={paintId} ><input type=\"submit\" value=\"Match\" /></Link>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t{/* <!-- Lancer un matching avec cette oeuvre - fin --> */}\n\n\t\t\t\t\t\t{/* <!-- Lightbox image avec fonction agrandir/réduire - début --> */}\n\n\t\t\t\t\t\t<a className=\"zoomOpen\" onClick={handleZoomFalse} data-modal=\"imgBox\">\n\t\t\t\t\t\t\t<img style={{maxHeight: \"400px\"}} onLoad={e => setIsLoading(false)} className=\"show\" src={URLDayl + `images/content/${Painting.artist_idtf_intern}/${Painting.generatedId}`} alt=\"Nom de l'oeuvre\" />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t{/*<!-- Trigger Modal. --> */}\n\n\n\t\t\t\t\t\t{zoomBool === true &&\n\t\t\t\t\t\t\t<div className=\"zoomBox\" id=\"imgBox\" style={{ overflowY: \"hidden\" }}>\n\t\t\t\t\t\t\t\t<button className=\"zoomCloseBtn\" onClick={handleZoomTrue} type=\"button\">x</button>\n\n\t\t\t\t\t\t\t\t<div className=\"modal-sandbox\"></div>\n\t\t\t\t\t\t\t\t<PrismaZoom allowPan={true} allowZoom={true}>\n\n\t\t\t\t\t\t\t\t\t<img id=\"resizeMe\" style={{ height: \"auto \", maxWidth: \"70% \" }} src={URLDayl + `images/content/${Painting.artist_idtf_intern}/${Painting.generatedId}`} draggable=\"true\" alt=\"Nom de l'oeuvre\" />\n\t\t\t\t\t\t\t\t</PrismaZoom>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{/* <!-- Lightbox image avec fonction agrandir/réduire - fin --> */}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"itemDetails\">\n\t\t\t\t\t\t<h1>{Painting.aw_title_Origin}, {Painting.aw_year}</h1>\n\t\t\t\t\t\t<h2><Link to={`../../view/ArtistDetailPage.js/${Painting.artist_idtf_intern}`} state={Painting.artist_idtf_intern} href=\"artiste.html\">{Painting.artist_name_tot}</Link></h2>\n\n\t\t\t\t\t\t{/* <!-- LIEN PLUS D'INFOS SUR CETTE OEUVRE (WIKIART...) - début --> */}\n\t\t\t\t\t\t<a className=\"itemExtData\" href={Painting.aw_link_ext} target=\"_blank\">Plus d’informations sur {Painting.aw_desc_basic_source_1}</a>\n\t\t\t\t\t\t{/* <!-- LIEN PLUS D'INFOS SUR CETTE OEUVRE (WIKIART...) - fin --> */}\n\n\t\t\t\t\t\t{/* <!-- ENREGISTRER & PARTAGER LE MATCHING - début --> */}\n\t\t\t\t\t\t<ul className=\"hList\">\n\n\t\t\t\t\t\t\t{/* <!-- BOUTONS LIKES - début --> */}\n\t\t\t\t\t\t\t<li>\n\n\t\t\t\t\t\t\t\t<input type=\"submit\" id=\"submit\" className={boolFav ? \"itemLikeItYes\" : \"itemLikeIt\"} onClick={() => handleClick()} value={nLike} />{/*<!-- Le membre n'aime pas déjà cette oeuvre --> */}\n\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t{/* <!-- BOUTONS LIKES - début --> */}\n\n\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{/* <!-- Modal \"ajouter à une liste\" - début --> */}\n\t\t\t\t\t\t\t\t<ListModal2 user={user} isLogged={isLogged} listPaint={Painting} />\n\n\t\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{/* <!-- Modal \"partager cette oeuvre\" - début --> */}\n\t\t\t\t\t\t\t\t<FacebookShareButton url={shareUrlFb} quote={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\n\t\t\t\t\t\t\t\t\t<FacebookIcon size={32} round style={{ marginRight: \"1px\" }} />\n\t\t\t\t\t\t\t\t</FacebookShareButton>\n\t\t\t\t\t\t\t\t<TwitterShareButton url={shareUrlFb} title={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\n\t\t\t\t\t\t\t\t\t<TwitterIcon size={32} round style={{ marginRight: \"1px\" }} />\n\t\t\t\t\t\t\t\t</TwitterShareButton>\n\t\t\t\t\t\t\t\t<PinterestShareButton url={shareUrlFb} description={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\n\t\t\t\t\t\t\t\t\t<PinterestIcon size={32} round style={{ marginRight: \"1px\" }} />\n\t\t\t\t\t\t\t\t</PinterestShareButton>\n\t\t\t\t\t\t\t\t<EmailShareButton url={shareUrlFb} body={\"Regarde l'oeuvre que j'ai trouvé sur Dayl.art !\"} className=\"Demo__some-network__share-button\" >\n\t\t\t\t\t\t\t\t\t<EmailIcon size={32} round style={{ marginRight: \"1px\" }} />\n\t\t\t\t\t\t\t\t</EmailShareButton>\n\t\t\t\t\t\t\t\t{/* <!-- Modal \"partager cette oeuvre\" - fin --> */}\n\t\t\t\t\t\t\t\t{/* <div className=\"smart-modal\">\n\t\t\t\t\t\t\t\t\t<a data-target=\"shareThis\" className=\"smart-modal-open-2\"><span className=\"matchShare\">Partager</span></a>\n\n\t\t\t\t\t\t\t\t\t<div id=\"shareThis\" className=\"smart-modal-content\">\n\t\t\t\t\t\t\t\t\t\t<h3>Partager cette oeuvre</h3>\n\t\t\t\t\t\t\t\t\t\t<a className=\"smart-modal-close\"><img className=\"img-left\" src=\"img/icons/ico_close_2.svg\" alt=\"Trier\" /></a>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<div className=\"entrySocial\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"fb\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a data-gtm-share-link=\"Facebook\">Facebook</a>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"twitter\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"http://twitter.com/intent/tweet?text=Ajouter le tire de la page;url=medias/hd/m/a/amedeo-modigliani/1918_Femme-assise-robe-bleue.jpg\" onClick=\"window.open(this.href, 'Partager sur Twitter', 'menubar=no,toolbar=no,resizable=yes,scrollbars=no,height=600,width=600'); return false;\" data-gtm-share-link=\"Twitter\">Twitter</a>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"pinterest\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"https://www.pinterest.com/pin/create/button/?url=http%3A////www.domaine.com/url-complete-de-la-page;description=Ajouter le texte de la description de l'artiste;media=medias/hd/m/a/amedeo-modigliani/1918_Femme-assise-robe-bleue.jpg\" onClick=\"window.open(this.href, 'Épingler sur Pinterest', 'menubar=no,toolbar=no,resizable=yes,scrollbars=no,height=600,width=600'); return false;\" data-gtm-share-link=\"Pinterest\">Pinterest</a>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"email\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"mailto:stephane@novagen.tech?subject=#&body=#\" data-gtm-share-link=\"email\">par Email</a>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t\t{/* <!-- Modal \"partager cette oeuvre\" - fin --> */}\n\t\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t{/* <!-- Enregistrer & partager le matching - fin -->\n\n\n\t\t\t\t\t\t\t<!-- ******************************************************\n\t\t\t\t\t\t\tPARTAGER UNE ÉMOTION - début\n\t\t\t\t\t\t\t****************************************************** --> */}\n\t\t\t\t\t\t<form method=\"post\" onSubmit={handleSubmit} className=\"addUserThought mt-b\" >\n\t\t\t\t\t\t\t<textarea name=\"textarea\" onChange={(e) => setCommentText(e.target.value)} value={commentText} minLength=\"10\" maxLength=\"255\" placeholder=\"Publier une émotion ou un avis sur cette oeuvre...\"></textarea>\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"\" />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t{/* <!-- PARTAGER UNE ÉMOTION - fin --> */}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t{/* <!-- SECTION PRÉSENTATION DE L'OEUVRE - fin --> */}\n\n\n\t\t\t<div className=\"cont-sty-3 mb-b\">\n\t\t\t\t{/* \n\t\t\t\t\t<!-- ******************************************************\n\t\t\t\t\tSECTION DONNÉES TECHNIQUES DE L'OEUVRE ET MOTS-CLES - début\n\t\t\t\t\t****************************************************** --> */}\n\t\t\t\t<section className=\"center-col\">\n\t\t\t\t\t<div className=\"cont-l-w mt-a flexResp\">\n\n\t\t\t\t\t\t{/* <!-- Données techniques - début --> */}\n\t\t\t\t\t\t<div className=\"row70\">\n\t\t\t\t\t\t\t<h2 className=\"mb-a\">Données techniques <img src={down} style={{ width: \"20px\", height: \"20px\", top: \"4px\", left: \"10px\" }} onClick={handleAccordion}></img></h2>\n\t\t\t\t\t\t\t{boolAccordion === true && <div className=\"toLeftDataList\">\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Style</span><span className=\"dataValue\">{Painting.aw_style_import}</span></div>\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Genre</span><span className=\"dataValue\">{Painting.aw_genre_import}</span></div>\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Support</span><span className=\"dataValue\">{Painting.aw_medium}</span></div>\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Dimensions</span><span className=\"dataValue\">{Painting.aw_dim_width}{Painting.aw_dim_width && \"x\"}{Painting.aw_dim_height}{Painting.aw_dim_width && \"cm\"}</span></div>\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Lieu</span><span className=\"dataValue\">{Painting.aw_locate}</span></div>\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Source</span><span className=\"dataValue\">{Painting.aw_desc_basic_source_1}</span></div>\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Droits</span><span className=\"dataValue\">{Painting.aw_beneficiaries}</span></div>\n\t\t\t\t\t\t\t\t<div><span className=\"dataName\">Crédits</span><span className=\"dataValue\"></span></div>\n\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <!-- Données techniques - fin --> */}\n\n\t\t\t\t\t\t{/* <!-- Mots-clés - début --> */}\n\t\t\t\t\t\t<div className=\"row30 tagList\">\n\t\t\t\t\t\t\t<h2 className=\"mb-a\">Mots-clés</h2>\n\t\t\t\t\t\t\t{/* {displayKeywords()}\t */}\n\t\t\t\t\t\t\t{showKeyword && typeof Painting.aw_keyw_ai === \"object\" && Painting.aw_keyw_ai.map((keyword, index) => {\n\t\t\t\t\t\t\t\tif (keyword !== \" \" && keyword !== \"\")\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<a key={index}>\n\t\t\t\t\t\t\t\t\t\t\t{keyword}\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\n\n\n\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <!-- Mots-clés - fin --> */}\n\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</div>\n\n\t\t\t{/* {Painting.length > 0 &&\n\t\t\t\t\t\t\tPainting.keywords.map((keyword) => (<a href=\"/#\">{keyword}</a>))} */}\n\n\n\t\t</div>\n\t);\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/OpusPage/Painting.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "Painting",
    "memberof": "src/component/OpusPage/Painting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/OpusPage/Painting.js~Painting",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/OpusPage/Painting.js",
    "importStyle": "Painting",
    "description": "This component display informations about a specific painting",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "selected paint Id"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/${paintId} : get painting informations"
      },
      {
        "types": [
          "*"
        ],
        "description": "paintingEntity/numberFavorite/${paintId} : get number of likes"
      },
      {
        "types": [
          "*"
        ],
        "description": "api/painting_comment/save : post new comment"
      },
      {
        "types": [
          "*"
        ],
        "description": "users/updateFavoritePainting : like/unlike painting"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/component/general/EmojiPicker.js",
    "content": "import React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { set } from \"react-hook-form\";\nimport photo from \"../../webapp/temp/arthur_1.jpg\"\nimport photo2 from \"../../webapp/temp/olivier_profil_1.jpeg\"\nimport data from '@emoji-mart/data'\nimport Picker from 'emoji-picker-react';\n\n/**\n * This component is an emoji Picker used to send emoji in chat\n * @param {string} txtArea - string containing your message\n * @param {string} setTxtArea - txtArea setter\n\n */\n\n\nexport default function EmojiPicker({ txtArea, setTxtArea }) {\n\n\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n\n  };\n\n  console.log(chosenEmoji)\n\n\n  useEffect(() => {\n    if (chosenEmoji) {\n      let tempTxt = txtArea;\n\n      tempTxt = tempTxt + chosenEmoji.emoji;\n\n      setTxtArea(tempTxt)\n    }\n  }, [chosenEmoji]);\n\n\n  return (\n    <div className=\"EmojiPicker\">\n\n      <Picker onEmojiClick={onEmojiClick} />\n    </div >\n  );\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/general/EmojiPicker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "EmojiPicker",
    "memberof": "src/component/general/EmojiPicker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/EmojiPicker.js~EmojiPicker",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/EmojiPicker.js",
    "importStyle": "EmojiPicker",
    "description": "This component is an emoji Picker used to send emoji in chat",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "txtArea",
        "description": "string containing your message"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "setTxtArea",
        "description": "txtArea setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/component/general/Fav.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport { ToastContainer, toast } from \"react-toastify\"\n\n\n/**\n * This component is used to like a painting\n * @param {object} user - user object from api\n *  @param {boolean} isLogged - test if the user is logged\n * @param {object} favPaint - paint object to like\n * @emits - users/updateFavoritePainting : like/unlike painting\n\n */\n\n\nexport default function Fav({ user, isLogged, favPaint }) {\n\n  const [boolFav, setBoolFav] = useState(false);\n  const [refreshKey, setRefreshKey] = useState(0);\n\n\n  /**\n   * test si les peintures sont deja like\n   */\n  useEffect(() => {\n    if (isLogged === true)\n      user.paintingLiked.length > 0 && user.paintingLiked.map((paintUser) => (\n\n        favPaint.id === paintUser && (setBoolFav(true))\n      ))\n\n\n  }, []);\n\n\n\n\n\n  function handleClick() {\n    console.log(isLogged)\n    if (isLogged === true) {\n\n      //on supprime\n      if (boolFav === true) {\n        setBoolFav(false)\n        FavRemove()\n      }\n      //sinon on ajoute\n      else {\n        setBoolFav(true)\n        FavAdd()\n\n      }\n\n\n    }\n    else {\n      toast.warn(\"Connectez vous pour ajouter aux favoris!\", {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n\n\n  }\n\n  /**\n   * Add paint to likes\n   */\n  function FavAdd() {\n\n\n    //add a favorite painting\n    axios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: favPaint.id, operation: \"add\" },\n      { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\n    )\n      .then((response) => {\n\n\n        toast.success(\"Ajoutée aux favoris!\", {\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n      });\n  }\n  function FavRemove() {\n\n    //delete a favorite painting\n    axios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: favPaint.id, operation: \"remove\" },\n      { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\n    )\n      .then((response) => {\n\n        toast.success(\"Supprimée des favoris!\", {\n          position: \"top-right\",\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n\n\n      });\n\n  }\n\n  return (\n\n\n    <div className=\"Fav\">\n\n      <button className={boolFav ? \"favo yes\" : \"favo not\"} type=\"button\" onClick={handleClick}></button>\n\n    </div>\n  );\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function FavAdd(user, paintId) {\n\n\n  //add a favorite painting\n  axios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: paintId, operation: \"add\" },\n    { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\n  )\n    .then((response) => {\n\n\n      console.log(response.data + \" add\")\n\n    });\n}\nexport function FavRemove(user, paintId) {\n\n  //delete a favorite painting\n  axios.post(URLDayl + \"users/updateFavoritePainting\", { userId: user.id, favoriteId: paintId, operation: \"remove\" },\n    { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\", \"USER_PAINT\": 0 } }\n  )\n    .then((response) => {\n\n\n      console.log(response.data + \" remove\")\n\n    });\n\n}\n\nexport function TestFav(user, paintId, index, paintings) {\n\n\n\n  if (user) {\n\n\n    //Inversion bool pour la classe du boutton\n    if (paintings[index].bool === false) {\n      paintings[index].bool = true;\n      FavAdd(user, paintId)\n    }\n\n    else {\n      paintings[index].bool = false;\n      FavRemove(user, paintId);\n    }\n\n\n\n\n  }\n\n\n}\n\nexport function getFav(user, paintings) {\n\n\n  paintings.length > 0 && paintings.map((paint, index) => (\n    user.paintingLiked.length > 0 && user.paintingLiked.map((paintUser) => (\n\n      paint.id === paintUser && (paintings[index].bool = true)\n    ))\n  ))\n\n}\nexport function getFavM(user, paintings) {\n\n\n  paintings.length > 0 && paintings.map((paint, index) => (\n    user.paintingLiked.length > 0 && user.paintingLiked.map((paintUser) => (\n      paint.painting.id === paintUser && (paintings[index].bool = true)\n    ))\n  ))\n\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/general/Fav.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "Fav",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~Fav",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "Fav",
    "description": "This component is used to like a painting",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "favPaint",
        "description": "paint object to like"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "users/updateFavoritePainting : like/unlike painting"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "FavAdd",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~FavAdd",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "{FavAdd}",
    "description": "",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "FavRemove",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~FavRemove",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "{FavRemove}",
    "description": "",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "TestFav",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~TestFav",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "{TestFav}",
    "description": "",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "getFav",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~getFav",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "{getFav}",
    "description": "",
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "getFavM",
    "memberof": "src/component/general/Fav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/Fav.js~getFavM",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/Fav.js",
    "importStyle": "{getFavM}",
    "description": "",
    "lineNumber": 220,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "paintings",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 94,
    "kind": "file",
    "name": "src/component/general/GifPicker.js",
    "content": "import React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport Tenor from \"@mickyballadelli/react-tenor17\"\nimport \"@mickyballadelli/react-tenor17/dist/styles.css\"\n\n/**\n * This component is a Gif Picker used to send gif in chat\n\n\n */\n\nexport default function GifPicker({props}) {\n  \n\n   \n\n    return (\n        <div className=\"GifPicker\">\n            \n            <Tenor token=\"AIzaSyAdVAwxf_VBVsUhTJfZLVxSWWOL1hwtOVw\" onSelect={result => console.log(result)} base=\"https://tenor.googleapis.com/v2\" contentFilter=\"off\" defaultResults={true}/>\n        </div >\n    );\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/general/GifPicker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "GifPicker",
    "memberof": "src/component/general/GifPicker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/GifPicker.js~GifPicker",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/GifPicker.js",
    "importStyle": "GifPicker",
    "description": "This component is a Gif Picker used to send gif in chat",
    "lineNumber": 13,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"props\": *}"
        ],
        "defaultRaw": {
          "props": null
        },
        "defaultValue": "{\"props\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "src/component/general/ListModal.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\nimport { toast } from \"react-toastify\"\nimport { Link } from \"react-router-dom\";\n\n/**\n * This component is used to add painting to a list in a grid\n * @param {object} user - user object from api\n *  @param {boolean} isLogged - test if the user is logged\n * @param {object} listPaint - paint object to add in list\n * @emits - userLists/save : create new list\n * @emits - userLists/byUserId : get user lists\n */\n\nexport default function ListModal({ user, isLogged, listPaint }) {\n\n    const [boolList, setBoolList] = useState(false);\n    const [refreshKey, setRefreshKey] = useState(0);\n    const [listTitle, setListTitle] = useState([]);\n    const [listList, setListList] = useState([]);\n\n\n    //Open List Modal//\n    function handleList(paintId) {\n\n        if (isLogged === true) {\n\n            if (boolList === true)\n                setBoolList(false)\n            else\n                setBoolList(true)\n\n\n        }\n        else {\n            toast.warning(\"Connectez vous pour ajouter à une liste!\", {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n\n\n    }\n    //Get User List//\n    useEffect(() => {\n\n        if (isLogged)\n            axios.get(URLDayl + \"userLists/byUserId\", { params: { userId: user.id } }\n            )\n                .then((response) => {\n                  \n                    let boolArray = response.data;\n                   \n                    testList(boolArray);\n                   \n                });\n\n    }, [refreshKey]);\n\n    //Test si la peinture est deja ajouté ou non//\n    const testList = (tempListList) => {\n\n\n        //On parcours les lists pour voir si la peinture est presente \n        for (let i = 0; i < tempListList.length; i++)\n            axios.get(URLDayl + \"userLists/detailByListId\", { params: { listId: tempListList[i].id } }\n            )\n                .then((response) => {\n\n                    let tempList = response.data;\n                    tempListList[i].boolAdded = false;\n                    for (let j = 0; j < tempList.listPaintings.length; j++)\n\n                        if (tempList.listPaintings[j].id === listPaint.id) {\n\n                            tempListList[i].boolAdded = true;\n                            break;\n                        }\n\n\n                });\n        console.log(tempListList)\n\n        setListList(tempListList);\n    }\n\n    //Post new list to the API//\n    const handleSubmit = (e) => {\n\n        if (isLogged) {\n            e.preventDefault();\n\n            console.log(`Form submitted, ${listTitle}`);\n            axios.post(URLDayl + \"userLists/save\",\n                { listName: listTitle, rank: 0, userId: user.id, id: 0, status: \"ACTIVE\", detail: \"\", imageUrl: \"\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n            )\n                .then((response) => {\n                    setRefreshKey(oldKey => oldKey + 1);\n\n                    toast.success(\"Nouvelle liste ajoutée!\", {\n                        position: \"top-right\",\n                        autoClose: 3000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n\n                });\n        }\n\n        else {\n            toast.warn(\"Connectez vous pour ajouter aux favoris!\", {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n\n\n\n    }\n\n    //Post or delete new Paint to the list//\n    const addRemovePaintToList = (list, paintId, index) => {\n\n        let tempList = [...listList]\n\n        if (isLogged) {\n\n            if (list.boolAdded === false)\n                axios.get(URLDayl + \"userLists/addPaintingToList\", { params: { listId: list.id, paintingId: paintId } }\n                )\n                    .then((response) => {\n\n                        tempList[index].boolAdded = true\n                          tempList[index].countItems = tempList[index].countItems +1;\n                        setListList(tempList)\n\n                        toast.success(\"Oeuvre ajoutée à la liste!\", {\n                            position: \"top-right\",\n                            autoClose: 3000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n\n                    });\n            else\n                axios.get(URLDayl + \"userLists/removePaintingFromList\", { params: { listId: list.id, paintingId: paintId } }\n                )\n                    .then((response) => {\n                        tempList[index].boolAdded = false\n                        tempList[index].countItems = tempList[index].countItems -1;\n                        setListList(tempList)\n\n\n                        toast.success(\"Oeuvre retirée de la liste!\", {\n                            position: \"top-right\",\n                            autoClose: 3000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n                    });\n\n\n\n        }\n        else {\n            toast.warning(\"Connectez vous pour ajouter à une liste!\", {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n\n\n    }\n\n    return (\n        <div className=\"ListModal\">\n\n            <button id=\"itemListState\" className=\"openModalNow gridItemListAction not\" data-target=\"1777\" onClick={(e) => handleList(listPaint.id)} type=\"button\" value=\"notList\"></button>\n\n\n            {boolList === true &&\n                <div>\n                    <div className=\"smart-modal-overlay\" style={{ display: \"block\" }}></div>\n                    <div id=\"1777\" className=\"smart-modal-content scrollAuto\" style={{ display: \"block\", transform: \"translate(-50%,-50%)\", top: \"50%\", left: \"50%\", minWidth: \"0\" }}>\n                        <h3>Ajouter à une liste</h3>\n                        <a className=\"smart-modal-close\"><img className=\"img-left\" onClick={() => handleList(listPaint.id)} src={close} alt=\"Trier\" style={{ height: \"20px\" }} /></a>\n                        <div className=\"addToList\">\n\n                            <h4 className=\"mt-b\">Créer une nouvelle liste</h4>\n\n                            <form action=\"\" onSubmit={handleSubmit}>\n                                <div className=\"addListForm\">\n                                    <input onChange={(e) => setListTitle(e.target.value)} value={listTitle} type=\"text\" placeholder=\"Nom de la liste\" />\n                                    <button type=\"submit\">Créer</button>\n                                </div>\n                            </form>\n\n                            <h4 className=\"mt-c mb-a\">Liste existante</h4>\n\n                            {/* <!-- Liste disponible - début --> */}\n                            {listList.length > 0 && listList.map((list, index) => {\n                                console.log(list.boolAdded)\n                                return (\n                                    <div className=\"listDetails\">\n                                        <a className=\"\" onClick={() => addRemovePaintToList(list, listPaint.id, index)} /* to={`../../view/ListeAmateurPage.js/${list.id}`} state={list.id} */ style={{ left: \"50px\", top: \"8px\" }}>{list.listName}  ({list.countItems})</a>\n                                        {/* <div className=\"listItems\">{list.countItems} oeuvres</div> */}\n                                        <button type=\"button\" onClick={() => addRemovePaintToList(list, listPaint.id, index)} className={list.boolAdded === true ? \"addedToThisList\" : \"addToThisList\"}  ></button>\n                                    </div>)\n                            })}\n\n                            {/* <!-- Liste disponible - fin -->*/}\n\n\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/general/ListModal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "ListModal",
    "memberof": "src/component/general/ListModal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/ListModal.js~ListModal",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/ListModal.js",
    "importStyle": "ListModal",
    "description": "This component is used to add painting to a list in a grid",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "listPaint",
        "description": "paint object to add in list"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "userLists/save : create new list"
      },
      {
        "types": [
          "*"
        ],
        "description": "userLists/byUserId : get user lists"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "src/component/general/ListModal2.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\nimport { toast } from \"react-toastify\"\nimport { Link } from \"react-router-dom\";\n\n\n/**\n * This component is used to add your paint to a list\n * @param {object} user - user object from api\n *  @param {boolean} isLogged - test if the user is logged\n * @param {object} listPaint - paint object to add in list\n * @emits - userLists/save : create new list\n * @emits - userLists/byUserId : get user lists\n */\n\n\nexport default function ListModal2({ user, isLogged, listPaint }) {\n\n    const [boolList, setBoolList] = useState(false);\n    const [refreshKey, setRefreshKey] = useState(0);\n    const [listTitle, setListTitle] = useState([]);\n    const [listList, setListList] = useState([]);\n\n   //Open List Modal//\n   function handleList(paintId) {\n\n    if (isLogged === true) {\n\n        if (boolList === true)\n            setBoolList(false)\n        else\n            setBoolList(true)\n\n\n    }\n    else {\n        toast.warning(\"Connectez vous pour ajouter à une liste!\", {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n    }\n\n\n}\n//Get User List//\nuseEffect(() => {\n\n    if (isLogged)\n        axios.get(URLDayl + \"userLists/byUserId\", { params: { userId: user.id } }\n        )\n            .then((response) => {\n              \n                let boolArray = response.data;\n               \n                testList(boolArray);\n               \n            });\n\n}, [refreshKey]);\n\n//Test si la peinture est deja ajouté ou non//\nconst testList = (tempListList) => {\n\n\n    //On parcours les lists pour voir si la peinture est presente \n    for (let i = 0; i < tempListList.length; i++)\n        axios.get(URLDayl + \"userLists/detailByListId\", { params: { listId: tempListList[i].id } }\n        )\n            .then((response) => {\n\n                let tempList = response.data;\n                tempListList[i].boolAdded = false;\n                for (let j = 0; j < tempList.listPaintings.length; j++)\n\n                    if (tempList.listPaintings[j].id === listPaint.id) {\n\n                        tempListList[i].boolAdded = true;\n                        break;\n                    }\n\n\n            });\n\n    setListList(tempListList);\n}\n\n//Post new list to the API//\nconst handleSubmit = (e) => {\n\n    if (isLogged) {\n        e.preventDefault();\n\n        console.log(`Form submitted, ${listTitle}`);\n        axios.post(URLDayl + \"userLists/save\",\n            { listName: listTitle, rank: 0, userId: user.id, id: 0, status: \"ACTIVE\", detail: \"\", imageUrl: \"\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n        )\n            .then((response) => {\n                setRefreshKey(oldKey => oldKey + 1);\n\n                toast.success(\"Nouvelle liste ajoutée!\", {\n                    position: \"top-right\",\n                    autoClose: 3000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n\n            });\n    }\n\n    else {\n        toast.warn(\"Connectez vous pour ajouter aux favoris!\", {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n    }\n\n\n\n}\n\n//Post or delete new Paint to the list//\nconst addRemovePaintToList = (list, paintId, index) => {\n\n    let tempList = [...listList]\n\n    if (isLogged) {\n\n        if (list.boolAdded === false)\n            axios.get(URLDayl + \"userLists/addPaintingToList\", { params: { listId: list.id, paintingId: paintId } }\n            )\n                .then((response) => {\n\n                    tempList[index].boolAdded = true\n                      tempList[index].countItems = tempList[index].countItems +1;\n                    setListList(tempList)\n\n                    toast.success(\"Oeuvre ajoutée à la liste!\", {\n                        position: \"top-right\",\n                        autoClose: 3000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n\n                });\n        else\n            axios.get(URLDayl + \"userLists/removePaintingFromList\", { params: { listId: list.id, paintingId: paintId } }\n            )\n                .then((response) => {\n                    tempList[index].boolAdded = false\n                    tempList[index].countItems = tempList[index].countItems -1;\n                    setListList(tempList)\n\n\n                    toast.success(\"Oeuvre retirée de la liste!\", {\n                        position: \"top-right\",\n                        autoClose: 3000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                });\n\n\n\n    }\n    else {\n        toast.warning(\"Connectez vous pour ajouter à une liste!\", {\n            position: \"top-right\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n    }\n\n\n}\n    return (\n        <div className=\"ListModal2\">\n\n\n            <button className=\"matchAddList\" onClick={() => handleList()} value=\"Lister\" >Lister</button>\n\n            {boolList === true &&\n                <div>\n                    <div className=\"smart-modal-overlay\" style={{ display: \"block\" }}></div>\n                    <div id=\"1777\" className=\"smart-modal-content scrollAuto\" style={{ display: \"block\", transform: \"translate(-50%,-50%)\", top: \"50%\", left: \"50%\", minWidth: \"0\" }}>\n                        <h3>Ajouter à une liste</h3>\n                        <a className=\"smart-modal-close\"><img className=\"img-left\" onClick={() => handleList(listPaint.id)} src={close} alt=\"Trier\" style={{ height: \"20px\" }} /></a>\n                        <div className=\"addToList\">\n\n                            <h4 className=\"mt-b\">Créer une nouvelle liste</h4>\n\n                            <form action=\"\" onSubmit={handleSubmit}>\n                                <div className=\"addListForm\">\n                                    <input onChange={(e) => setListTitle(e.target.value)} value={listTitle} type=\"text\" placeholder=\"Nom de la liste\" />\n                                    <button type=\"submit\">Créer</button>\n                                </div>\n                            </form>\n\n                            <h4 className=\"mt-c mb-a\">Liste existante</h4>\n\n                            {/* <!-- Liste disponible - début --> */}\n                            {listList.length > 0 && listList.map((list, index) => (\n                                <div className=\"listDetails\" style={{ display: \"flex\" }}>\n                                                               <a className=\"\" onClick={() => addRemovePaintToList(list, listPaint.id, index)} /* to={`../../view/ListeAmateurPage.js/${list.id}`} state={list.id} */ style={{ left: \"50px\", top: \"8px\" }}>{list.listName}  ({list.countItems})</a>\n                                        {/* <div className=\"listItems\">{list.countItems} oeuvres</div> */}\n                                    <button type=\"button\" onClick={() => addRemovePaintToList(list, listPaint.id, index)} className={list.boolAdded === true ? \"addedToThisList\" : \"addToThisList\"}  ></button>\n                                </div>))}\n\n                            {/* <!-- Liste disponible - fin -->*/}\n\n\n                        </div>\n                    </div>\n                </div>\n            }\n\n            {/* <!-- Modal \"ajouter à une liste\" - fin --> */}\n        </div>\n    );\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/general/ListModal2.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "ListModal2",
    "memberof": "src/component/general/ListModal2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/ListModal2.js~ListModal2",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/ListModal2.js",
    "importStyle": "ListModal2",
    "description": "This component is used to add your paint to a list",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "listPaint",
        "description": "paint object to add in list"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "userLists/save : create new list"
      },
      {
        "types": [
          "*"
        ],
        "description": "userLists/byUserId : get user lists"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/component/general/ModalArtist.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"./constantes\"\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\n\n\n\nexport default function ModalArtist({ user, isLogged, listPaint }) {\n\n\n\n    return (\n        <div>\n\n        </div>\n    );\n\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/general/ModalArtist.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "ModalArtist",
    "memberof": "src/component/general/ModalArtist.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/ModalArtist.js~ModalArtist",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/ModalArtist.js",
    "importStyle": "ModalArtist",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "undefined",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "src/component/general/SaveMatch.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { URLDayl } from \"../../services/constantes\"\nimport close from \"../../webapp/img/icons/ico_close_2.svg\"\n\n/**\n * This component is used to save a matching\n * @todo en attente de changement api\n * @param {object} user - user object from api\n *  @param {boolean} isLogged - test if the user is logged\n * @param {object} matchPaint - paint object to add in match\n * @emits - matching/save : save a matching\n */\n\n\nexport default function SaveMatch({ user, isLogged, matchPaint }) {\n\n    const [refreshKey, setRefreshKey] = useState(0);\n    const [boolMatch, setBoolMatch] = useState(false);\n\n\n    //Test Match saved//\n    useEffect(() => {\n\n        if (user && user.matchLiked) {\n            for (let i = 0; i < user.matchLiked.length; i++) {\n\n                if (user.matchLiked[i] === matchPaint.id) {\n                    setBoolMatch(true);\n                }\n\n            }\n        }\n\n    }, [matchPaint]);\n\n\n    function handleClick(e) {\n\n        e.preventDefault()\n\n        if (user) {\n\n            if (boolMatch === false)\n                axios.post(URLDayl + \"matching/save\",\n                    { userId: user.id, paintingId: matchPaint.id, style: \"CONTENT_AND_STYLE\" }, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n                )\n                    .then((response) => {\n                        setRefreshKey(oldKey => oldKey + 1);\n                        setBoolMatch(true)\n                    });\n\n\n        }\n\n    }\n\n\n    return (\n        <div className=\"SaveMatch\">\n\n            <button className=\"matchSave\" onClick={handleClick} type=\"button\">Enregistrer</button>\n\n        </div>\n    );\n\n\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/general/SaveMatch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "SaveMatch",
    "memberof": "src/component/general/SaveMatch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/SaveMatch.js~SaveMatch",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/SaveMatch.js",
    "importStyle": "SaveMatch",
    "description": "This component is used to save a matching",
    "lineNumber": 17,
    "todo": [
      "en attente de changement api"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "matchPaint",
        "description": "paint object to add in match"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "matching/save : save a matching"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "src/component/general/SqueletteFoot.js",
    "content": "import React from \"react\";\nimport \"../../webapp/css/core.css\";\nimport \"../../webapp/css/carousels.css\"\nimport \"../../webapp/css/blocks.css\"\nimport \"../../webapp/css/account.css\"\n\n/**\n * website footer\n * @param {object} user - user object from api\n */\n\nexport default function SqueletteFoot({ user }) {\n  return (\n    <div className=\"SqueletteFoot\">\n\n      <footer></footer>\n      {/* <!-- FOOTER - fin -->\n\n            <!-- APPELS JAVASCRIPT - début --> */}\n      <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n      <script src=\"js/isLoading.min.js\"></script>\n      <script src=\"js/owlCarousel.min.js\"></script>\n      <script src=\"js/colorPicker.min.js\"></script>\n      <script src=\"js/modalBox.min.js\"></script>\n      <script src=\"js/serializeIt.min.js\"></script>\n      <script src=\"js/checkLister.min.js\"></script>\n      <script src=\"js/accordion.min.js\"></script>\n      <script src=\"js/sliderBox.min.js\"></script>\n      <script src=\"js/zoomBox.min.js\"></script>\n      <script src=\"js/niceFileUpload.min.js\"></script>\n      <script src=\"js/gridActions.min.js\"></script>\n      {/* <!-- APPELS JAVASCRIPT - fin --> */}\n    </div>\n  );\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/general/SqueletteFoot.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "SqueletteFoot",
    "memberof": "src/component/general/SqueletteFoot.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/SqueletteFoot.js~SqueletteFoot",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/SqueletteFoot.js",
    "importStyle": "SqueletteFoot",
    "description": "website footer",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/component/general/SqueletteHead.js",
    "content": "import React from \"react\";\nimport { Link } from \"react-router-dom\"\nimport { URLDayl } from \"../../services/constantes\";\nimport { useLocation } from \"react-router\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../webapp/css/core.css\";\nimport \"../../webapp/css/carousels.css\"\nimport \"../../webapp/css/blocks.css\"\nimport \"../../webapp/css/account.css\"\nimport \"../../webapp/css/atelier.css\"\nimport \"../../webapp/css/stats.css\"\nimport \"../../webapp/css/social.css\"\nimport \"../../webapp/css/startpage.css\"\nimport Logo from \"../../webapp/img/logos/logo_1.svg\"\nimport ModProfil from \"../../webapp/img/icons/ico_mod_profile_1.svg\"\nimport ModLikes from \"../../webapp/img/icons/ico_mod_likes_1.svg\"\nimport ModLists from \"../../webapp/img/icons/ico_mod_lists_1.svg\"\nimport ModLogout from \"../../webapp/img/icons/ico_mod_logout_1.svg\"\nimport ModMatching from \"../../webapp/img/icons/ico_mod_matching_1.svg\"\nimport SignInPage from \"../../view/SignInPage\";\nimport defaultLogo from \"../../webapp/img/icons/ico_mod_profile_1.svg\"\nimport explorer from \"../../webapp/img/icons/ico_explorer_2.svg\"\nimport { useState } from \"react\";\nimport ChatMenu from \"../Chat/ChatMenu\";\n\n\n/**\n * website header\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n *  @param {boolean} isLogged - test if the user is logged\n * @emits - users/${user.id} : update user informations\n \n */\n\nexport default function SqueletteHead({user, setUser,isLogged}) {\n  const [LogoLogged, setLogoLogged] = useState(\"\");\n  const [boolChat, setBoolChat] = useState(false);\n\n\n\n\n  useEffect(() => {\n if(isLogged === true)\n      axios.get(URLDayl + `users/${user.id}`, { headers: { \"Access-Control-Allow-Origin\": \"*\", \"Content-Type\": \"application/json\" } }\n        ).then((response) => {\n          setUser(response.data)\n        });\n     \n    }, []);\n\n  \n\n\n\n  // var sheet = document.styleSheets[0];\n  // sheet.insertRule(\":root{--color-2:#4444FF}\");\n\n  // if(isLogged === true){\n\n  //   setLogoLogged(`url(${URLDayl}images/contentUser/${user.id}/${user.iconImage})`)\n  // }\n\n  function handleChat() {\n\n    if (boolChat === true) {\n      setBoolChat(false);\n    }\n    else {\n      setBoolChat(true);\n    }\n  }\n\n  return (\n    <div className=\"SqueletteHead\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>DAYL - ARTISTE</title>\n        <meta name=\"description\" content=\"Description de la page\" />\n        <link rel=\"canonical\" href=\"/URLDayl du lien canonique de cette page\" />\n        <link rel=\"preconnect\" href=\"/https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"/https://fonts.gstatic.com\" />\n        <link\n          href=\"/https://fonts.googleapis.com/css2?family=Poppins:wght@200;400;600&display=swap\"\n          rel=\"stylesheet\" \n        />\n      </head>\n\n      {/* HEADER - début */}\n      <header>\n        {/* ******************************************************\n          ***********************************************************\n\n          MENU BARRE HORIZONTALE HAUT DE PAGE - début\n\n          ***********************************************************\n\t\t\t    ****************************************************  */}\n        <nav>\n          {/* <!-- BARRE ARRIÈRE-PLAN - début --> */}\n          <div className=\"topBarBg\"></div>\n          {/* <!-- BARRE ARRIÈRE-PLAN - fin --> */}\n          {/* <!-- LOGO DAYL - début --> */}\n\n          <Link to={{ pathname: \"/\" }}>\n            <a className=\"topBarLogo\" href=\"index.html\" >\n              <img src={Logo} alt=\"Retour à l'accueil\" />\n            </a>\n          </Link>\n          {/* <Link className=\"topMsgIcon\" rel=\"nofollow\" to={{ pathname: \"/StartingPage\" }} style={{right: \"50%\", backgroundImage: `url(${explorer})`,transform: \"translate(50%, 0)\"}}data-tooltip-2=\"Explorer\"></Link> */}\n          {/* <!-- LOGO DAYL - fin --> */}\n          {/* <!-- ICONE RESEAU - début --> */}\n\n          <a className=\"topNetworkIcon\" rel=\"nofollow\" data-tooltip-2=\"Réseau (TO DO)\">\n            <span className=\"topPill\">4</span>\n          </a>\n          {/* <!-- ICONE RESEAU - fin --> */}\n\n\n          {/* <!-- ICONE MESSAGES - début --> */}\n          <a className=\"topMsgIcon\" rel=\"nofollow\" onClick={handleChat} data-tooltip-2=\"Messagerie\">\n            <span className=\"topPill\">4</span>\n          </a>\n          {/* <!-- ICONE MESSAGES - fin --> */}\n\n\n          {/* <!-- ICONE NOTIFICATIONS - début --> */}\n          <a className=\"topNotifIcon\" rel=\"nofollow\" data-tooltip-2=\"Notifications (TO DO)\">\n            <span className=\"topPill\">4</span>\n          </a>\n          {/* <!-- ICONE NOTIFICATIONS - fin --> */}\n\n          {/* <!-- ///////////////////////////////////\n            COMPTE MEMBRE (déconnecté) - début\n            //////////////////////////////////// -->\n            <!-- ICONE COMPTE MEMBRE - début --> */}\n\n          {isLogged === true ?\n            <Link to={{ pathname: `../../view/CompteAmateurPage.js` }} className={!user.iconImage ? \"topBarAcc topAccountIcon\" : \"topBarUser\"}\n              rel=\"nofollow\" /* state={user} */ >\n              <span style={/* user.iconImage !== \"\" &&  */{ backgroundImage: `url(${URLDayl}images/contentUser/${user.id}/${user.iconImage})` } } data-tooltip-2=\"Profil\"></span>\n            </Link>\n            : <Link to={{ pathname: \"../../view/LogIn.js\" }} className={isLogged === false ? \"topBarAcc topAccountIcon\" : \"topBarUser\"}\n              data-target=\"topLogin\" rel=\"nofollow\" data-tooltip-2=\"Connexion/Inscription\" >\n              <span style={{ backgroundImage: isLogged === true && `url(${URLDayl}images/contentUser/${user.id}/${user.iconImage})` }}></span>\n            </Link>}\n\n          {/* <!-- ICONE AVATAR MEMBRE - fin -->\n                  <!-- MODAL RACCOURCIS COMPTE MEMBRE - début --> */}\n          {/* <div id=\"topUserAccount\" className=\"smart-modal-content scrollAuto\">\n            <h3>Mon compte</h3>\n            {user &&\n              <a className=\"smart-modal-close\" style={{ background: URLDayl + `images/contentUser/${user.id}/${user.iconImage}` }}>\n                <img\n                  className=\"img-left\"\n                  src={URLDayl + `images/contentUser/${user.id}/${user.iconImage}`}\n                  alt=\"Trier\"\n                />\n              </a>}\n          </div> */}\n          {/* <!-- MODAL RACCOURCIS COMPTE MEMBRE - fin -->\n                  <!-- ///////////////////////////////////\n                  COMPTE MEMBRE (connecté) - fin\n                //////////////////////////////////// --> */}\n        </nav>\n        {/* <!-- ******************************************************\n                ***********************************************************\n\n                MENU BARRE HORIZONTALE HAUT DE PAGE - fin\n\n                ***********************************************************\n            ******************************************************* -->\n\n<!-- ******************************************************\n                ***********************************************************\n\n                MENU GLISSANT BORD GAUCHE - début\n\n                ***********************************************************\n\t\t\t          ******************************************************* --> */}\n        <nav className=\"menu\">\n          <ul className=\"title-menu\">\n            <li>\n              <a className=\"btmenu\" href=\"javascript:void(0);\"></a>\n              <div className=\"wrap-list principal\">\n                <ul className=\"list\">\n                  <li className=\"titleSubmenu\">\n                    <Link  to={{ pathname: \"/\" }}>\n                      <img\n                        className=\"logo\"\n                        src={Logo}\n                        alt=\"AI Artworks - Accueil\"\n                      />\n                    </Link>\n                  </li>\n                  <li className=\"titleSubmenu\">\n                    <Link  className=\"acc\" title=\"aiartworks\" to={{ pathname: \"/StartingPage\" }}>\n                      <span>Présentation</span>\n                    </Link>\n                  </li>\n                  <li className=\"titleSubmenu\">\n                    <a  className=\"thm\">\n                      <span>Thèmes</span>\n                    </a>\n                  </li>\n                  <li className=\"titleSubmenu\">\n                    <a  className=\"art\">\n                      <span>Artistes</span>\n                    </a>\n                  </li>\n                  <li className=\"titleSubmenu\">\n                    <a  className=\"mvm\">\n                      <span>Mouvements Artistiques</span>\n                    </a>\n                  </li>\n                  <li className=\"titleSubmenu\">\n                    <a  className=\"abt\">\n                      <span>A propos</span>\n                    </a>\n                  </li>\n                  <li className=\"titleSubmenu\">\n                    <a  className=\"par\">\n                      <span>Partenaires</span>\n                    </a>\n                  </li>\n                  <li className=\"titleSubmenu\">\n                    <a  className=\"cpt\">\n                      <span>Mon compte</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </li>\n          </ul>\n        </nav>\n        {/* <!-- ******************************************************\n                ***********************************************************\n\n                MENU GLISSANT BORD GAUCHE - fin\n\n                ***********************************************************\n\t\t\t          ******************************************************* --> */}\n      </header>\n      {/* <!-- HEADER - fin --> */}\n\n      {boolChat === true && <ChatMenu boolChat={boolChat} setBoolChat={setBoolChat}/>}\n\n    </div>\n  );\n}\n\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/component/general/SqueletteHead.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "SqueletteHead",
    "memberof": "src/component/general/SqueletteHead.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/general/SqueletteHead.js~SqueletteHead",
    "access": "public",
    "export": true,
    "importPath": "client/src/component/general/SqueletteHead.js",
    "importStyle": "SqueletteHead",
    "description": "website header",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "emits": [
      {
        "types": [
          "*"
        ],
        "description": "users/${user.id} : update user informations"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "src/index.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n   document.getElementById('root')\n);",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/services/Api.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * @ignore\n */\n\nexport default function Api() {\n\n    const [authToken, setauth] = useState(\"\");\n\n    headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      };\n\n      BASE_URL = '/api/dayl';\n\n\n    return ( <div></div>);\n\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/services/Api.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "Api",
    "memberof": "src/services/Api.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/Api.js~Api",
    "access": "public",
    "export": true,
    "importPath": "client/src/services/Api.js",
    "importStyle": "Api",
    "description": "",
    "lineNumber": 8,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "src/services/ScrollToTop.js",
    "content": "import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n  \n\n/**\n * This function is used to scroll to the top of the page when we render a new page\n\n */\n\n\nexport default function GoToTop() {\n  const routePath = useLocation();\n  const onTop = () => {\n    window.scrollTo(0, 0);\n  }\n  useEffect(() => {\n    onTop()\n  }, [routePath]);\n  \n  return null;\n}",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/services/ScrollToTop.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "GoToTop",
    "memberof": "src/services/ScrollToTop.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/services/ScrollToTop.js~GoToTop",
    "access": "public",
    "export": true,
    "importPath": "client/src/services/ScrollToTop.js",
    "importStyle": "GoToTop",
    "description": "This function is used to scroll to the top of the page when we render a new page",
    "lineNumber": 11,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "src/services/constantes.js",
    "content": "\n/**\n * Constant used in the whole website\n\n */\n\nexport const SALT = \"PAINTING_NOVAGEN_ETC\";\nexport const URLDayl = \"http://162.19.52.131:8088/\"\n\n\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/services/constantes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "SALT",
    "memberof": "src/services/constantes.js",
    "static": true,
    "longname": "src/services/constantes.js~SALT",
    "access": "public",
    "export": true,
    "importPath": "client/src/services/constantes.js",
    "importStyle": "{SALT}",
    "description": "Constant used in the whole website",
    "lineNumber": 7,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "URLDayl",
    "memberof": "src/services/constantes.js",
    "static": true,
    "longname": "src/services/constantes.js~URLDayl",
    "access": "public",
    "export": true,
    "importPath": "client/src/services/constantes.js",
    "importStyle": "{URLDayl}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "src/view/ArtistDetailPage.js",
    "content": "import React from \"react\";\nimport Artist from \"../component/ArtistDetailPage/Artist\";\nimport ListPaintArtist from \"../component/ArtistDetailPage/ListPaintArtist\";\nimport SimilarArtist from \"../component/ArtistDetailPage/SimilarArtist\";\nimport { useLocation } from \"react-router-dom\";\n\n\n/**\n * This component display artist Page\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n *  @param {boolean} isLogged - test if the user is logged\n * @param {number} paintId - selected artist Id\n */\n\nexport default function ArtistDetailpage({user,setUser,paintId, isLogged}) {\n\n\n\n    const location = useLocation();\n    paintId =location.state;\n\n\twindow.scrollTo({top: 0});\n\n    return (\n        <div>\n            <Artist paintId =  {paintId}  user = {user} setUser={setUser} isLogged={isLogged}/>\n          \n        </div>\n\n    );\n}\n\n\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/view/ArtistDetailPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "ArtistDetailpage",
    "memberof": "src/view/ArtistDetailPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/ArtistDetailPage.js~ArtistDetailpage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/ArtistDetailPage.js",
    "importStyle": "ArtistDetailpage",
    "description": "This component display artist Page",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "selected artist Id"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/view/Atelier.js",
    "content": "import React from \"react\";\nimport MenuAtelier from \"../component/Atelier/MenuAtelier\"\nimport Accueil from \"../component/Atelier/Accueil\";\nimport Biography from \"../component/Atelier/Biography\";\n\n\n/**\n * This component display workshop Page\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n *  @param {boolean} isLogged - test if the user is logged\n * @param {boolean} setIsLogged - isLogged setter\n */\n\nexport default function Atelier({user,setIsLogged, isLogged,setUser}) {\n  return (\n\n\n    <div>\n       \n      <MenuAtelier user = {user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser}/>\n      <Biography user = {user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser}/>\n\n      \n     \n     \n      {/* <Draft  user = {user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser}/>\n      <ListPaintAtelier  user = {user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser}/>*/}\n      \n    </div> \n  );\n}\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/view/Atelier.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "Atelier",
    "memberof": "src/view/Atelier.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/Atelier.js~Atelier",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/Atelier.js",
    "importStyle": "Atelier",
    "description": "This component display workshop Page",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsLogged",
        "description": "isLogged setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/view/CompteAmateurPage.js",
    "content": "import React from \"react\";\nimport DisplayUser from \"../component/CompteAmateurPage/DisplayUser\";\nimport TabAmateurs from \"../component/CompteAmateurPage/TabAmateur\";\nimport { useLocation } from \"react-router\";\nimport { useState } from \"react\";\n\n\n/**\n * This component display the User Page\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n * @param {boolean} isLogged - test if the user is logged\n * @param {boolean} setIsLogged - isLogged setter\n *  @param {number} isActive - tab selection\n *  @param {number} setIsActive - isActive setter\n */\n\nexport default function CompteAmateurPage({ setIsLogged, isLogged, isActive, setIsActive, user, setUser}) {\n\n  // const { state } = useLocation();\n  // const [user, setUser] = useState(state);\n\nif(!user){\n  return(<div style={{bottom: \"50%\",left: \"50%\", position: \"absolute\"}}></div>)\n}\n  return (\n\n\n    <div>\n      <DisplayUser isActive={isActive} setIsActive={setIsActive} user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser} />\n      <TabAmateurs isActive={isActive} setIsActive={setIsActive} user={user} setIsLogged={setIsLogged} isLogged={isLogged} setUser={setUser} />\n\n    </div>\n  );\n}\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/view/CompteAmateurPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "CompteAmateurPage",
    "memberof": "src/view/CompteAmateurPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/CompteAmateurPage.js~CompteAmateurPage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/CompteAmateurPage.js",
    "importStyle": "CompteAmateurPage",
    "description": "This component display the User Page",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsLogged",
        "description": "isLogged setter"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "isActive",
        "description": "tab selection"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "setIsActive",
        "description": "isActive setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "src/view/ListeAmateurPage.js",
    "content": "import React from \"react\";\n\nimport { useLocation } from \"react-router-dom\";\nimport DisplayInfoList from \"../component/ListeAmateurPage/ DisplayInfoList\";\nimport DisplayList from \"../component/ListeAmateurPage/DisplayList\";\n\n\n/**\n * This component display the List Page\n * @param {object} user - user object from api\n * @param {number} paintId - list Id\n * @param {boolean} isLogged - test if the user is logged\n\n */\n\nexport default function ListeAmateurPage({user,isLogged, paintId}) {\n\n\n\n    const location = useLocation();\n     paintId = location.state;\n\n    return (\n        <div>\n            <DisplayInfoList paintId =  {paintId} user = {user} isLogged = {isLogged}/>\n            <DisplayList paintId =  {paintId} user = {user} isLogged = {isLogged} />\n          \n  \n        </div>\n\n    );\n}\n\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/view/ListeAmateurPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "ListeAmateurPage",
    "memberof": "src/view/ListeAmateurPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/ListeAmateurPage.js~ListeAmateurPage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/ListeAmateurPage.js",
    "importStyle": "ListeAmateurPage",
    "description": "This component display the List Page",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "list Id"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "src/view/MatchingColor.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ColorChooser from \"../component/MatchingColor/ColorChooser\";\nimport ResultMatchingColor from \"../component/MatchingColor/ResultMatchingColor\";\nimport { ColorPicker, useColor } from \"react-color-palette\";\nimport \"react-color-palette/lib/css/styles.css\";\n\n\n/**\n * This component display the Matching Color Page\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n * @param {boolean} isLogged - test if the user is logged\n */\n\nexport default function MatchingColor({ user, setUser, isLogged }) {\n\n    const location = useLocation();\n    const [color, setColor] = useColor();\n\n\n    useEffect(() => {\n        setColor(location.state);\n       \n    }, []);\n    console.log(color)\n    return (\n        <div className=\"MatchingColor\">\n\n            <ColorChooser user={user} setUser={setUser} isLogged={isLogged} color={color} setColor={setColor} />\n\n            <ResultMatchingColor color={color} user={user} setUser={setUser} isLogged={isLogged} />\n        </div>\n\n    );\n}\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/view/MatchingColor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "MatchingColor",
    "memberof": "src/view/MatchingColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/MatchingColor.js~MatchingColor",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/MatchingColor.js",
    "importStyle": "MatchingColor",
    "description": "This component display the Matching Color Page",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/view/MatchingPage.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport PaintingToMatch from \"../component/MatchingResult/PaintingToMatch\";\nimport ResultMatch from \"../component/MatchingResult/ResultMatch\";\n\n/**\n * This component display a Matching Page with a painting from our db\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n * @param {boolean} isLogged - test if the user is logged\n *  @param {number} paintId - paint id\n */\n\nexport default function MatchingPage({ user, setUser, paintId, isLogged }) {\n\n\n    const location = useLocation();\n    paintId = location.state;\n    const [matchingType, setMatchingType] = useState({value:\"STYLE\",text:\"Style\" });\n\n\n    return (\n        <div className=\"MatchingPage\">\n            <PaintingToMatch user={user} matchingType={matchingType} setMatchingType={setMatchingType} paintId={paintId} setUser={setUser} isLogged={isLogged} />\n            <ResultMatch user={user} matchingType={matchingType} setMatchingType={setMatchingType} paintId={paintId} isLogged={isLogged} />\n\n\n        </div>\n\n    );\n}\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/view/MatchingPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "MatchingPage",
    "memberof": "src/view/MatchingPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/MatchingPage.js~MatchingPage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/MatchingPage.js",
    "importStyle": "MatchingPage",
    "description": "This component display a Matching Page with a painting from our db",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "paint id"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "src/view/OpusPage.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Painting from \"../component/OpusPage/Painting\";\nimport SimilarPaint from \"../component/OpusPage/SimilarPaint\";\n\n/**\n * This component display a Painting full page\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n * @param {boolean} isLogged - test if the user is logged\n *  @param {number} paintId - paint id\n *  @param {number} setPaintId - paintId setter\n */\n\nexport default function OpusPage({user,setUser,paintId,setPaintId, isLogged}) {\n\n\n    const location = useLocation();\n     paintId = location.state\n\n\n\n    return (\n        <div className=\"OpusPage\">\n\n        <Painting paintId={paintId} user={user} setUser = {setUser} isLogged={isLogged}/>\n        <SimilarPaint paintId={paintId} user = {user} setUser = {setUser} isLogged={isLogged}/>\n\n        \n        </div>\n\n    );\n}\n\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/view/OpusPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "OpusPage",
    "memberof": "src/view/OpusPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/OpusPage.js~OpusPage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/OpusPage.js",
    "importStyle": "OpusPage",
    "description": "This component display a Painting full page",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "paintId",
        "description": "paint id"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "setPaintId",
        "description": "paintId setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "file",
    "name": "src/view/SignInPage.js",
    "content": "import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport sha1 from \"sha1\";\nimport { set } from \"react-hook-form\";\nimport { SALT, URLDayl } from \"../services/constantes\"\nimport LogIn from \"./LogIn\"\n\n/**\n * @ignore\n */\nexport default function SignInPage({ user, setUser, isLogged, setIsLogged }) {\n\n\n\n  return (\n    <div className=\"SignInPage\">\n\n      <LogIn user={user} setUser={setUser} isLogged={isLogged} setIsLogged={setIsLogged} />\n\n\n\n    </div>\n  );\n}\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/view/SignInPage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "SignInPage",
    "memberof": "src/view/SignInPage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/SignInPage.js~SignInPage",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/SignInPage.js",
    "importStyle": "SignInPage",
    "description": "",
    "lineNumber": 12,
    "ignore": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"user\": *, \"setUser\": *, \"isLogged\": *, \"setIsLogged\": *}"
        ],
        "defaultRaw": {
          "user": null,
          "setUser": null,
          "isLogged": null,
          "setIsLogged": null
        },
        "defaultValue": "{\"user\":null,\"setUser\":null,\"isLogged\":null,\"setIsLogged\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/view/UserInfo.js",
    "content": "import React from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useState } from \"react\";\nimport AmateurInfo from \"../component/UserInfo/AmateurInfo\";\n\n/**\n * This component display the User update Page\n * @param {boolean} isLogged - test if the user is logged\n * @param {object} user - user object from api\n * @param {object} setUser - user setter\n\n */\n\n\nexport default function UserInfo({ isLogged,user, setUser}) {\n\n    // const { state } = useLocation();\n    // const [user, setUser] = useState(state);\n\n    console.log(user);\n\n    return (\n        <div className=\"UserInfo\">\n\n            <AmateurInfo user={user} setUser={setUser} isLogged={isLogged}/>\n           \n        </div>\n\n    );\n}\n\n\n",
    "static": true,
    "longname": "/home/novagen/React/daylreact/src/view/UserInfo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "UserInfo",
    "memberof": "src/view/UserInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/view/UserInfo.js~UserInfo",
    "access": "public",
    "export": true,
    "importPath": "client/src/view/UserInfo.js",
    "importStyle": "UserInfo",
    "description": "This component display the User update Page",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isLogged",
        "description": "test if the user is logged"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "user object from api"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "setUser",
        "description": "user setter"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "sudo apt install npm\n\n#dans dayl-react:\nnpm i\nnpm start",
    "longname": "/home/novagen/React/daylreact/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n    \"name\": \"client\",\n    \"version\": \"0.1.0\",\n    \"private\": true,\n    \"proxy\": \"http://162.19.52.131:8088\",\n    \"dependencies\": {\n        \"@emoji-mart/data\": \"^1.0.2\",\n        \"@mickyballadelli/react-tenor17\": \"^3.0.0\",\n        \"animate.css\": \"^4.1.1\",\n        \"atom-react-color\": \"^2.13.3\",\n        \"axios\": \"^0.24.0\",\n        \"better-docs\": \"^2.7.2\",\n        \"carousel\": \"^0.0.3\",\n        \"css-loader\": \"^6.7.1\",\n        \"dayjs\": \"^1.11.3\",\n        \"emoji-mart\": \"^5.1.0\",\n        \"emoji-picker-react\": \"^3.5.1\",\n        \"esdoc-flow-type-plugin\": \"^1.1.0\",\n        \"esdoc-jsx-plugin\": \"^1.0.0\",\n        \"esdoc-lint-plugin\": \"^1.0.2\",\n        \"esdoc-publish-markdown-plugin\": \"^1.1.0\",\n        \"esdoc-react-plugin\": \"^1.0.1\",\n        \"express\": \"^4.17.1\",\n        \"hammerjs\": \"^2.0.8\",\n        \"jquery\": \"^3.6.0\",\n        \"jsdoc\": \"^3.6.11\",\n        \"mui\": \"^0.0.1\",\n        \"nodemon\": \"^2.0.15\",\n        \"react\": \"^17.0.2\",\n        \"react-bootstrap\": \"^2.0.2\",\n        \"react-collapsible\": \"^2.8.4\",\n        \"react-color\": \"^2.19.3\",\n        \"react-color-palette\": \"^6.2.0\",\n        \"react-dom\": \"^17.0.2\",\n        \"react-helmet\": \"^6.1.0\",\n        \"react-hook-form\": \"^7.30.0\",\n        \"react-loading\": \"^2.0.3\",\n        \"react-multi-carousel\": \"^2.8.0\",\n        \"react-router\": \"^6.0.2\",\n        \"react-router-dom\": \"^6.0.2\",\n        \"react-scripts\": \"^5.0.1\",\n        \"react-select\": \"^5.3.2\",\n        \"react-share\": \"^4.4.0\",\n        \"react-tabs\": \"^4.1.0\",\n        \"react-toastify\": \"^9.0.4\",\n        \"react-use-cookie\": \"^1.4.0\",\n        \"sha1\": \"^1.1.1\",\n        \"slick-carousel\": \"^1.8.1\",\n        \"style-loader\": \"^3.3.1\",\n        \"truncate\": \"^3.0.0\",\n        \"web-vitals\": \"^1.0.1\"\n    },\n    \"scripts\": {\n        \"start\": \"react-scripts start\",\n        \"build\": \"react-scripts build\",\n        \"test\": \"react-scripts test\",\n        \"eject\": \"react-scripts eject\",\n        \"storybook\": \"start-storybook -p 6006 -s public\",\n        \"build-storybook\": \"build-storybook -s public\",\n        \"docs\": \"jsdoc -c jsdoc.conf.json\"\n    },\n    \"eslintConfig\": {\n        \"extends\": [\n            \"react-app\",\n            \"react-app/jest\"\n        ],\n        \"overrides\": [\n            {\n                \"files\": [\n                    \"**/*.stories.*\"\n                ],\n                \"rules\": {\n                    \"import/no-anonymous-default-export\": \"off\"\n                }\n            }\n        ]\n    },\n    \"browserslist\": {\n        \"production\": [\n            \">0.2%\",\n            \"not dead\",\n            \"not op_mini all\"\n        ],\n        \"development\": [\n            \"last 1 chrome version\",\n            \"last 1 firefox version\",\n            \"last 1 safari version\"\n        ]\n    },\n    \"devDependencies\": {\n        \"@babel/preset-react\": \"^7.17.12\",\n        \"esdoc\": \"^1.1.0\",\n        \"esdoc-standard-plugin\": \"^1.0.0\",\n        \"react-prismazoom\": \"^3.0.3\"\n    }\n}\n",
    "longname": "/home/novagen/React/daylreact/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]